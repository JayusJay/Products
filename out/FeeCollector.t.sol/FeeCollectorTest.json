{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "testERC20Withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "testEthWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b506127ba806100316000396000f3fe6080604052600436106200007d5760003560e01c8063ba414fa61162000054578063ba414fa61462000110578063ca1016c41462000139578063f8ccbf47146200015e578063fa7626d4146200018057600080fd5b80630a9254e4146200008a5780633a76846314620000a45780634249e34c14620000eb57600080fd5b366200008557005b600080fd5b3480156200009757600080fd5b50620000a26200019c565b005b348015620000b157600080fd5b50620000ce737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000f857600080fd5b50620000a26200010a36600462000ec4565b6200029b565b3480156200011d57600080fd5b506200012862000763565b6040519015158152602001620000e2565b3480156200014657600080fd5b50620000a26200015836600462000ec4565b62000898565b3480156200016b57600080fd5b50600054620001289062010000900460ff1681565b3480156200018d57600080fd5b50600054620001289060ff1681565b604051620001aa9062000e92565b604051809103906000f080158015620001c7573d6000803e3d6000fd5b50600860006101000a8154816001600160a01b0302191690836001600160a01b0316021790555030701d6329f1c35ca4bfabb9f56100000000006040516200020f9062000ea0565b60808082526004908201526315195cdd60e21b60a082015260c0602082018190526003908201526254544b60e81b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f08015801562000278573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b60095460085460405163a9059cbb60e01b81526001600160a01b0391821660048201526c0c9f2c9cd04674edea40000000602482015291169063a9059cbb906044016020604051808303816000875af1158015620002fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000323919062000eeb565b50737109709ecfa91a80626ff3989d68f67f5b1dd12d634c63e5626001600160a01b03831630148015906200036057506001600160a01b03831615155b6040518263ffffffff1660e01b815260040162000381911515815260200190565b600060405180830381600087803b1580156200039c57600080fd5b505af1158015620003b1573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200040b57600080fd5b505af115801562000420573d6000803e3d6000fd5b505060408051633d21120560e21b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d935063f48448149250600480830192600092919082900301818387803b1580156200047157600080fd5b505af115801562000486573d6000803e3d6000fd5b50506008546009546040516351cff8d960e01b81526001600160a01b039182166004820152911692506351cff8d99150602401600060405180830381600087803b158015620004d457600080fd5b505af1158015620004e9573d6000803e3d6000fd5b50506009546008546040516370a0823160e01b81526001600160a01b039182166004820152620005799450911691506370a0823190602401602060405180830381865afa1580156200053f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000565919062000f0f565b6c0c9f2c9cd04674edea4000000062000b8a565b6008546009546040516351cff8d960e01b81526001600160a01b0391821660048201529116906351cff8d990602401600060405180830381600087803b158015620005c357600080fd5b505af1158015620005d8573d6000803e3d6000fd5b50506009546008546040516370a0823160e01b81526001600160a01b0391821660048201526200065c9450911691506370a0823190602401602060405180830381865afa1580156200062e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000654919062000f0f565b600062000b8a565b6009546040516370a0823160e01b8152306004820152620006e6916001600160a01b0316906370a0823190602401602060405180830381865afa158015620006a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006ce919062000f0f565b701d6329f1c35ca4bfabb9f561000000000062000b8a565b60085460408051638da5cb5b60e01b8152905162000760926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa15801562000733573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000759919062000f29565b3062000c85565b50565b60008054610100900460ff1615620007845750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620008935760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000815917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000f87565b60408051601f1981840301815290829052620008319162000fad565b6000604051808303816000865af19150503d806000811462000870576040519150601f19603f3d011682016040523d82523d6000602084013e62000875565b606091505b50915050808060200190518101906200088f919062000eeb565b9150505b919050565b6008546040516000916001600160a01b031690678ac7230489e80000908381818185875af1925050503d8060008114620008ef576040519150601f19603f3d011682016040523d82523d6000602084013e620008f4565b606091505b50909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9050634c63e5626001600160a01b03841630148015906200093657506001600160a01b03841615155b6040518263ffffffff1660e01b815260040162000957911515815260200190565b600060405180830381600087803b1580156200097257600080fd5b505af115801562000987573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620009e157600080fd5b505af1158015620009f6573d6000803e3d6000fd5b505060408051633d21120560e21b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d935063f48448149250600480830192600092919082900301818387803b15801562000a4757600080fd5b505af115801562000a5c573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b03166350431ce46040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000ab157600080fd5b505af115801562000ac6573d6000803e3d6000fd5b505060085462000aec92506001600160a01b0316319050678ac7230489e8000062000b8a565b60085460408051631410c73960e21b8152905147926001600160a01b0316916350431ce491600480830192600092919082900301818387803b15801562000b3257600080fd5b505af115801562000b47573d6000803e3d6000fd5b505060085462000b6692506001600160a01b0316319050600062000b8a565b62000b854762000b7f83678ac7230489e8000062000fbb565b62000b8a565b505050565b80821462000c81577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000bfd9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162000c36919062000fe2565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162000c6f91906200101b565b60405180910390a162000c8162000d7f565b5050565b806001600160a01b0316826001600160a01b03161462000c81577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000d0d9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162000d46919062001046565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162000c6f91906200108b565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000e815760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000e1c929160200162000f87565b60408051601f198184030181529082905262000e389162000fad565b6000604051808303816000865af19150503d806000811462000e77576040519150601f19603f3d011682016040523d82523d6000602084013e62000e7c565b606091505b505050505b6000805461ff001916610100179055565b61079880620010b783390190565b610f36806200184f83390190565b6001600160a01b03811681146200076057600080fd5b60006020828403121562000ed757600080fd5b813562000ee48162000eae565b9392505050565b60006020828403121562000efe57600080fd5b8151801515811462000ee457600080fd5b60006020828403121562000f2257600080fd5b5051919050565b60006020828403121562000f3c57600080fd5b815162000ee48162000eae565b6000815160005b8181101562000f6c576020818501810151868301520162000f50565b8181111562000f7c576000828601525b509290920192915050565b6001600160e01b031983168152600062000fa5600483018462000f49565b949350505050565b600062000ee4828462000f49565b6000821982111562000fdd57634e487b7160e01b600052601160045260246000fd5b500190565b6040815260006200100d60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200100d60408301600a815269080808081058dd1d585b60b21b602082015260400190565b6040815260006200107160408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b6040815260006200107160408301600a815269080808081058dd1d585b60b21b60208201526040019056fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61071a8061007e6000396000f3fe60806040526004361061004e5760003560e01c806350431ce41461005a57806351cff8d914610071578063715018a6146100915780638da5cb5b146100a6578063f2fde38b146100d257600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061006f6100f2565b005b34801561007d57600080fd5b5061006f61008c366004610606565b610115565b34801561009d57600080fd5b5061006f6101ae565b3480156100b257600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100de57600080fd5b5061006f6100ed366004610606565b6101c2565b6100fa61023d565b6000546001600160a01b0316476101118282610297565b5050565b61011d61023d565b6101ab6101326000546001600160a01b031690565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a919061062a565b6001600160a01b03841691906102ed565b50565b6101b661023d565b6101c0600061033f565b565b6101ca61023d565b6001600160a01b0381166102345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101ab8161033f565b6000546001600160a01b031633146101c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022b565b600080600080600085875af19050806102e85760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b604482015260640161022b565b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526102e890849061038f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006103e4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104619092919063ffffffff16565b8051909150156102e857808060200190518101906104029190610643565b6102e85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161022b565b60606104708484600085610478565b949350505050565b6060824710156104d95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161022b565b600080866001600160a01b031685876040516104f59190610695565b60006040518083038185875af1925050503d8060008114610532576040519150601f19603f3d011682016040523d82523d6000602084013e610537565b606091505b509150915061054887838387610553565b979650505050505050565b606083156105c25782516000036105bb576001600160a01b0385163b6105bb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161022b565b5081610470565b61047083838151156105d75781518083602001fd5b8060405162461bcd60e51b815260040161022b91906106b1565b6001600160a01b03811681146101ab57600080fd5b60006020828403121561061857600080fd5b8135610623816105f1565b9392505050565b60006020828403121561063c57600080fd5b5051919050565b60006020828403121561065557600080fd5b8151801515811461062357600080fd5b60005b83811015610680578181015183820152602001610668565b8381111561068f576000848401525b50505050565b600082516106a7818460208701610665565b9190910192915050565b60208152600082518060208401526106d0816040850160208701610665565b601f01601f1916919091016040019291505056fea2646970667358221220d95940354243e711e013a7104a0aaff98ddf4f5b6d77383ab6722f8b51e2ff8964736f6c634300080f0033608060405260405162000f3638038062000f368339810160408190526200002691620001fc565b838360036200003683826200031d565b5060046200004582826200031d565b5050506200005a82826200006460201b60201c565b5050505062000410565b6001600160a01b038216620000bf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000d39190620003e9565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015757600080fd5b81516001600160401b03808211156200017457620001746200012f565b604051601f8301601f19908116603f011681019082821181831017156200019f576200019f6200012f565b81604052838152602092508683858801011115620001bc57600080fd5b600091505b83821015620001e05785820183015181830184015290820190620001c1565b83821115620001f25760008385830101525b9695505050505050565b600080600080608085870312156200021357600080fd5b84516001600160401b03808211156200022b57600080fd5b620002398883890162000145565b955060208701519150808211156200025057600080fd5b506200025f8782880162000145565b604087015190945090506001600160a01b03811681146200027f57600080fd5b6060959095015193969295505050565b600181811c90821680620002a457607f821691505b602082108103620002c557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012a57600081815260208120601f850160051c81016020861015620002f45750805b601f850160051c820191505b81811015620003155782815560010162000300565b505050505050565b81516001600160401b038111156200033957620003396200012f565b62000351816200034a84546200028f565b84620002cb565b602080601f831160018114620003895760008415620003705750858301515b600019600386901b1c1916600185901b17855562000315565b600085815260208120601f198616915b82811015620003ba5788860151825594840194600190910190840162000399565b5085821015620003d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082198211156200040b57634e487b7160e01b600052601160045260246000fd5b500190565b610b1680620004206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac146101ee578063a457c2d714610201578063a9059cbb14610214578063dd62ed3e1461022757600080fd5b806340c10f191461019757806356189cb4146101aa57806370a08231146101bd57806395d89b41146101e657600080fd5b8063222f5be0116100d3578063222f5be01461014d57806323b872dd14610162578063313ce56714610175578063395093511461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261023a565b60405161010f9190610954565b60405180910390f35b61012b6101263660046109c5565b6102cc565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61016061015b3660046109ef565b6102e4565b005b61012b6101703660046109ef565b6102f4565b6040516012815260200161010f565b61012b6101923660046109c5565b610318565b6101606101a53660046109c5565b61033a565b6101606101b83660046109ef565b610348565b61013f6101cb366004610a2b565b6001600160a01b031660009081526020819052604090205490565b610102610353565b6101606101fc3660046109c5565b610362565b61012b61020f3660046109c5565b61036c565b61012b6102223660046109c5565b6103ec565b61013f610235366004610a4d565b6103fa565b60606003805461024990610a80565b80601f016020809104026020016040519081016040528092919081815260200182805461027590610a80565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b5050505050905090565b6000336102da818585610425565b5060019392505050565b6102ef838383610549565b505050565b6000336103028582856106ef565b61030d858585610549565b506001949350505050565b6000336102da81858561032b83836103fa565b6103359190610aba565b610425565b6103448282610763565b5050565b6102ef838383610425565b60606004805461024990610a80565b6103448282610822565b6000338161037a82866103fa565b9050838110156103df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030d8286868403610425565b6000336102da818585610549565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104875760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d6565b6001600160a01b0382166104e85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105ad5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d6565b6001600160a01b03821661060f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d6565b6001600160a01b038316600090815260208190526040902054818110156106875760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d6565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b50505050565b60006106fb84846103fa565b905060001981146106e957818110156107565760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d6565b6106e98484848403610425565b6001600160a01b0382166107b95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d6565b80600260008282546107cb9190610aba565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108825760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d6565b6001600160a01b038216600090815260208190526040902054818110156108f65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d6565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600060208083528351808285015260005b8181101561098157858101830151858201604001528201610965565b81811115610993576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109c057600080fd5b919050565b600080604083850312156109d857600080fd5b6109e1836109a9565b946020939093013593505050565b600080600060608486031215610a0457600080fd5b610a0d846109a9565b9250610a1b602085016109a9565b9150604084013590509250925092565b600060208284031215610a3d57600080fd5b610a46826109a9565b9392505050565b60008060408385031215610a6057600080fd5b610a69836109a9565b9150610a77602084016109a9565b90509250929050565b600181811c90821680610a9457607f821691505b602082108103610ab457634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610adb57634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122049b888d7b6e2fe3e520c41fbb143f032b97adb547426e59e18c533bd19e5e58164736f6c634300080f0033a2646970667358221220a15749c9409384637b1ba089c3e11e66ae73f432950c5466ef21225b01cb7e4d64736f6c634300080f0033",
    "sourceMap": "182:1417:108:-:0;;;1572:26:10;;;-1:-1:-1;;170:28:11;;;;;182:1417:108;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106200007d5760003560e01c8063ba414fa61162000054578063ba414fa61462000110578063ca1016c41462000139578063f8ccbf47146200015e578063fa7626d4146200018057600080fd5b80630a9254e4146200008a5780633a76846314620000a45780634249e34c14620000eb57600080fd5b366200008557005b600080fd5b3480156200009757600080fd5b50620000a26200019c565b005b348015620000b157600080fd5b50620000ce737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000f857600080fd5b50620000a26200010a36600462000ec4565b6200029b565b3480156200011d57600080fd5b506200012862000763565b6040519015158152602001620000e2565b3480156200014657600080fd5b50620000a26200015836600462000ec4565b62000898565b3480156200016b57600080fd5b50600054620001289062010000900460ff1681565b3480156200018d57600080fd5b50600054620001289060ff1681565b604051620001aa9062000e92565b604051809103906000f080158015620001c7573d6000803e3d6000fd5b50600860006101000a8154816001600160a01b0302191690836001600160a01b0316021790555030701d6329f1c35ca4bfabb9f56100000000006040516200020f9062000ea0565b60808082526004908201526315195cdd60e21b60a082015260c0602082018190526003908201526254544b60e81b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f08015801562000278573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b60095460085460405163a9059cbb60e01b81526001600160a01b0391821660048201526c0c9f2c9cd04674edea40000000602482015291169063a9059cbb906044016020604051808303816000875af1158015620002fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000323919062000eeb565b50737109709ecfa91a80626ff3989d68f67f5b1dd12d634c63e5626001600160a01b03831630148015906200036057506001600160a01b03831615155b6040518263ffffffff1660e01b815260040162000381911515815260200190565b600060405180830381600087803b1580156200039c57600080fd5b505af1158015620003b1573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200040b57600080fd5b505af115801562000420573d6000803e3d6000fd5b505060408051633d21120560e21b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d935063f48448149250600480830192600092919082900301818387803b1580156200047157600080fd5b505af115801562000486573d6000803e3d6000fd5b50506008546009546040516351cff8d960e01b81526001600160a01b039182166004820152911692506351cff8d99150602401600060405180830381600087803b158015620004d457600080fd5b505af1158015620004e9573d6000803e3d6000fd5b50506009546008546040516370a0823160e01b81526001600160a01b039182166004820152620005799450911691506370a0823190602401602060405180830381865afa1580156200053f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000565919062000f0f565b6c0c9f2c9cd04674edea4000000062000b8a565b6008546009546040516351cff8d960e01b81526001600160a01b0391821660048201529116906351cff8d990602401600060405180830381600087803b158015620005c357600080fd5b505af1158015620005d8573d6000803e3d6000fd5b50506009546008546040516370a0823160e01b81526001600160a01b0391821660048201526200065c9450911691506370a0823190602401602060405180830381865afa1580156200062e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000654919062000f0f565b600062000b8a565b6009546040516370a0823160e01b8152306004820152620006e6916001600160a01b0316906370a0823190602401602060405180830381865afa158015620006a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006ce919062000f0f565b701d6329f1c35ca4bfabb9f561000000000062000b8a565b60085460408051638da5cb5b60e01b8152905162000760926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa15801562000733573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000759919062000f29565b3062000c85565b50565b60008054610100900460ff1615620007845750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620008935760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000815917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000f87565b60408051601f1981840301815290829052620008319162000fad565b6000604051808303816000865af19150503d806000811462000870576040519150601f19603f3d011682016040523d82523d6000602084013e62000875565b606091505b50915050808060200190518101906200088f919062000eeb565b9150505b919050565b6008546040516000916001600160a01b031690678ac7230489e80000908381818185875af1925050503d8060008114620008ef576040519150601f19603f3d011682016040523d82523d6000602084013e620008f4565b606091505b50909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9050634c63e5626001600160a01b03841630148015906200093657506001600160a01b03841615155b6040518263ffffffff1660e01b815260040162000957911515815260200190565b600060405180830381600087803b1580156200097257600080fd5b505af115801562000987573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620009e157600080fd5b505af1158015620009f6573d6000803e3d6000fd5b505060408051633d21120560e21b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d935063f48448149250600480830192600092919082900301818387803b15801562000a4757600080fd5b505af115801562000a5c573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b03166350431ce46040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000ab157600080fd5b505af115801562000ac6573d6000803e3d6000fd5b505060085462000aec92506001600160a01b0316319050678ac7230489e8000062000b8a565b60085460408051631410c73960e21b8152905147926001600160a01b0316916350431ce491600480830192600092919082900301818387803b15801562000b3257600080fd5b505af115801562000b47573d6000803e3d6000fd5b505060085462000b6692506001600160a01b0316319050600062000b8a565b62000b854762000b7f83678ac7230489e8000062000fbb565b62000b8a565b505050565b80821462000c81577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000bfd9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162000c36919062000fe2565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162000c6f91906200101b565b60405180910390a162000c8162000d7f565b5050565b806001600160a01b0316826001600160a01b03161462000c81577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000d0d9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162000d46919062001046565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162000c6f91906200108b565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000e815760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000e1c929160200162000f87565b60408051601f198184030181529082905262000e389162000fad565b6000604051808303816000865af19150503d806000811462000e77576040519150601f19603f3d011682016040523d82523d6000602084013e62000e7c565b606091505b505050505b6000805461ff001916610100179055565b61079880620010b783390190565b610f36806200184f83390190565b6001600160a01b03811681146200076057600080fd5b60006020828403121562000ed757600080fd5b813562000ee48162000eae565b9392505050565b60006020828403121562000efe57600080fd5b8151801515811462000ee457600080fd5b60006020828403121562000f2257600080fd5b5051919050565b60006020828403121562000f3c57600080fd5b815162000ee48162000eae565b6000815160005b8181101562000f6c576020818501810151868301520162000f50565b8181111562000f7c576000828601525b509290920192915050565b6001600160e01b031983168152600062000fa5600483018462000f49565b949350505050565b600062000ee4828462000f49565b6000821982111562000fdd57634e487b7160e01b600052601160045260246000fd5b500190565b6040815260006200100d60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200100d60408301600a815269080808081058dd1d585b60b21b602082015260400190565b6040815260006200107160408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b6040815260006200107160408301600a815269080808081058dd1d585b60b21b60208201526040019056fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61071a8061007e6000396000f3fe60806040526004361061004e5760003560e01c806350431ce41461005a57806351cff8d914610071578063715018a6146100915780638da5cb5b146100a6578063f2fde38b146100d257600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061006f6100f2565b005b34801561007d57600080fd5b5061006f61008c366004610606565b610115565b34801561009d57600080fd5b5061006f6101ae565b3480156100b257600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100de57600080fd5b5061006f6100ed366004610606565b6101c2565b6100fa61023d565b6000546001600160a01b0316476101118282610297565b5050565b61011d61023d565b6101ab6101326000546001600160a01b031690565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a919061062a565b6001600160a01b03841691906102ed565b50565b6101b661023d565b6101c0600061033f565b565b6101ca61023d565b6001600160a01b0381166102345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101ab8161033f565b6000546001600160a01b031633146101c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022b565b600080600080600085875af19050806102e85760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b604482015260640161022b565b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526102e890849061038f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006103e4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104619092919063ffffffff16565b8051909150156102e857808060200190518101906104029190610643565b6102e85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161022b565b60606104708484600085610478565b949350505050565b6060824710156104d95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161022b565b600080866001600160a01b031685876040516104f59190610695565b60006040518083038185875af1925050503d8060008114610532576040519150601f19603f3d011682016040523d82523d6000602084013e610537565b606091505b509150915061054887838387610553565b979650505050505050565b606083156105c25782516000036105bb576001600160a01b0385163b6105bb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161022b565b5081610470565b61047083838151156105d75781518083602001fd5b8060405162461bcd60e51b815260040161022b91906106b1565b6001600160a01b03811681146101ab57600080fd5b60006020828403121561061857600080fd5b8135610623816105f1565b9392505050565b60006020828403121561063c57600080fd5b5051919050565b60006020828403121561065557600080fd5b8151801515811461062357600080fd5b60005b83811015610680578181015183820152602001610668565b8381111561068f576000848401525b50505050565b600082516106a7818460208701610665565b9190910192915050565b60208152600082518060208401526106d0816040850160208701610665565b601f01601f1916919091016040019291505056fea2646970667358221220d95940354243e711e013a7104a0aaff98ddf4f5b6d77383ab6722f8b51e2ff8964736f6c634300080f0033608060405260405162000f3638038062000f368339810160408190526200002691620001fc565b838360036200003683826200031d565b5060046200004582826200031d565b5050506200005a82826200006460201b60201c565b5050505062000410565b6001600160a01b038216620000bf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000d39190620003e9565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015757600080fd5b81516001600160401b03808211156200017457620001746200012f565b604051601f8301601f19908116603f011681019082821181831017156200019f576200019f6200012f565b81604052838152602092508683858801011115620001bc57600080fd5b600091505b83821015620001e05785820183015181830184015290820190620001c1565b83821115620001f25760008385830101525b9695505050505050565b600080600080608085870312156200021357600080fd5b84516001600160401b03808211156200022b57600080fd5b620002398883890162000145565b955060208701519150808211156200025057600080fd5b506200025f8782880162000145565b604087015190945090506001600160a01b03811681146200027f57600080fd5b6060959095015193969295505050565b600181811c90821680620002a457607f821691505b602082108103620002c557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012a57600081815260208120601f850160051c81016020861015620002f45750805b601f850160051c820191505b81811015620003155782815560010162000300565b505050505050565b81516001600160401b038111156200033957620003396200012f565b62000351816200034a84546200028f565b84620002cb565b602080601f831160018114620003895760008415620003705750858301515b600019600386901b1c1916600185901b17855562000315565b600085815260208120601f198616915b82811015620003ba5788860151825594840194600190910190840162000399565b5085821015620003d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082198211156200040b57634e487b7160e01b600052601160045260246000fd5b500190565b610b1680620004206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac146101ee578063a457c2d714610201578063a9059cbb14610214578063dd62ed3e1461022757600080fd5b806340c10f191461019757806356189cb4146101aa57806370a08231146101bd57806395d89b41146101e657600080fd5b8063222f5be0116100d3578063222f5be01461014d57806323b872dd14610162578063313ce56714610175578063395093511461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261023a565b60405161010f9190610954565b60405180910390f35b61012b6101263660046109c5565b6102cc565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61016061015b3660046109ef565b6102e4565b005b61012b6101703660046109ef565b6102f4565b6040516012815260200161010f565b61012b6101923660046109c5565b610318565b6101606101a53660046109c5565b61033a565b6101606101b83660046109ef565b610348565b61013f6101cb366004610a2b565b6001600160a01b031660009081526020819052604090205490565b610102610353565b6101606101fc3660046109c5565b610362565b61012b61020f3660046109c5565b61036c565b61012b6102223660046109c5565b6103ec565b61013f610235366004610a4d565b6103fa565b60606003805461024990610a80565b80601f016020809104026020016040519081016040528092919081815260200182805461027590610a80565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b5050505050905090565b6000336102da818585610425565b5060019392505050565b6102ef838383610549565b505050565b6000336103028582856106ef565b61030d858585610549565b506001949350505050565b6000336102da81858561032b83836103fa565b6103359190610aba565b610425565b6103448282610763565b5050565b6102ef838383610425565b60606004805461024990610a80565b6103448282610822565b6000338161037a82866103fa565b9050838110156103df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030d8286868403610425565b6000336102da818585610549565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104875760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d6565b6001600160a01b0382166104e85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105ad5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d6565b6001600160a01b03821661060f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d6565b6001600160a01b038316600090815260208190526040902054818110156106875760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d6565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b50505050565b60006106fb84846103fa565b905060001981146106e957818110156107565760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d6565b6106e98484848403610425565b6001600160a01b0382166107b95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d6565b80600260008282546107cb9190610aba565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108825760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d6565b6001600160a01b038216600090815260208190526040902054818110156108f65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d6565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600060208083528351808285015260005b8181101561098157858101830151858201604001528201610965565b81811115610993576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109c057600080fd5b919050565b600080604083850312156109d857600080fd5b6109e1836109a9565b946020939093013593505050565b600080600060608486031215610a0457600080fd5b610a0d846109a9565b9250610a1b602085016109a9565b9150604084013590509250925092565b600060208284031215610a3d57600080fd5b610a46826109a9565b9392505050565b60008060408385031215610a6057600080fd5b610a69836109a9565b9150610a77602084016109a9565b90509250929050565b600181811c90821680610a9457607f821691505b602082108103610ab457634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610adb57634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122049b888d7b6e2fe3e520c41fbb143f032b97adb547426e59e18c533bd19e5e58164736f6c634300080f0033a2646970667358221220a15749c9409384637b1ba089c3e11e66ae73f432950c5466ef21225b01cb7e4d64736f6c634300080f0033",
    "sourceMap": "182:1417:108:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;274:140;;;;;;;;;;;;;:::i;:::-;;321:38:11;;;;;;;;;;-1:-1:-1;321:38:11;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:110;;;171:51;;159:2;144:18;321:38:11;;;;;;;;999:563:108;;;;;;;;;;-1:-1:-1;999:563:108;;;;;:::i;:::-;;:::i;1819:584:10:-;;;;;;;;;;;;;:::i;:::-;;;786:14:110;;779:22;761:41;;749:2;734:18;1819:584:10;621:187:110;420:573:108;;;;;;;;;;-1:-1:-1;420:573:108;;;;;:::i;:::-;;:::i;170:28:11:-;;;;;;;;;;-1:-1:-1;170:28:11;;;;;;;;;;;1572:26:10;;;;;;;;;;-1:-1:-1;1572:26:10;;;;;;;;274:140:108;323:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;308:12;;:33;;;;;-1:-1:-1;;;;;308:33:108;;;;;-1:-1:-1;;;;;308:33:108;;;;;;395:4;402;358:49;;;;;:::i;:::-;1220:3:110;1202:22;;;1261:1;1240:19;;;1233:30;-1:-1:-1;;;1294:3:110;1279:19;;1272:35;1345:3;1338:4;1323:20;;1316:33;;;1386:1;1365:19;;;1358:30;-1:-1:-1;;;1419:3:110;1404:19;;1397:34;-1:-1:-1;;;;;1503:32:110;;;1498:2;1483:18;;1476:60;-1:-1:-1;1552:18:110;;1545:34;1463:3;1448:19;358:49:108;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;351:4:108;:56;;-1:-1:-1;;;;;;351:56:108;-1:-1:-1;;;;;351:56:108;;;;;;;;;;274:140::o;999:563::-;1064:4;;1087:12;;1057:50;;-1:-1:-1;;;1057:50:108;;-1:-1:-1;;;;;1087:12:108;;;1057:50;;;1802:51:110;1102:4:108;1869:18:110;;;1862:34;1064:4:108;;;1057:21;;1775:18:110;;1057:50:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;250:64:11;1117:9:108;-1:-1:-1;;;;;1127:21:108;;1143:4;1127:21;;;;:43;;-1:-1:-1;;;;;;1152:18:108;;;;1127:43;1117:54;;;;;;;;;;;;;786:14:110;779:22;761:41;;749:2;734:18;;621:187;1117:54:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1182:14:108;;-1:-1:-1;;;1182:14:108;;-1:-1:-1;;;;;189:32:110;;1182:14:108;;;171:51:110;250:64:11;;-1:-1:-1;1182:8:108;;-1:-1:-1;144:18:110;;1182:14:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1206:17:108;;;-1:-1:-1;;;1206:17:108;;;;250:64:11;;-1:-1:-1;1206:15:108;;-1:-1:-1;1206:17:108;;;;;274:37:11;;1206:17:108;;;;;;;274:37:11;250:64;1206:17:108;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1233:12:108;;1255:4;;1233:27;;-1:-1:-1;;;1233:27:108;;-1:-1:-1;;;;;1255:4:108;;;1233:27;;;171:51:110;1233:12:108;;;-1:-1:-1;1233:21:108;;-1:-1:-1;144:18:110;;1233:27:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1286:4:108;;1310:12;;1279:45;;-1:-1:-1;;;1279:45:108;;-1:-1:-1;;;;;1310:12:108;;;1279:45;;;171:51:110;1270:61:108;;-1:-1:-1;1286:4:108;;;-1:-1:-1;1279:22:108;;144:18:110;;1279:45:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1326:4;1270:8;:61::i;:::-;1342:12;;1364:4;;1342:27;;-1:-1:-1;;;1342:27:108;;-1:-1:-1;;;;;1364:4:108;;;1342:27;;;171:51:110;1342:12:108;;;:21;;144:18:110;;1342:27:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1395:4:108;;1419:12;;1388:45;;-1:-1:-1;;;1388:45:108;;-1:-1:-1;;;;;1419:12:108;;;1388:45;;;171:51:110;1379:58:108;;-1:-1:-1;1395:4:108;;;-1:-1:-1;1388:22:108;;144:18:110;;1388:45:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1435:1;1379:8;:58::i;:::-;1463:4;;1456:37;;-1:-1:-1;;;1456:37:108;;1487:4;1456:37;;;171:51:110;1447:53:108;;-1:-1:-1;;;;;1463:4:108;;1456:22;;144:18:110;;1456:37:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1495:4;1447:8;:53::i;:::-;1519:12;;:20;;;-1:-1:-1;;;1519:20:108;;;;1510:45;;-1:-1:-1;;;;;1519:12:108;;:18;;:20;;;;;;;;;;;;;;:12;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1549:4;1510:8;:45::i;:::-;999:563;:::o;1819:584:10:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:10;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;1802:51:110;;;-1:-1:-1;;;1869:18:110;;;1862:34;2196:43:10;;;;;;;;;1775:18:110;;;2196:43:10;;;-1:-1:-1;;1671:64:10;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:10;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:10:o;420:573:108:-;502:12;;494:47;;477:12;;-1:-1:-1;;;;;502:12:108;;528:8;;477:12;494:47;477:12;494:47;528:8;502:12;494:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;476:65:108;;-1:-1:-1;250:64:11;;-1:-1:-1;568:9:108;-1:-1:-1;;;;;578:21:108;;594:4;578:21;;;;:43;;-1:-1:-1;;;;;;603:18:108;;;;578:43;568:54;;;;;;;;;;;;;786:14:110;779:22;761:41;;749:2;734:18;;621:187;568:54:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;633:14:108;;-1:-1:-1;;;633:14:108;;-1:-1:-1;;;;;189:32:110;;633:14:108;;;171:51:110;250:64:11;;-1:-1:-1;633:8:108;;-1:-1:-1;144:18:110;;633:14:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;657:17:108;;;-1:-1:-1;;;657:17:108;;;;250:64:11;;-1:-1:-1;657:15:108;;-1:-1:-1;657:17:108;;;;;274:37:11;;657:17:108;;;;;;;274:37:11;250:64;657:17:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;684:12;;;;;;;;;-1:-1:-1;;;;;684:12:108;-1:-1:-1;;;;;684:27:108;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;740:12:108;;723:49;;-1:-1:-1;;;;;;740:12:108;732:29;;-1:-1:-1;763:8:108;723;:49::i;:::-;838:12;;:29;;;-1:-1:-1;;;838:29:108;;;;807:21;;-1:-1:-1;;;;;838:12:108;;:27;;:29;;;;;783:21;;838:29;;;;;;;783:21;838:12;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;894:12:108;;877:42;;-1:-1:-1;;;;;;894:12:108;886:29;;-1:-1:-1;894:12:108;877:8;:42::i;:::-;929:57;938:21;961:24;:13;977:8;961:24;:::i;:::-;929:8;:57::i;:::-;466:527;;420:573;:::o;5202:262:10:-;5264:1;5259;:6;5255:203;;5286:41;;;;;4808:2:110;4790:21;;;4847:2;4827:18;;;4820:30;4886:34;4881:2;4866:18;;4859:62;-1:-1:-1;;;4952:2:110;4937:18;;4930:32;4994:3;4979:19;;4606:398;5286:41:10;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;3615:277::-;3683:1;-1:-1:-1;;;;;3678:6:10;:1;-1:-1:-1;;;;;3678:6:10;;3674:212;;3705:44;;;;;6245:2:110;6227:21;;;6284:2;6264:18;;;6257:30;6323:34;6318:2;6303:18;;6296:62;-1:-1:-1;;;6389:2:110;6374:18;;6367:35;6434:3;6419:19;;6043:401;3705:44:10;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;7409:51:110;;;-1:-1:-1;;;7476:18:110;;;7469:34;;;;2705:4:10;7519:18:110;;;7512:34;2482:11:10;;1671:64;2579:43;;7382:18:110;;2645:67:10;;;-1:-1:-1;;2645:67:10;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:10;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:10;2813:7;:14;;-1:-1:-1;;2813:14:10;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;233:131:110:-;-1:-1:-1;;;;;308:31:110;;298:42;;288:70;;354:1;351;344:12;369:247;428:6;481:2;469:9;460:7;456:23;452:32;449:52;;;497:1;494;487:12;449:52;536:9;523:23;555:31;580:5;555:31;:::i;:::-;605:5;369:247;-1:-1:-1;;;369:247:110:o;1907:277::-;1974:6;2027:2;2015:9;2006:7;2002:23;1998:32;1995:52;;;2043:1;2040;2033:12;1995:52;2075:9;2069:16;2128:5;2121:13;2114:21;2107:5;2104:32;2094:60;;2150:1;2147;2140:12;2624:184;2694:6;2747:2;2735:9;2726:7;2722:23;2718:32;2715:52;;;2763:1;2760;2753:12;2715:52;-1:-1:-1;2786:16:110;;2624:184;-1:-1:-1;2624:184:110:o;2813:251::-;2883:6;2936:2;2924:9;2915:7;2911:23;2907:32;2904:52;;;2952:1;2949;2942:12;2904:52;2984:9;2978:16;3003:31;3028:5;3003:31;:::i;3348:336::-;3389:3;3427:5;3421:12;3451:1;3461:128;3475:6;3472:1;3469:13;3461:128;;;3572:4;3557:13;;;3553:24;;3547:31;3534:11;;;3527:52;3490:12;3461:128;;;3607:6;3604:1;3601:13;3598:48;;;3642:1;3633:6;3628:3;3624:16;3617:27;3598:48;-1:-1:-1;3662:16:110;;;;;3348:336;-1:-1:-1;;3348:336:110:o;3689:278::-;-1:-1:-1;;;;;;3874:33:110;;3862:46;;3844:3;3924:37;3958:1;3949:11;;3941:6;3924:37;:::i;:::-;3917:44;3689:278;-1:-1:-1;;;;3689:278:110:o;3972:189::-;4101:3;4126:29;4151:3;4143:6;4126:29;:::i;4376:225::-;4416:3;4447:1;4443:6;4440:1;4437:13;4434:136;;;4492:10;4487:3;4483:20;4480:1;4473:31;4527:4;4524:1;4517:15;4555:4;4552:1;4545:15;4434:136;-1:-1:-1;4586:9:110;;4376:225::o;5173:348::-;5403:2;5392:9;5385:21;5366:4;5423:49;5468:2;5457:9;5453:18;5086:2;5074:15;;-1:-1:-1;;;5114:4:110;5105:14;;5098:36;5159:2;5150:12;;5009:159;5423:49;5415:57;;5508:6;5503:2;5492:9;5488:18;5481:34;5173:348;;;;:::o;5690:::-;5920:2;5909:9;5902:21;5883:4;5940:49;5985:2;5974:9;5970:18;5603:2;5591:15;;-1:-1:-1;;;5631:4:110;5622:14;;5615:36;5676:2;5667:12;;5526:159;6449:374;6679:2;6668:9;6661:21;6642:4;6699:49;6744:2;6733:9;6729:18;5086:2;5074:15;;-1:-1:-1;;;5114:4:110;5105:14;;5098:36;5159:2;5150:12;;5009:159;6699:49;-1:-1:-1;;;;;6784:32:110;;;;6779:2;6764:18;;;;6757:60;;;;-1:-1:-1;6691:57:110;6449:374::o;6828:::-;7058:2;7047:9;7040:21;7021:4;7078:49;7123:2;7112:9;7108:18;5603:2;5591:15;;-1:-1:-1;;;5631:4:110;5622:14;;5615:36;5676:2;5667:12;;5526:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testERC20Withdraw(address)": "4249e34c",
    "testEthWithdraw(address)": "ca1016c4",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"testERC20Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"testEthWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/FeeCollector.t.sol\":\"FeeCollectorTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":3xcaliSwap/=lib/3xcaliSwap/contracts/\",\":3xcaliswap/=lib/3xcaliswap/\",\":@core/=lib/3xcaliSwap/contracts/core/\",\":@openzeppelin/=lib/3xcaliSwap/node_modules/@openzeppelin/\",\":@solmate/=lib/3xcaliSwap/node_modules/solmate/src/\",\":LayerZero/=lib/contracts/lib/LayerZero/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=lib/contracts/contracts/\",\":create3-factory/=lib/create3-factory/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":fraxlend/=lib/fraxlend/\",\":joe-v2/=lib/joe-v2/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":pancake-smart-contracts/=lib/pancake-smart-contracts/\",\":pancake/=lib/pancake-smart-contracts/\",\":solmate/=lib/solmate/\",\":spookyswap-core/=lib/spookyswap-core/contracts/\",\":spookyswap/=lib/spookyswap-core/\",\":sushiswap/=lib/sushiswap/\",\":traderjoe/=lib/joe-v2/src/\",\":uniswap/v3-core/=lib/v3-core/\",\":uniswap/v3-periphery/=lib/v3-periphery/\",\":utils/=lib/contracts/test/utils/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\",\":velodrome/=lib/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x9ef2fa79d3a8dc9aa56f4ff3d496aa1de5a03b2912af074df94f771283145e94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b919cb336dac6418e64911295dc9d4137d566fb1d21fdda5b09d2046aeea36cf\",\"dweb:/ipfs/QmVnLfEqjmkqCbVzpgvZKcpL7M1JXVx5a8iT1M8EQzGyxj\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71\",\"dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"src/CrossChainSwaps/FeeCollector.sol\":{\"keccak256\":\"0x790ccada92ffa1d41edb98f7e14d230a89cbe008ee83a646b79dfe144499fc09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67baf22b62532a235cd561484987b09e64288305321892b44ab6e1025130a0e8\",\"dweb:/ipfs/QmbQeK3Muj4nLfXU2o9d2w4CqrePVDmPZixfYQAkBmBFCz\"]},\"src/mocks/MockERC20.sol\":{\"keccak256\":\"0x6ac58f6aafe22af6bc3a38bec29d32497f0c1c82bd55cfb07ec9c1fec1c24b0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afb2eac40e6e58358af38b102245c15debe25ba238c090c705a64a3e90c8a64b\",\"dweb:/ipfs/QmS3S86FRFvXdBQXTMkDKBa32qa3scrNbvBy1ogHPip2vC\"]},\"test/FeeCollector.t.sol\":{\"keccak256\":\"0xda0956fa514ebca2111d47cdeb888f3a17270e0cc430aa227641bc0d1b959af4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5cad32184e161fe59db01ac41e579f6a26abd06bb0ce4973ff98628b80671a0f\",\"dweb:/ipfs/QmdsocEbBE913ATgXyfEkFv4JeeQQQoUam7cLECFsVGZn3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testERC20Withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testEthWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":3xcaliSwap/=lib/3xcaliSwap/contracts/",
        ":3xcaliswap/=lib/3xcaliswap/",
        ":@core/=lib/3xcaliSwap/contracts/core/",
        ":@openzeppelin/=lib/3xcaliSwap/node_modules/@openzeppelin/",
        ":@solmate/=lib/3xcaliSwap/node_modules/solmate/src/",
        ":LayerZero/=lib/contracts/lib/LayerZero/contracts/",
        ":chainlink/=lib/chainlink/",
        ":contracts/=lib/contracts/contracts/",
        ":create3-factory/=lib/create3-factory/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fraxlend/=lib/fraxlend/",
        ":joe-v2/=lib/joe-v2/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":pancake-smart-contracts/=lib/pancake-smart-contracts/",
        ":pancake/=lib/pancake-smart-contracts/",
        ":solmate/=lib/solmate/",
        ":spookyswap-core/=lib/spookyswap-core/contracts/",
        ":spookyswap/=lib/spookyswap-core/",
        ":sushiswap/=lib/sushiswap/",
        ":traderjoe/=lib/joe-v2/src/",
        ":uniswap/v3-core/=lib/v3-core/",
        ":uniswap/v3-periphery/=lib/v3-periphery/",
        ":utils/=lib/contracts/test/utils/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/",
        ":velodrome/=lib/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/FeeCollector.t.sol": "FeeCollectorTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x9ef2fa79d3a8dc9aa56f4ff3d496aa1de5a03b2912af074df94f771283145e94",
        "urls": [
          "bzz-raw://b919cb336dac6418e64911295dc9d4137d566fb1d21fdda5b09d2046aeea36cf",
          "dweb:/ipfs/QmVnLfEqjmkqCbVzpgvZKcpL7M1JXVx5a8iT1M8EQzGyxj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749",
        "urls": [
          "bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71",
          "dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/CrossChainSwaps/FeeCollector.sol": {
        "keccak256": "0x790ccada92ffa1d41edb98f7e14d230a89cbe008ee83a646b79dfe144499fc09",
        "urls": [
          "bzz-raw://67baf22b62532a235cd561484987b09e64288305321892b44ab6e1025130a0e8",
          "dweb:/ipfs/QmbQeK3Muj4nLfXU2o9d2w4CqrePVDmPZixfYQAkBmBFCz"
        ],
        "license": "MIT"
      },
      "src/mocks/MockERC20.sol": {
        "keccak256": "0x6ac58f6aafe22af6bc3a38bec29d32497f0c1c82bd55cfb07ec9c1fec1c24b0e",
        "urls": [
          "bzz-raw://afb2eac40e6e58358af38b102245c15debe25ba238c090c705a64a3e90c8a64b",
          "dweb:/ipfs/QmS3S86FRFvXdBQXTMkDKBa32qa3scrNbvBy1ogHPip2vC"
        ],
        "license": "MIT"
      },
      "test/FeeCollector.t.sol": {
        "keccak256": "0xda0956fa514ebca2111d47cdeb888f3a17270e0cc430aa227641bc0d1b959af4",
        "urls": [
          "bzz-raw://5cad32184e161fe59db01ac41e579f6a26abd06bb0ce4973ff98628b80671a0f",
          "dweb:/ipfs/QmdsocEbBE913ATgXyfEkFv4JeeQQQoUam7cLECFsVGZn3"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/FeeCollector.t.sol",
    "id": 47416,
    "exportedSymbols": {
      "Context": [
        29937
      ],
      "DSTest": [
        2501
      ],
      "ERC20": [
        28483
      ],
      "FeeCollector": [
        41904
      ],
      "FeeCollectorTest": [
        47415
      ],
      "IERC20": [
        28561
      ],
      "IERC20Metadata": [
        29268
      ],
      "MockERC20": [
        44544
      ],
      "Ownable": [
        27566
      ],
      "SafeERC20": [
        29585
      ],
      "SafeTransferLib": [
        31683
      ],
      "Script": [
        2764
      ],
      "StdStorage": [
        5792
      ],
      "Test": [
        5694
      ],
      "Vm": [
        7799
      ],
      "console": [
        15863
      ],
      "console2": [
        23927
      ],
      "stdError": [
        5764
      ],
      "stdJson": [
        3124
      ],
      "stdMath": [
        7033
      ],
      "stdStorage": [
        6894
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1561:108",
    "nodes": [
      {
        "id": 47171,
        "nodeType": "PragmaDirective",
        "src": "39:24:108",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 47172,
        "nodeType": "ImportDirective",
        "src": "65:28:108",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47416,
        "sourceUnit": 7034,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47173,
        "nodeType": "ImportDirective",
        "src": "94:49:108",
        "nodes": [],
        "absolutePath": "src/CrossChainSwaps/FeeCollector.sol",
        "file": "../src/CrossChainSwaps/FeeCollector.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47416,
        "sourceUnit": 41905,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47174,
        "nodeType": "ImportDirective",
        "src": "144:36:108",
        "nodes": [],
        "absolutePath": "src/mocks/MockERC20.sol",
        "file": "../src/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47416,
        "sourceUnit": 44545,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47415,
        "nodeType": "ContractDefinition",
        "src": "182:1417:108",
        "nodes": [
          {
            "id": 47179,
            "nodeType": "VariableDeclaration",
            "src": "222:25:108",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "feeCollector",
            "nameLocation": "235:12:108",
            "scope": 47415,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FeeCollector_$41904",
              "typeString": "contract FeeCollector"
            },
            "typeName": {
              "id": 47178,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47177,
                "name": "FeeCollector",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41904,
                "src": "222:12:108"
              },
              "referencedDeclaration": 41904,
              "src": "222:12:108",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FeeCollector_$41904",
                "typeString": "contract FeeCollector"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 47182,
            "nodeType": "VariableDeclaration",
            "src": "253:14:108",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mock",
            "nameLocation": "263:4:108",
            "scope": 47415,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$44544",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 47181,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47180,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44544,
                "src": "253:9:108"
              },
              "referencedDeclaration": 44544,
              "src": "253:9:108",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$44544",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 47207,
            "nodeType": "FunctionDefinition",
            "src": "274:140:108",
            "nodes": [],
            "body": {
              "id": 47206,
              "nodeType": "Block",
              "src": "298:116:108",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47185,
                      "name": "feeCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47179,
                      "src": "308:12:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeCollector_$41904",
                        "typeString": "contract FeeCollector"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "323:16:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FeeCollector_$41904_$",
                          "typeString": "function () returns (contract FeeCollector)"
                        },
                        "typeName": {
                          "id": 47187,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 47186,
                            "name": "FeeCollector",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 41904,
                            "src": "327:12:108"
                          },
                          "referencedDeclaration": 41904,
                          "src": "327:12:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FeeCollector_$41904",
                            "typeString": "contract FeeCollector"
                          }
                        }
                      },
                      "id": 47189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "323:18:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeCollector_$41904",
                        "typeString": "contract FeeCollector"
                      }
                    },
                    "src": "308:33:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeCollector_$41904",
                      "typeString": "contract FeeCollector"
                    }
                  },
                  "id": 47191,
                  "nodeType": "ExpressionStatement",
                  "src": "308:33:108"
                },
                {
                  "expression": {
                    "id": 47204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47192,
                      "name": "mock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47182,
                      "src": "351:4:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$44544",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "54657374",
                          "id": 47196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "372:6:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                            "typeString": "literal_string \"Test\""
                          },
                          "value": "Test"
                        },
                        {
                          "hexValue": "54544b",
                          "id": 47197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "380:5:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_12b92eebe3668eaf63dd126f9d2687a4a809e861dd663bbd8065d11d346debaa",
                            "typeString": "literal_string \"TTK\""
                          },
                          "value": "TTK"
                        },
                        {
                          "arguments": [
                            {
                              "id": 47200,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "395:4:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FeeCollectorTest_$47415",
                                "typeString": "contract FeeCollectorTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FeeCollectorTest_$47415",
                                "typeString": "contract FeeCollectorTest"
                              }
                            ],
                            "id": 47199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "387:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47198,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "387:7:108",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "387:13:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "31653430",
                          "id": 47202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "402:4:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000000000000000000000000_by_1",
                            "typeString": "int_const 1000...(33 digits omitted)...0000"
                          },
                          "value": "1e40"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                            "typeString": "literal_string \"Test\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_12b92eebe3668eaf63dd126f9d2687a4a809e861dd663bbd8065d11d346debaa",
                            "typeString": "literal_string \"TTK\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000000000000000000000000_by_1",
                            "typeString": "int_const 1000...(33 digits omitted)...0000"
                          }
                        ],
                        "id": 47195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "358:13:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_MockERC20_$44544_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 47194,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 47193,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44544,
                            "src": "362:9:108"
                          },
                          "referencedDeclaration": 44544,
                          "src": "362:9:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$44544",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 47203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "358:49:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$44544",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "351:56:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$44544",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 47205,
                  "nodeType": "ExpressionStatement",
                  "src": "351:56:108"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "283:5:108",
            "parameters": {
              "id": 47183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "288:2:108"
            },
            "returnParameters": {
              "id": 47184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "298:0:108"
            },
            "scope": 47415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47303,
            "nodeType": "FunctionDefinition",
            "src": "420:573:108",
            "nodes": [],
            "body": {
              "id": 47302,
              "nodeType": "Block",
              "src": "466:527:108",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    47213,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47213,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "482:7:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 47302,
                      "src": "477:12:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 47212,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "477:4:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 47223,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 47221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "538:2:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 47216,
                              "name": "feeCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47179,
                              "src": "502:12:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FeeCollector_$41904",
                                "typeString": "contract FeeCollector"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FeeCollector_$41904",
                                "typeString": "contract FeeCollector"
                              }
                            ],
                            "id": 47215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "494:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47214,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "494:7:108",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "494:21:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "494:26:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 47220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130",
                          "id": 47219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "528:8:108",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        }
                      ],
                      "src": "494:43:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 47222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "494:47:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "476:65:108"
                },
                {
                  "expression": {
                    "id": 47224,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47213,
                    "src": "551:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47225,
                  "nodeType": "ExpressionStatement",
                  "src": "551:7:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 47241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 47234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 47229,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47209,
                            "src": "578:4:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 47232,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "594:4:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FeeCollectorTest_$47415",
                                  "typeString": "contract FeeCollectorTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FeeCollectorTest_$47415",
                                  "typeString": "contract FeeCollectorTest"
                                }
                              ],
                              "id": 47231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "586:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47230,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "586:7:108",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "586:13:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "578:21:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 47240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 47235,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47209,
                            "src": "603:4:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 47238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "619:1:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 47237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "611:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47236,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "611:7:108",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "611:10:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "603:18:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "578:43:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 47226,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2532,
                        "src": "568:2:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7799",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7410,
                      "src": "568:9:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 47242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "568:54:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47243,
                  "nodeType": "ExpressionStatement",
                  "src": "568:54:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47247,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47209,
                        "src": "642:4:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47244,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2532,
                        "src": "633:2:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7799",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7258,
                      "src": "633:8:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 47248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "633:14:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47249,
                  "nodeType": "ExpressionStatement",
                  "src": "633:14:108"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 47250,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2532,
                        "src": "657:2:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7799",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7307,
                      "src": "657:15:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 47253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:17:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47254,
                  "nodeType": "ExpressionStatement",
                  "src": "657:17:108"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 47255,
                        "name": "feeCollector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47179,
                        "src": "684:12:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FeeCollector_$41904",
                          "typeString": "contract FeeCollector"
                        }
                      },
                      "id": 47257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawNative",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41899,
                      "src": "684:27:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 47258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "684:29:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47259,
                  "nodeType": "ExpressionStatement",
                  "src": "684:29:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47263,
                              "name": "feeCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47179,
                              "src": "740:12:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FeeCollector_$41904",
                                "typeString": "contract FeeCollector"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FeeCollector_$41904",
                                "typeString": "contract FeeCollector"
                              }
                            ],
                            "id": 47262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "732:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47261,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "732:7:108",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "732:21:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "732:29:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 47266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "763:8:108",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 47260,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3882,
                        3907,
                        3920,
                        3936,
                        3978,
                        4020,
                        4062,
                        4099,
                        4136,
                        4173,
                        1035,
                        1060,
                        1090,
                        1115,
                        1174,
                        1199,
                        1229,
                        1254,
                        2354,
                        2389
                      ],
                      "referencedDeclaration": 1229,
                      "src": "723:8:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 47267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "723:49:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47268,
                  "nodeType": "ExpressionStatement",
                  "src": "723:49:108"
                },
                {
                  "assignments": [
                    47270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47270,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "791:13:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 47302,
                      "src": "783:21:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 47269,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "783:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47276,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 47273,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "815:4:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FeeCollectorTest_$47415",
                            "typeString": "contract FeeCollectorTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FeeCollectorTest_$47415",
                            "typeString": "contract FeeCollectorTest"
                          }
                        ],
                        "id": 47272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "807:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47271,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "807:7:108",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "807:13:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 47275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "807:21:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "783:45:108"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 47277,
                        "name": "feeCollector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47179,
                        "src": "838:12:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FeeCollector_$41904",
                          "typeString": "contract FeeCollector"
                        }
                      },
                      "id": 47279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawNative",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41899,
                      "src": "838:27:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 47280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "838:29:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47281,
                  "nodeType": "ExpressionStatement",
                  "src": "838:29:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47285,
                              "name": "feeCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47179,
                              "src": "894:12:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FeeCollector_$41904",
                                "typeString": "contract FeeCollector"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FeeCollector_$41904",
                                "typeString": "contract FeeCollector"
                              }
                            ],
                            "id": 47284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "886:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47283,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "886:7:108",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "886:21:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "886:29:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 47288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "917:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 47282,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3882,
                        3907,
                        3920,
                        3936,
                        3978,
                        4020,
                        4062,
                        4099,
                        4136,
                        4173,
                        1035,
                        1060,
                        1090,
                        1115,
                        1174,
                        1199,
                        1229,
                        1254,
                        2354,
                        2389
                      ],
                      "referencedDeclaration": 1229,
                      "src": "877:8:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 47289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:42:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47290,
                  "nodeType": "ExpressionStatement",
                  "src": "877:42:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47294,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "946:4:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FeeCollectorTest_$47415",
                                "typeString": "contract FeeCollectorTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FeeCollectorTest_$47415",
                                "typeString": "contract FeeCollectorTest"
                              }
                            ],
                            "id": 47293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "938:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47292,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "938:7:108",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "938:13:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "938:21:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 47299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 47297,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47270,
                          "src": "961:13:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 47298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "977:8:108",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "961:24:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47291,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3882,
                        3907,
                        3920,
                        3936,
                        3978,
                        4020,
                        4062,
                        4099,
                        4136,
                        4173,
                        1035,
                        1060,
                        1090,
                        1115,
                        1174,
                        1199,
                        1229,
                        1254,
                        2354,
                        2389
                      ],
                      "referencedDeclaration": 1229,
                      "src": "929:8:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 47300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "929:57:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47301,
                  "nodeType": "ExpressionStatement",
                  "src": "929:57:108"
                }
              ]
            },
            "functionSelector": "ca1016c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEthWithdraw",
            "nameLocation": "429:15:108",
            "parameters": {
              "id": 47210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47209,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "453:4:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 47303,
                  "src": "445:12:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "444:14:108"
            },
            "returnParameters": {
              "id": 47211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:108"
            },
            "scope": 47415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47410,
            "nodeType": "FunctionDefinition",
            "src": "999:563:108",
            "nodes": [],
            "body": {
              "id": 47409,
              "nodeType": "Block",
              "src": "1047:515:108",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47314,
                            "name": "feeCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47179,
                            "src": "1087:12:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FeeCollector_$41904",
                              "typeString": "contract FeeCollector"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FeeCollector_$41904",
                              "typeString": "contract FeeCollector"
                            }
                          ],
                          "id": 47313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1079:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1079:7:108",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1079:21:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653330",
                        "id": 47316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1102:4:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000000"
                        },
                        "value": "1e30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 47309,
                            "name": "mock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47182,
                            "src": "1064:4:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$44544",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$44544",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 47308,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28561,
                          "src": "1057:6:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$28561_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 47310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1057:12:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 47311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28528,
                      "src": "1057:21:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 47317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1057:50:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47318,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:50:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 47334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 47327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 47322,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47305,
                            "src": "1127:4:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 47325,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1143:4:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FeeCollectorTest_$47415",
                                  "typeString": "contract FeeCollectorTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FeeCollectorTest_$47415",
                                  "typeString": "contract FeeCollectorTest"
                                }
                              ],
                              "id": 47324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1135:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47323,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1135:7:108",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1135:13:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1127:21:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 47333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 47328,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47305,
                            "src": "1152:4:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 47331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1168:1:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 47330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1160:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47329,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1160:7:108",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1160:10:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1152:18:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1127:43:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 47319,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2532,
                        "src": "1117:2:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7799",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7410,
                      "src": "1117:9:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 47335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1117:54:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47336,
                  "nodeType": "ExpressionStatement",
                  "src": "1117:54:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47340,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47305,
                        "src": "1191:4:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47337,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2532,
                        "src": "1182:2:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7799",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7258,
                      "src": "1182:8:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 47341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1182:14:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47342,
                  "nodeType": "ExpressionStatement",
                  "src": "1182:14:108"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 47343,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2532,
                        "src": "1206:2:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7799",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7307,
                      "src": "1206:15:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 47346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1206:17:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47347,
                  "nodeType": "ExpressionStatement",
                  "src": "1206:17:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47351,
                        "name": "mock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47182,
                        "src": "1255:4:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$44544",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$44544",
                          "typeString": "contract MockERC20"
                        }
                      ],
                      "expression": {
                        "id": 47348,
                        "name": "feeCollector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47179,
                        "src": "1233:12:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FeeCollector_$41904",
                          "typeString": "contract FeeCollector"
                        }
                      },
                      "id": 47350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41874,
                      "src": "1233:21:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$28561_$returns$__$",
                        "typeString": "function (contract IERC20) external"
                      }
                    },
                    "id": 47352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1233:27:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47353,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:27:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 47361,
                                "name": "feeCollector",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47179,
                                "src": "1310:12:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FeeCollector_$41904",
                                  "typeString": "contract FeeCollector"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FeeCollector_$41904",
                                  "typeString": "contract FeeCollector"
                                }
                              ],
                              "id": 47360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1302:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47359,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1302:7:108",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1302:21:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 47356,
                                "name": "mock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47182,
                                "src": "1286:4:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$44544",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$44544",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 47355,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28561,
                              "src": "1279:6:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$28561_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 47357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1279:12:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$28561",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 47358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28518,
                          "src": "1279:22:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 47363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1279:45:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653330",
                        "id": 47364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1326:4:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000000"
                        },
                        "value": "1e30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000000"
                        }
                      ],
                      "id": 47354,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3882,
                        3907,
                        3920,
                        3936,
                        3978,
                        4020,
                        4062,
                        4099,
                        4136,
                        4173,
                        1035,
                        1060,
                        1090,
                        1115,
                        1174,
                        1199,
                        1229,
                        1254,
                        2354,
                        2389
                      ],
                      "referencedDeclaration": 1229,
                      "src": "1270:8:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 47365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1270:61:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47366,
                  "nodeType": "ExpressionStatement",
                  "src": "1270:61:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47370,
                        "name": "mock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47182,
                        "src": "1364:4:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$44544",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$44544",
                          "typeString": "contract MockERC20"
                        }
                      ],
                      "expression": {
                        "id": 47367,
                        "name": "feeCollector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47179,
                        "src": "1342:12:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FeeCollector_$41904",
                          "typeString": "contract FeeCollector"
                        }
                      },
                      "id": 47369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41874,
                      "src": "1342:21:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$28561_$returns$__$",
                        "typeString": "function (contract IERC20) external"
                      }
                    },
                    "id": 47371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1342:27:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47372,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:27:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 47380,
                                "name": "feeCollector",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47179,
                                "src": "1419:12:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FeeCollector_$41904",
                                  "typeString": "contract FeeCollector"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FeeCollector_$41904",
                                  "typeString": "contract FeeCollector"
                                }
                              ],
                              "id": 47379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1411:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47378,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1411:7:108",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1411:21:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 47375,
                                "name": "mock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47182,
                                "src": "1395:4:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$44544",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$44544",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 47374,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28561,
                              "src": "1388:6:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$28561_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 47376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1388:12:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$28561",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 47377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28518,
                          "src": "1388:22:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 47382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1388:45:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 47383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1435:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 47373,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3882,
                        3907,
                        3920,
                        3936,
                        3978,
                        4020,
                        4062,
                        4099,
                        4136,
                        4173,
                        1035,
                        1060,
                        1090,
                        1115,
                        1174,
                        1199,
                        1229,
                        1254,
                        2354,
                        2389
                      ],
                      "referencedDeclaration": 1229,
                      "src": "1379:8:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 47384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1379:58:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47385,
                  "nodeType": "ExpressionStatement",
                  "src": "1379:58:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 47393,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1487:4:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FeeCollectorTest_$47415",
                                  "typeString": "contract FeeCollectorTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FeeCollectorTest_$47415",
                                  "typeString": "contract FeeCollectorTest"
                                }
                              ],
                              "id": 47392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1479:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47391,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1479:7:108",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1479:13:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 47388,
                                "name": "mock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47182,
                                "src": "1463:4:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$44544",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC20_$44544",
                                  "typeString": "contract MockERC20"
                                }
                              ],
                              "id": 47387,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28561,
                              "src": "1456:6:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$28561_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 47389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1456:12:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$28561",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 47390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28518,
                          "src": "1456:22:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 47395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1456:37:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653430",
                        "id": 47396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1495:4:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(33 digits omitted)...0000"
                        },
                        "value": "1e40"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(33 digits omitted)...0000"
                        }
                      ],
                      "id": 47386,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3882,
                        3907,
                        3920,
                        3936,
                        3978,
                        4020,
                        4062,
                        4099,
                        4136,
                        4173,
                        1035,
                        1060,
                        1090,
                        1115,
                        1174,
                        1199,
                        1229,
                        1254,
                        2354,
                        2389
                      ],
                      "referencedDeclaration": 1229,
                      "src": "1447:8:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 47397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1447:53:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47398,
                  "nodeType": "ExpressionStatement",
                  "src": "1447:53:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 47400,
                            "name": "feeCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47179,
                            "src": "1519:12:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FeeCollector_$41904",
                              "typeString": "contract FeeCollector"
                            }
                          },
                          "id": 47401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27494,
                          "src": "1519:18:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 47402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1519:20:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 47405,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1549:4:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FeeCollectorTest_$47415",
                              "typeString": "contract FeeCollectorTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FeeCollectorTest_$47415",
                              "typeString": "contract FeeCollectorTest"
                            }
                          ],
                          "id": 47404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1541:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47403,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1541:7:108",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1541:13:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 47399,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3882,
                        3907,
                        3920,
                        3936,
                        3978,
                        4020,
                        4062,
                        4099,
                        4136,
                        4173,
                        1035,
                        1060,
                        1090,
                        1115,
                        1174,
                        1199,
                        1229,
                        1254,
                        2354,
                        2389
                      ],
                      "referencedDeclaration": 1035,
                      "src": "1510:8:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 47407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1510:45:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47408,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:45:108"
                }
              ]
            },
            "functionSelector": "4249e34c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testERC20Withdraw",
            "nameLocation": "1008:17:108",
            "parameters": {
              "id": 47306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47305,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1034:4:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 47410,
                  "src": "1026:12:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1025:14:108"
            },
            "returnParameters": {
              "id": 47307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1047:0:108"
            },
            "scope": 47415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47414,
            "nodeType": "FunctionDefinition",
            "src": "1568:29:108",
            "nodes": [],
            "body": {
              "id": 47413,
              "nodeType": "Block",
              "src": "1595:2:108",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 47411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1575:2:108"
            },
            "returnParameters": {
              "id": 47412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1595:0:108"
            },
            "scope": 47415,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 47175,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5694,
              "src": "211:4:108"
            },
            "id": 47176,
            "nodeType": "InheritanceSpecifier",
            "src": "211:4:108"
          }
        ],
        "canonicalName": "FeeCollectorTest",
        "contractDependencies": [
          41904,
          44544
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47415,
          5694,
          2764,
          2501
        ],
        "name": "FeeCollectorTest",
        "nameLocation": "191:16:108",
        "scope": 47416,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 108
}