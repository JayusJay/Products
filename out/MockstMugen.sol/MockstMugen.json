{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_stake",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "asset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "compoundMGN",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "convertToAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "convertToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "maxRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "maxWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "previewDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "previewMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "previewRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "previewWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [
        {
          "internalType": "contract IStake",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b5060405162001eea38038062001eea83398101604081905262000034916200029c565b8383836003620000458382620003bf565b506004620000548282620003bf565b5050506000806200006b83620000ca60201b60201c565b915091508162000090576200008a620001b160201b62000ab11760201c565b62000092565b805b60ff1660a05250506001600160a01b03908116608052600580546001600160a01b0319169290911691909117905550620004c3915050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000918291829182916001600160a01b0387169162000113916200048b565b6000604051808303816000865af19150503d806000811462000152576040519150601f19603f3d011682016040523d82523d6000602084013e62000157565b606091505b50915091508180156200016c57506020815110155b15620001a4576000818060200190518101906200018a9190620004a9565b905060ff8111620001a2576001969095509350505050565b505b5060009485945092505050565b601290565b6001600160a01b0381168114620001cc57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000202578181015183820152602001620001e8565b50506000910152565b600082601f8301126200021d57600080fd5b81516001600160401b03808211156200023a576200023a620001cf565b604051601f8301601f19908116603f01168101908282118183101715620002655762000265620001cf565b816040528381528660208588010111156200027f57600080fd5b62000292846020830160208901620001e5565b9695505050505050565b60008060008060808587031215620002b357600080fd5b8451620002c081620001b6565b60208601519094506001600160401b0380821115620002de57600080fd5b620002ec888389016200020b565b945060408701519150808211156200030357600080fd5b5062000312878288016200020b565b92505060608501516200032581620001b6565b939692955090935050565b600181811c908216806200034557607f821691505b6020821081036200036657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003ba57600081815260208120601f850160051c81016020861015620003955750805b601f850160051c820191505b81811015620003b657828155600101620003a1565b5050505b505050565b81516001600160401b03811115620003db57620003db620001cf565b620003f381620003ec845462000330565b846200036c565b602080601f8311600181146200042b5760008415620004125750858301515b600019600386901b1c1916600185901b178555620003b6565b600085815260208120601f198616915b828110156200045c578886015182559484019460019091019084016200043b565b50858210156200047b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516200049f818460208701620001e5565b9190910192915050565b600060208284031215620004bc57600080fd5b5051919050565b60805160a0516119d762000513600039600061026f01526000818161029b015281816104af0152818161099f01528181610a2601528181610e7c01528181610f4e015261122a01526119d76000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063ba087652116100a2578063d905777e11610071578063d905777e146103fd578063dd62ed3e14610410578063ed72ade614610423578063ef8b30f7146103d757600080fd5b8063ba087652146103af578063c63d75b6146103c2578063c6e6f592146103d7578063ce96cb77146103ea57600080fd5b8063a457c2d7116100de578063a457c2d714610363578063a9059cbb14610376578063b3d7f6b914610389578063b460af941461039c57600080fd5b806370a082311461031f57806394bf804d1461034857806395d89b411461035b57600080fd5b8063313ce567116101715780633a4b66f11161014b5780633a4b66f1146102e6578063402d267d146102f95780634cdad506146102045780636e553f651461030c57600080fd5b8063313ce5671461026857806338d52e0f1461029957806339509351146102d357600080fd5b8063095ea7b3116101ad578063095ea7b3146102175780630a28a4771461023a57806318160ddd1461024d57806323b872dd1461025557600080fd5b806301e1d114146101d457806306fdde03146101ef57806307a2d13a14610204575b600080fd5b6101dc61042d565b6040519081526020015b60405180910390f35b6101f7610531565b6040516101e69190611748565b6101dc61021236600461177b565b6105c3565b61022a6102253660046117b0565b6105d6565b60405190151581526020016101e6565b6101dc61024836600461177b565b6105ee565b6002546101dc565b61022a6102633660046117da565b6105fb565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101e6565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016101e6565b61022a6102e13660046117b0565b610621565b6005546102bb906001600160a01b031681565b6101dc610307366004611816565b610643565b6101dc61031a366004611831565b610661565b6101dc61032d366004611816565b6001600160a01b031660009081526020819052604090205490565b6101dc610356366004611831565b6106d9565b6101f76106f3565b61022a6103713660046117b0565b610702565b61022a6103843660046117b0565b610788565b6101dc61039736600461177b565b610796565b6101dc6103aa36600461185d565b6107a3565b6101dc6103bd36600461185d565b61081f565b6101dc6103d0366004611816565b5060001990565b6101dc6103e536600461177b565b610893565b6101dc6103f8366004611816565b6108a0565b6101dc61040b366004611816565b6108c4565b6101dc61041e366004611899565b6108e2565b61042b61090d565b005b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a91906118c3565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052291906118c3565b61052c91906118dc565b905090565b606060038054610540906118fd565b80601f016020809104026020016040519081016040528092919081815260200182805461056c906118fd565b80156105b95780601f1061058e576101008083540402835291602001916105b9565b820191906000526020600020905b81548152906001019060200180831161059c57829003601f168201915b5050505050905090565b60006105d0826000610ab6565b92915050565b6000336105e4818585610ae9565b5060019392505050565b60006105d0826001610c0d565b600033610609858285610c3f565b610614858585610cb9565b60019150505b9392505050565b6000336105e481858561063483836108e2565b61063e91906118dc565b610ae9565b600061064d610e5d565b6106585760006105d0565b60001992915050565b600061066c82610643565b8311156106c05760405162461bcd60e51b815260206004820152601e60248201527f455243343632363a206465706f736974206d6f7265207468616e206d6178000060448201526064015b60405180910390fd5b60006106cb84610893565b905061061a33848684610e77565b6000806106e584610796565b905061061a33848387610e77565b606060048054610540906118fd565b6000338161071082866108e2565b9050838110156107705760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106b7565b61077d8286868403610ae9565b506001949350505050565b6000336105e4818585610cb9565b60006105d0826001610ab6565b60006107ae826108a0565b8411156107fd5760405162461bcd60e51b815260206004820152601f60248201527f455243343632363a207769746864726177206d6f7265207468616e206d61780060448201526064016106b7565b6000610808856105ee565b90506108173385858885610f12565b949350505050565b600061082a826108c4565b8411156108795760405162461bcd60e51b815260206004820152601d60248201527f455243343632363a2072656465656d206d6f7265207468616e206d617800000060448201526064016106b7565b6000610884856105c3565b90506108173385858489610f12565b60006105d0826000610c0d565b6001600160a01b0381166000908152602081905260408120546105d0906000610ab6565b6001600160a01b0381166000908152602081905260408120546105d0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600560009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610962573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098691906118c3565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906118c3565b600554909150610a4f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610fdb565b60055460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a906024015b600060405180830381600087803b158015610a9657600080fd5b505af1158015610aaa573d6000803e3d6000fd5b5050505050565b601290565b600080610ac260025490565b90508015610ae357610ade610ad561042d565b859083866110c0565b610817565b83610817565b6001600160a01b038316610b4b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106b7565b6001600160a01b038216610bac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106b7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600080610c1960025490565b9050831580610c26575080155b610ae357610ade81610c3661042d565b869190866110c0565b6000610c4b84846108e2565b90506000198114610cb35781811015610ca65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106b7565b610cb38484848403610ae9565b50505050565b6001600160a01b038316610d1d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106b7565b6001600160a01b038216610d7f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106b7565b6001600160a01b03831660009081526020819052604090205481811015610df75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106b7565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610cb3565b600080610e6861042d565b118061052c5750506002541590565b610ea37f0000000000000000000000000000000000000000000000000000000000000000853085611122565b610ead838261115a565b610eb682611219565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051610f04929190918252602082015260400190565b60405180910390a350505050565b826001600160a01b0316856001600160a01b031614610f3657610f36838683610c3f565b610f3f826112ed565b610f49838261131e565b610f747f00000000000000000000000000000000000000000000000000000000000000008584611450565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8585604051610fcc929190918252602082015260400190565b60405180910390a45050505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561102c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105091906118c3565b61105a91906118dc565b6040516001600160a01b038516602482015260448101829052909150610cb390859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611480565b6000806110ce868686611552565b905060018360028111156110e4576110e4611937565b1480156111015750600084806110fc576110fc61194d565b868809115b15611114576111116001826118dc565b90505b95945050505050565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610cb39085906323b872dd60e01b90608401611089565b6001600160a01b0382166111b05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106b7565b80600260008282546111c291906118dc565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600554611253906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610fdb565b60055460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561129957600080fd5b505af11580156112ad573d6000803e3d6000fd5b505050507feebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca27816040516112e291815260200190565b60405180910390a150565b600554604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401610a7c565b6001600160a01b03821661137e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106b7565b6001600160a01b038216600090815260208190526040902054818110156113f25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106b7565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6040516001600160a01b03831660248201526044810182905261111d90849063a9059cbb60e01b90606401611089565b60006114d5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116019092919063ffffffff16565b80519091501561111d57808060200190518101906114f39190611963565b61111d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106b7565b600080806000198587098587029250828110838203039150508060000361158c578382816115825761158261194d565b049250505061061a565b80841161159857600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6060610817848460008585600080866001600160a01b031685876040516116289190611985565b60006040518083038185875af1925050503d8060008114611665576040519150601f19603f3d011682016040523d82523d6000602084013e61166a565b606091505b509150915061167b87838387611686565b979650505050505050565b606083156116f55782516000036116ee576001600160a01b0385163b6116ee5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106b7565b5081610817565b610817838381511561170a5781518083602001fd5b8060405162461bcd60e51b81526004016106b79190611748565b60005b8381101561173f578181015183820152602001611727565b50506000910152565b6020815260008251806020840152611767816040850160208701611724565b601f01601f19169190910160400192915050565b60006020828403121561178d57600080fd5b5035919050565b80356001600160a01b03811681146117ab57600080fd5b919050565b600080604083850312156117c357600080fd5b6117cc83611794565b946020939093013593505050565b6000806000606084860312156117ef57600080fd5b6117f884611794565b925061180660208501611794565b9150604084013590509250925092565b60006020828403121561182857600080fd5b61061a82611794565b6000806040838503121561184457600080fd5b8235915061185460208401611794565b90509250929050565b60008060006060848603121561187257600080fd5b8335925061188260208501611794565b915061189060408501611794565b90509250925092565b600080604083850312156118ac57600080fd5b6118b583611794565b915061185460208401611794565b6000602082840312156118d557600080fd5b5051919050565b808201808211156105d057634e487b7160e01b600052601160045260246000fd5b600181811c9082168061191157607f821691505b60208210810361193157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60006020828403121561197557600080fd5b8151801515811461061a57600080fd5b60008251611997818460208701611724565b919091019291505056fea2646970667358221220a562f659ee3fc55017ce312676bebd234363b63a08b5431a6f57f1ae84c66cdb64736f6c63430008110033",
    "sourceMap": "312:1811:105:-:0;;;450:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;550:5;571:4;577:6;2042:5:36;:13;571:4:105;2042:5:36;:13;:::i;:::-;-1:-1:-1;2065:7:36;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;1513:12:38;1527:19;1550:28;1571:6;1550:20;;;:28;;:::i;:::-;1512:66;;;;1600:7;:42;;1626:16;:14;;;;;:16;;:::i;:::-;1600:42;;;1610:13;1600:42;1588:54;;;;-1:-1:-1;;;;;;;1652:15:38;;;;;599:5:105::2;:22:::0;;-1:-1:-1;;;;;;599:22:105::2;::::0;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;312:1811:105;;-1:-1:-1;;312:1811:105;1817:535:38;1983:56;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1983:56:38;-1:-1:-1;;;1983:56:38;;;1949:100;;1879:4;;;;;;;;-1:-1:-1;;;;;1949:20:38;;;:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1902:147;;;;2063:7;:39;;;;;2100:2;2074:15;:22;:28;;2063:39;2059:260;;;2118:24;2156:15;2145:38;;;;;;;;;;;;:::i;:::-;2118:65;-1:-1:-1;2221:15:38;2201:35;;2197:112;;2264:4;;2276:16;;-1:-1:-1;1817:535:38;-1:-1:-1;;;;1817:535:38:o;2197:112::-;2104:215;2059:260;-1:-1:-1;2336:5:38;;;;-1:-1:-1;1817:535:38;-1:-1:-1;;;1817:535:38:o;3091:91:36:-;3173:2;;3091:91::o;14:139:112:-;-1:-1:-1;;;;;97:31:112;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:127::-;219:10;214:3;210:20;207:1;200:31;250:4;247:1;240:15;274:4;271:1;264:15;290:250;375:1;385:113;399:6;396:1;393:13;385:113;;;475:11;;;469:18;456:11;;;449:39;421:2;414:10;385:113;;;-1:-1:-1;;532:1:112;514:16;;507:27;290:250::o;545:699::-;599:5;652:3;645:4;637:6;633:17;629:27;619:55;;670:1;667;660:12;619:55;693:13;;-1:-1:-1;;;;;755:10:112;;;752:36;;;768:18;;:::i;:::-;843:2;837:9;811:2;897:13;;-1:-1:-1;;893:22:112;;;917:2;889:31;885:40;873:53;;;941:18;;;961:22;;;938:46;935:72;;;987:18;;:::i;:::-;1027:10;1023:2;1016:22;1062:2;1054:6;1047:18;1108:3;1101:4;1096:2;1088:6;1084:15;1080:26;1077:35;1074:55;;;1125:1;1122;1115:12;1074:55;1138:76;1211:2;1204:4;1196:6;1192:17;1185:4;1177:6;1173:17;1138:76;:::i;:::-;1232:6;545:699;-1:-1:-1;;;;;;545:699:112:o;1249:857::-;1382:6;1390;1398;1406;1459:3;1447:9;1438:7;1434:23;1430:33;1427:53;;;1476:1;1473;1466:12;1427:53;1508:9;1502:16;1527:39;1560:5;1527:39;:::i;:::-;1634:2;1619:18;;1613:25;1585:5;;-1:-1:-1;;;;;;1687:14:112;;;1684:34;;;1714:1;1711;1704:12;1684:34;1737:61;1790:7;1781:6;1770:9;1766:22;1737:61;:::i;:::-;1727:71;;1844:2;1833:9;1829:18;1823:25;1807:41;;1873:2;1863:8;1860:16;1857:36;;;1889:1;1886;1879:12;1857:36;;1912:63;1967:7;1956:8;1945:9;1941:24;1912:63;:::i;:::-;1902:73;;;2020:2;2009:9;2005:18;1999:25;2033:41;2066:7;2033:41;:::i;:::-;1249:857;;;;-1:-1:-1;1249:857:112;;-1:-1:-1;;1249:857:112:o;2111:380::-;2190:1;2186:12;;;;2233;;;2254:61;;2308:4;2300:6;2296:17;2286:27;;2254:61;2361:2;2353:6;2350:14;2330:18;2327:38;2324:161;;2407:10;2402:3;2398:20;2395:1;2388:31;2442:4;2439:1;2432:15;2470:4;2467:1;2460:15;2324:161;;2111:380;;;:::o;2622:545::-;2724:2;2719:3;2716:11;2713:448;;;2760:1;2785:5;2781:2;2774:17;2830:4;2826:2;2816:19;2900:2;2888:10;2884:19;2881:1;2877:27;2871:4;2867:38;2936:4;2924:10;2921:20;2918:47;;;-1:-1:-1;2959:4:112;2918:47;3014:2;3009:3;3005:12;3002:1;2998:20;2992:4;2988:31;2978:41;;3069:82;3087:2;3080:5;3077:13;3069:82;;;3132:17;;;3113:1;3102:13;3069:82;;;3073:3;;;2713:448;2622:545;;;:::o;3343:1352::-;3463:10;;-1:-1:-1;;;;;3485:30:112;;3482:56;;;3518:18;;:::i;:::-;3547:97;3637:6;3597:38;3629:4;3623:11;3597:38;:::i;:::-;3591:4;3547:97;:::i;:::-;3699:4;;3763:2;3752:14;;3780:1;3775:663;;;;4482:1;4499:6;4496:89;;;-1:-1:-1;4551:19:112;;;4545:26;4496:89;-1:-1:-1;;3300:1:112;3296:11;;;3292:24;3288:29;3278:40;3324:1;3320:11;;;3275:57;4598:81;;3745:944;;3775:663;2569:1;2562:14;;;2606:4;2593:18;;-1:-1:-1;;3811:20:112;;;3929:236;3943:7;3940:1;3937:14;3929:236;;;4032:19;;;4026:26;4011:42;;4124:27;;;;4092:1;4080:14;;;;3959:19;;3929:236;;;3933:3;4193:6;4184:7;4181:19;4178:201;;;4254:19;;;4248:26;-1:-1:-1;;4337:1:112;4333:14;;;4349:3;4329:24;4325:37;4321:42;4306:58;4291:74;;4178:201;-1:-1:-1;;;;;4425:1:112;4409:14;;;4405:22;4392:36;;-1:-1:-1;3343:1352:112:o;4700:287::-;4829:3;4867:6;4861:13;4883:66;4942:6;4937:3;4930:4;4922:6;4918:17;4883:66;:::i;:::-;4965:16;;;;;4700:287;-1:-1:-1;;4700:287:112:o;4992:184::-;5062:6;5115:2;5103:9;5094:7;5090:23;5086:32;5083:52;;;5131:1;5128;5121:12;5083:52;-1:-1:-1;5154:16:112;;4992:184;-1:-1:-1;4992:184:112:o;:::-;312:1811:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063ba087652116100a2578063d905777e11610071578063d905777e146103fd578063dd62ed3e14610410578063ed72ade614610423578063ef8b30f7146103d757600080fd5b8063ba087652146103af578063c63d75b6146103c2578063c6e6f592146103d7578063ce96cb77146103ea57600080fd5b8063a457c2d7116100de578063a457c2d714610363578063a9059cbb14610376578063b3d7f6b914610389578063b460af941461039c57600080fd5b806370a082311461031f57806394bf804d1461034857806395d89b411461035b57600080fd5b8063313ce567116101715780633a4b66f11161014b5780633a4b66f1146102e6578063402d267d146102f95780634cdad506146102045780636e553f651461030c57600080fd5b8063313ce5671461026857806338d52e0f1461029957806339509351146102d357600080fd5b8063095ea7b3116101ad578063095ea7b3146102175780630a28a4771461023a57806318160ddd1461024d57806323b872dd1461025557600080fd5b806301e1d114146101d457806306fdde03146101ef57806307a2d13a14610204575b600080fd5b6101dc61042d565b6040519081526020015b60405180910390f35b6101f7610531565b6040516101e69190611748565b6101dc61021236600461177b565b6105c3565b61022a6102253660046117b0565b6105d6565b60405190151581526020016101e6565b6101dc61024836600461177b565b6105ee565b6002546101dc565b61022a6102633660046117da565b6105fb565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101e6565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016101e6565b61022a6102e13660046117b0565b610621565b6005546102bb906001600160a01b031681565b6101dc610307366004611816565b610643565b6101dc61031a366004611831565b610661565b6101dc61032d366004611816565b6001600160a01b031660009081526020819052604090205490565b6101dc610356366004611831565b6106d9565b6101f76106f3565b61022a6103713660046117b0565b610702565b61022a6103843660046117b0565b610788565b6101dc61039736600461177b565b610796565b6101dc6103aa36600461185d565b6107a3565b6101dc6103bd36600461185d565b61081f565b6101dc6103d0366004611816565b5060001990565b6101dc6103e536600461177b565b610893565b6101dc6103f8366004611816565b6108a0565b6101dc61040b366004611816565b6108c4565b6101dc61041e366004611899565b6108e2565b61042b61090d565b005b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a91906118c3565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052291906118c3565b61052c91906118dc565b905090565b606060038054610540906118fd565b80601f016020809104026020016040519081016040528092919081815260200182805461056c906118fd565b80156105b95780601f1061058e576101008083540402835291602001916105b9565b820191906000526020600020905b81548152906001019060200180831161059c57829003601f168201915b5050505050905090565b60006105d0826000610ab6565b92915050565b6000336105e4818585610ae9565b5060019392505050565b60006105d0826001610c0d565b600033610609858285610c3f565b610614858585610cb9565b60019150505b9392505050565b6000336105e481858561063483836108e2565b61063e91906118dc565b610ae9565b600061064d610e5d565b6106585760006105d0565b60001992915050565b600061066c82610643565b8311156106c05760405162461bcd60e51b815260206004820152601e60248201527f455243343632363a206465706f736974206d6f7265207468616e206d6178000060448201526064015b60405180910390fd5b60006106cb84610893565b905061061a33848684610e77565b6000806106e584610796565b905061061a33848387610e77565b606060048054610540906118fd565b6000338161071082866108e2565b9050838110156107705760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106b7565b61077d8286868403610ae9565b506001949350505050565b6000336105e4818585610cb9565b60006105d0826001610ab6565b60006107ae826108a0565b8411156107fd5760405162461bcd60e51b815260206004820152601f60248201527f455243343632363a207769746864726177206d6f7265207468616e206d61780060448201526064016106b7565b6000610808856105ee565b90506108173385858885610f12565b949350505050565b600061082a826108c4565b8411156108795760405162461bcd60e51b815260206004820152601d60248201527f455243343632363a2072656465656d206d6f7265207468616e206d617800000060448201526064016106b7565b6000610884856105c3565b90506108173385858489610f12565b60006105d0826000610c0d565b6001600160a01b0381166000908152602081905260408120546105d0906000610ab6565b6001600160a01b0381166000908152602081905260408120546105d0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600560009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610962573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098691906118c3565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906118c3565b600554909150610a4f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610fdb565b60055460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a906024015b600060405180830381600087803b158015610a9657600080fd5b505af1158015610aaa573d6000803e3d6000fd5b5050505050565b601290565b600080610ac260025490565b90508015610ae357610ade610ad561042d565b859083866110c0565b610817565b83610817565b6001600160a01b038316610b4b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106b7565b6001600160a01b038216610bac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106b7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600080610c1960025490565b9050831580610c26575080155b610ae357610ade81610c3661042d565b869190866110c0565b6000610c4b84846108e2565b90506000198114610cb35781811015610ca65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106b7565b610cb38484848403610ae9565b50505050565b6001600160a01b038316610d1d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106b7565b6001600160a01b038216610d7f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106b7565b6001600160a01b03831660009081526020819052604090205481811015610df75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106b7565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610cb3565b600080610e6861042d565b118061052c5750506002541590565b610ea37f0000000000000000000000000000000000000000000000000000000000000000853085611122565b610ead838261115a565b610eb682611219565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051610f04929190918252602082015260400190565b60405180910390a350505050565b826001600160a01b0316856001600160a01b031614610f3657610f36838683610c3f565b610f3f826112ed565b610f49838261131e565b610f747f00000000000000000000000000000000000000000000000000000000000000008584611450565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8585604051610fcc929190918252602082015260400190565b60405180910390a45050505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561102c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105091906118c3565b61105a91906118dc565b6040516001600160a01b038516602482015260448101829052909150610cb390859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611480565b6000806110ce868686611552565b905060018360028111156110e4576110e4611937565b1480156111015750600084806110fc576110fc61194d565b868809115b15611114576111116001826118dc565b90505b95945050505050565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610cb39085906323b872dd60e01b90608401611089565b6001600160a01b0382166111b05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106b7565b80600260008282546111c291906118dc565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600554611253906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610fdb565b60055460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561129957600080fd5b505af11580156112ad573d6000803e3d6000fd5b505050507feebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca27816040516112e291815260200190565b60405180910390a150565b600554604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401610a7c565b6001600160a01b03821661137e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106b7565b6001600160a01b038216600090815260208190526040902054818110156113f25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106b7565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6040516001600160a01b03831660248201526044810182905261111d90849063a9059cbb60e01b90606401611089565b60006114d5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116019092919063ffffffff16565b80519091501561111d57808060200190518101906114f39190611963565b61111d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106b7565b600080806000198587098587029250828110838203039150508060000361158c578382816115825761158261194d565b049250505061061a565b80841161159857600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6060610817848460008585600080866001600160a01b031685876040516116289190611985565b60006040518083038185875af1925050503d8060008114611665576040519150601f19603f3d011682016040523d82523d6000602084013e61166a565b606091505b509150915061167b87838387611686565b979650505050505050565b606083156116f55782516000036116ee576001600160a01b0385163b6116ee5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106b7565b5081610817565b610817838381511561170a5781518083602001fd5b8060405162461bcd60e51b81526004016106b79190611748565b60005b8381101561173f578181015183820152602001611727565b50506000910152565b6020815260008251806020840152611767816040850160208701611724565b601f01601f19169190910160400192915050565b60006020828403121561178d57600080fd5b5035919050565b80356001600160a01b03811681146117ab57600080fd5b919050565b600080604083850312156117c357600080fd5b6117cc83611794565b946020939093013593505050565b6000806000606084860312156117ef57600080fd5b6117f884611794565b925061180660208501611794565b9150604084013590509250925092565b60006020828403121561182857600080fd5b61061a82611794565b6000806040838503121561184457600080fd5b8235915061185460208401611794565b90509250929050565b60008060006060848603121561187257600080fd5b8335925061188260208501611794565b915061189060408501611794565b90509250925092565b600080604083850312156118ac57600080fd5b6118b583611794565b915061185460208401611794565b6000602082840312156118d557600080fd5b5051919050565b808201808211156105d057634e487b7160e01b600052601160045260246000fd5b600181811c9082168061191157607f821691505b60208210810361193157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60006020828403121561197557600080fd5b8151801515811461061a57600080fd5b60008251611997818460208701611724565b919091019291505056fea2646970667358221220a562f659ee3fc55017ce312676bebd234363b63a08b5431a6f57f1ae84c66cdb64736f6c63430008110033",
    "sourceMap": "312:1811:105:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:158;;;:::i;:::-;;;160:25:112;;;148:2;133:18;634:158:105;;;;;;;;2154:98:36;;;:::i;:::-;;;;;;;:::i;3476:163:38:-;;;;;;:::i;:::-;;:::i;4431:197:36:-;;;;;;:::i;:::-;;:::i;:::-;;;1639:14:112;;1632:22;1614:41;;1602:2;1587:18;4431:197:36;1474:187:112;4838:154:38;;;;;;:::i;:::-;;:::i;3242:106:36:-;3329:12;;3242:106;;5190:286;;;;;;:::i;:::-;;:::i;2762:121:38:-;;;2171:4:112;2867:9:38;2159:17:112;2141:36;;2129:2;2114:18;2762:121:38;1999:184:112;2927:103:38;3016:6;2927:103;;;-1:-1:-1;;;;;2352:32:112;;;2334:51;;2322:2;2307:18;2927:103:38;2188:203:112;5871:234:36;;;;;;:::i;:::-;;:::i;424:19:105:-;;;;;-1:-1:-1;;;;;424:19:105;;;3688:148:38;;;;;;:::i;:::-;;:::i;5244:315::-;;;;;;:::i;:::-;;:::i;3406:125:36:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:36;3480:7;3506:18;;;;;;;;;;;;3406:125;5602:303:38;;;;;;:::i;:::-;;:::i;2365:102:36:-;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;4634:150:38:-;;;;;;:::i;:::-;;:::i;5952:369::-;;;;;;:::i;:::-;;:::i;6366:361::-;;;;;;:::i;:::-;;:::i;3882:114::-;;;;;;:::i;:::-;-1:-1:-1;;;3972:17:38;3882:114;3259:163;;;;;;:::i;:::-;;:::i;4046:161::-;;;;;;:::i;:::-;;:::i;4255:121::-;;;;;;:::i;:::-;;:::i;3974:149:36:-;;;;;;:::i;:::-;;:::i;1088:216:105:-;;;:::i;:::-;;634:158;755:5;;:30;;-1:-1:-1;;;755:30:105;;779:4;755:30;;;2334:51:112;695:7:105;;-1:-1:-1;;;;;755:5:105;;:15;;2307:18:112;;755:30:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;721:31;;-1:-1:-1;;;721:31:105;;746:4;721:31;;;2334:51:112;721:6:105;-1:-1:-1;;;;;721:16:105;;;;2307:18:112;;721:31:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;;;:::i;:::-;714:71;;634:158;:::o;2154:98:36:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;3476:163:38:-;3555:14;3588:44;3605:6;3613:18;3588:16;:44::i;:::-;3581:51;3476:163;-1:-1:-1;;3476:163:38:o;4431:197:36:-;4514:4;719:10:43;4568:32:36;719:10:43;4584:7:36;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:36;;4431:197;-1:-1:-1;;;4431:197:36:o;4838:154:38:-;4917:7;4943:42;4960:6;4968:16;4943;:42::i;5190:286:36:-;5317:4;719:10:43;5373:38:36;5389:4;719:10:43;5404:6:36;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;;:::o;5871:234::-;5959:4;719:10:43;6013:64:36;719:10:43;6029:7:36;6066:10;6038:25;719:10:43;6029:7:36;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;3688:148:38:-;3755:7;3781:24;:22;:24::i;:::-;:48;;3828:1;3781:48;;;-1:-1:-1;;3774:55:38;3688:148;-1:-1:-1;;3688:148:38:o;5244:315::-;5328:7;5365:20;5376:8;5365:10;:20::i;:::-;5355:6;:30;;5347:73;;;;-1:-1:-1;;;5347:73:38;;4671:2:112;5347:73:38;;;4653:21:112;4710:2;4690:18;;;4683:30;4749:32;4729:18;;;4722:60;4799:18;;5347:73:38;;;;;;;;;5431:14;5448:22;5463:6;5448:14;:22::i;:::-;5431:39;-1:-1:-1;5480:48:38;719:10:43;5503:8:38;5513:6;5521;5480:8;:48::i;5602:303::-;5683:7;5780:14;5797:19;5809:6;5797:11;:19::i;:::-;5780:36;-1:-1:-1;5826:48:38;719:10:43;5849:8:38;5859:6;5867;5826:8;:48::i;2365:102:36:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:43;6685:4:36;6766:25;719:10:43;6783:7:36;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:36;;5386:2:112;6801:85:36;;;5368:21:112;5425:2;5405:18;;;5398:30;5464:34;5444:18;;;5437:62;-1:-1:-1;;;5515:18:112;;;5508:35;5560:19;;6801:85:36;5184:401:112;6801:85:36;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;-1:-1:-1;7008:4:36;;6592:427;-1:-1:-1;;;;6592:427:36:o;3727:189::-;3806:4;719:10:43;3860:28:36;719:10:43;3877:2:36;3881:6;3860:9;:28::i;4634:150:38:-;4709:7;4735:42;4752:6;4760:16;4735;:42::i;5952:369::-;6082:7;6119:18;6131:5;6119:11;:18::i;:::-;6109:6;:28;;6101:72;;;;-1:-1:-1;;;6101:72:38;;5792:2:112;6101:72:38;;;5774:21:112;5831:2;5811:18;;;5804:30;5870:33;5850:18;;;5843:61;5921:18;;6101:72:38;5590:355:112;6101:72:38;6184:14;6201:23;6217:6;6201:15;:23::i;:::-;6184:40;-1:-1:-1;6234:56:38;719:10:43;6258:8:38;6268:5;6275:6;6283;6234:9;:56::i;:::-;6308:6;5952:369;-1:-1:-1;;;;5952:369:38:o;6366:361::-;6494:7;6531:16;6541:5;6531:9;:16::i;:::-;6521:6;:26;;6513:68;;;;-1:-1:-1;;;6513:68:38;;6152:2:112;6513:68:38;;;6134:21:112;6191:2;6171:18;;;6164:30;6230:31;6210:18;;;6203:59;6279:18;;6513:68:38;5950:353:112;6513:68:38;6592:14;6609:21;6623:6;6609:13;:21::i;:::-;6592:38;-1:-1:-1;6640:56:38;719:10:43;6664:8:38;6674:5;6681:6;6689;6640:9;:56::i;3259:163::-;3338:14;3371:44;3388:6;3396:18;3371:16;:44::i;4046:161::-;-1:-1:-1;;;;;3506:18:36;;4120:7:38;3506:18:36;;;;;;;;;;;4146:54:38;;4181:18;4146:16;:54::i;4255:121::-;-1:-1:-1;;;;;3506:18:36;;4327:7:38;3506:18:36;;;;;;;;;;;4353:16:38;3406:125:36;3974:149;-1:-1:-1;;;;;4089:18:36;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;1088:216:105:-;1128:5;;;;;;;;;-1:-1:-1;;;;;1128:5:105;-1:-1:-1;;;;;1128:15:105;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1173:31:105;;-1:-1:-1;;;1173:31:105;;1198:4;1173:31;;;2334:51:112;1155:15:105;;1173:6;-1:-1:-1;;;;;1173:16:105;;;;2307:18:112;;1173:31:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1251:5;;1155:49;;-1:-1:-1;1214:53:105;;-1:-1:-1;;;;;1214:6:105;:28;;;1251:5;1155:49;1214:28;:53::i;:::-;1277:5;;:20;;-1:-1:-1;;;1277:20:105;;;;;160:25:112;;;-1:-1:-1;;;;;1277:5:105;;;;:11;;133:18:112;;1277:20:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1118:186;1088:216::o;3091:91:36:-;3173:2;;3091:91::o;7902:295:38:-;7999:14;8025;8042:13;3329:12:36;;;3242:106;8042:13:38;8025:30;-1:-1:-1;8085:11:38;;8084:106;;8144:46;8158:13;:11;:13::i;:::-;8144:6;;8173;8181:8;8144:13;:46::i;:::-;8084:106;;;8124:6;8100:41;8432:176;10504:370:36;-1:-1:-1;;;;;10635:19:36;;10627:68;;;;-1:-1:-1;;;10627:68:36;;6510:2:112;10627:68:36;;;6492:21:112;6549:2;6529:18;;;6522:30;6588:34;6568:18;;;6561:62;-1:-1:-1;;;6639:18:112;;;6632:34;6683:19;;10627:68:36;6308:400:112;10627:68:36;-1:-1:-1;;;;;10713:21:36;;10705:68;;;;-1:-1:-1;;;10705:68:36;;6915:2:112;10705:68:36;;;6897:21:112;6954:2;6934:18;;;6927:30;6993:34;6973:18;;;6966:62;-1:-1:-1;;;7044:18:112;;;7037:32;7086:19;;10705:68:36;6713:398:112;10705:68:36;-1:-1:-1;;;;;10784:18:36;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;160:25:112;;;10835:32:36;;133:18:112;10835:32:36;;;;;;;10504:370;;;:::o;7025:342:38:-;7122:14;7148;7165:13;3329:12:36;;;3242:106;7165:13:38;7148:30;-1:-1:-1;7208:11:38;;;:26;;-1:-1:-1;7223:11:38;;7208:26;7207:153;;7314:46;7328:6;7336:13;:11;:13::i;:::-;7314:6;;:46;7351:8;7314:13;:46::i;11155:441:36:-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:36;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:36;;7318:2:112;11404:68:36;;;7300:21:112;7357:2;7337:18;;;7330:30;7396:31;7376:18;;;7369:59;7445:18;;11404:68:36;7116:353:112;11404:68:36;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:36;;7591:68;;;;-1:-1:-1;;;7591:68:36;;7676:2:112;7591:68:36;;;7658:21:112;7715:2;7695:18;;;7688:30;7754:34;7734:18;;;7727:62;-1:-1:-1;;;7805:18:112;;;7798:35;7850:19;;7591:68:36;7474:401:112;7591:68:36;-1:-1:-1;;;;;7677:16:36;;7669:64;;;;-1:-1:-1;;;7669:64:36;;8082:2:112;7669:64:36;;;8064:21:112;8121:2;8101:18;;;8094:30;8160:34;8140:18;;;8133:62;-1:-1:-1;;;8211:18:112;;;8204:33;8254:19;;7669:64:36;7880:399:112;7669:64:36;-1:-1:-1;;;;;7815:15:36;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:36;;8486:2:112;7840:72:36;;;8468:21:112;8525:2;8505:18;;;8498:30;8564:34;8544:18;;;8537:62;-1:-1:-1;;;8615:18:112;;;8608:36;8661:19;;7840:72:36;8284:402:112;7840:72:36;-1:-1:-1;;;;;7946:15:36;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;160:25:112;;;8161:13:36;;8210:26;;133:18:112;8210:26:36;;;;;;;8247:37;12180:121;10528:125:38;10584:4;10623:1;10607:13;:11;:13::i;:::-;:17;:39;;;-1:-1:-1;;3329:12:36;;10628:18:38;;10528:125::o;1310:366:105:-;1485:65;1512:6;1520;1536:4;1543:6;1485:26;:65::i;:::-;1560:23;1566:8;1576:6;1560:5;:23::i;:::-;1593:20;1606:6;1593:12;:20::i;:::-;1644:8;-1:-1:-1;;;;;1628:41:105;1636:6;-1:-1:-1;;;;;1628:41:105;;1654:6;1662;1628:41;;;;;;8865:25:112;;;8921:2;8906:18;;8899:34;8853:2;8838:18;;8691:248;1628:41:105;;;;;;;;1310:366;;;;:::o;1682:439::-;1860:5;-1:-1:-1;;;;;1850:15:105;:6;-1:-1:-1;;;;;1850:15:105;;1846:84;;1881:38;1897:5;1904:6;1912;1881:15;:38::i;:::-;1939:22;1954:6;1939:14;:22::i;:::-;1971:20;1977:5;1984:6;1971:5;:20::i;:::-;2001:48;2024:6;2032:8;2042:6;2001:22;:48::i;:::-;2092:5;-1:-1:-1;;;;;2065:49:105;2082:8;-1:-1:-1;;;;;2065:49:105;2074:6;-1:-1:-1;;;;;2065:49:105;;2099:6;2107;2065:49;;;;;;8865:25:112;;;8921:2;8906:18;;8899:34;8853:2;8838:18;;8691:248;2065:49:105;;;;;;;;1682:439;;;;;:::o;2084:310:41:-;2233:39;;-1:-1:-1;;;2233:39:41;;2257:4;2233:39;;;9156:34:112;-1:-1:-1;;;;;9226:15:112;;;9206:18;;;9199:43;2210:20:41;;2275:5;;2233:15;;;;;9091:18:112;;2233:39:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2317:69;;-1:-1:-1;;;;;9445:32:112;;2317:69:41;;;9427:51:112;9494:18;;;9487:34;;;2210:70:41;;-1:-1:-1;2290:97:41;;2310:5;;-1:-1:-1;;;2340:22:41;9400:18:112;;2317:69:41;;;;-1:-1:-1;;2317:69:41;;;;;;;;;;;;;;-1:-1:-1;;;;;2317:69:41;-1:-1:-1;;;;;;2317:69:41;;;;;;;;;;2290:19;:97::i;5724:337:45:-;5863:7;5882:14;5899:25;5906:1;5909;5912:11;5899:6;:25::i;:::-;5882:42;-1:-1:-1;5950:11:45;5938:8;:23;;;;;;;;:::i;:::-;;:56;;;;;5993:1;5978:11;5965:25;;;;;:::i;:::-;5975:1;5972;5965:25;:29;5938:56;5934:98;;;6010:11;6020:1;6010:11;;:::i;:::-;;;5934:98;6048:6;5724:337;-1:-1:-1;;;;;5724:337:45:o;12180:121:36:-;;;;:::o;974:241:41:-;1139:68;;-1:-1:-1;;;;;10054:15:112;;;1139:68:41;;;10036:34:112;10106:15;;10086:18;;;10079:43;10138:18;;;10131:34;;;1112:96:41;;1132:5;;-1:-1:-1;;;1162:27:41;9971:18:112;;1139:68:41;9796:375:112;8567:535:36;-1:-1:-1;;;;;8650:21:36;;8642:65;;;;-1:-1:-1;;;8642:65:36;;10378:2:112;8642:65:36;;;10360:21:112;10417:2;10397:18;;;10390:30;10456:33;10436:18;;;10429:61;10507:18;;8642:65:36;10176:355:112;8642:65:36;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:36;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;160:25:112;;;8999:37:36;;133:18:112;8999:37:36;;;;;;;8567:535;;:::o;798:174:105:-;892:5;;855:52;;-1:-1:-1;;;;;855:6:105;:28;;;892:5;900:6;855:28;:52::i;:::-;917:5;;:19;;-1:-1:-1;;;917:19:105;;;;;160:25:112;;;-1:-1:-1;;;;;917:5:105;;;;:11;;133:18:112;;917:19:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;951:14;958:6;951:14;;;;160:25:112;;148:2;133:18;;14:177;951:14:105;;;;;;;;798:174;:::o;978:104::-;1045:5;;:30;;-1:-1:-1;;;1045:30:105;;;;;160:25:112;;;-1:-1:-1;;;;;1045:5:105;;;;:14;;133:18:112;;1045:30:105;14:177:112;9422:659:36;-1:-1:-1;;;;;9505:21:36;;9497:67;;;;-1:-1:-1;;;9497:67:36;;10738:2:112;9497:67:36;;;10720:21:112;10777:2;10757:18;;;10750:30;10816:34;10796:18;;;10789:62;-1:-1:-1;;;10867:18:112;;;10860:31;10908:19;;9497:67:36;10536:397:112;9497:67:36;-1:-1:-1;;;;;9660:18:36;;9635:22;9660:18;;;;;;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:36;;11140:2:112;9688:71:36;;;11122:21:112;11179:2;11159:18;;;11152:30;11218:34;11198:18;;;11191:62;-1:-1:-1;;;11269:18:112;;;11262:32;11311:19;;9688:71:36;10938:398:112;9688:71:36;-1:-1:-1;;;;;9793:18:36;;:9;:18;;;;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;160:25:112;;;9793:9:36;;:18;9978:37;;133:18:112;9978:37:36;;;;;;;12180:121;;;:::o;763:205:41:-;902:58;;-1:-1:-1;;;;;9445:32:112;;902:58:41;;;9427:51:112;9494:18;;;9487:34;;;875:86:41;;895:5;;-1:-1:-1;;;925:23:41;9400:18:112;;902:58:41;9253:274:112;3747:706:41;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:41;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:41;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:41;;11825:2:112;4351:85:41;;;11807:21:112;11864:2;11844:18;;;11837:30;11903:34;11883:18;;;11876:62;-1:-1:-1;;;11954:18:112;;;11947:40;12004:19;;4351:85:41;11623:406:112;1667:3925:45;1779:14;;;-1:-1:-1;;2316:1:45;2313;2306:20;2359:1;2356;2352:9;2343:18;;2414:5;2410:2;2407:13;2399:5;2395:2;2391:14;2387:34;2378:43;;;2516:5;2525:1;2516:10;2512:75;;2561:11;2553:5;:19;;;;;:::i;:::-;;2546:26;;;;;;2512:75;2711:5;2697:11;:19;2689:28;;;;;;2973:17;3108:11;3105:1;3102;3095:25;4486:1;3656;3641:12;;:16;;3626:32;;3761:22;;;;4467:1;:15;;4466:21;;4719;;;4715:25;;4704:36;4788:21;;;4784:25;;4773:36;4858:21;;;4854:25;;4843:36;4928:21;;;4924:25;;4913:36;4998:21;;;4994:25;;4983:36;5069:21;;;5065:25;;;5054:36;;;3611:12;4006;;;4002:23;;;3998:31;;;3222:20;;;3211:32;;;4118:12;;;;3269:21;;3859:16;;;;4109:21;;;;5533:15;;;-1:-1:-1;;;;1667:3925:45:o;3872:223:42:-;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4005;5240;5254:23;5281:6;-1:-1:-1;;;;;5281:11:42;5300:5;5307:4;5281:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5239:73;;;;5329:69;5356:6;5364:7;5373:10;5385:12;5329:26;:69::i;:::-;5322:76;4959:446;-1:-1:-1;;;;;;;4959:446:42:o;7465:628::-;7645:12;7673:7;7669:418;;;7700:10;:17;7721:1;7700:22;7696:286;;-1:-1:-1;;;;;1465:19:42;;;7907:60;;;;-1:-1:-1;;;7907:60:42;;12935:2:112;7907:60:42;;;12917:21:112;12974:2;12954:18;;;12947:30;13013:31;12993:18;;;12986:59;13062:18;;7907:60:42;12733:353:112;7907:60:42;-1:-1:-1;8002:10:42;7995:17;;7669:418;8043:33;8051:10;8063:12;8774:17;;:21;8770:379;;9002:10;8996:17;9058:15;9045:10;9041:2;9037:19;9030:44;8770:379;9125:12;9118:20;;-1:-1:-1;;;9118:20:42;;;;;;;;:::i;196:250:112:-;281:1;291:113;305:6;302:1;299:13;291:113;;;381:11;;;375:18;362:11;;;355:39;327:2;320:10;291:113;;;-1:-1:-1;;438:1:112;420:16;;413:27;196:250::o;451:396::-;600:2;589:9;582:21;563:4;632:6;626:13;675:6;670:2;659:9;655:18;648:34;691:79;763:6;758:2;747:9;743:18;738:2;730:6;726:15;691:79;:::i;:::-;831:2;810:15;-1:-1:-1;;806:29:112;791:45;;;;838:2;787:54;;451:396;-1:-1:-1;;451:396:112:o;852:180::-;911:6;964:2;952:9;943:7;939:23;935:32;932:52;;;980:1;977;970:12;932:52;-1:-1:-1;1003:23:112;;852:180;-1:-1:-1;852:180:112:o;1037:173::-;1105:20;;-1:-1:-1;;;;;1154:31:112;;1144:42;;1134:70;;1200:1;1197;1190:12;1134:70;1037:173;;;:::o;1215:254::-;1283:6;1291;1344:2;1332:9;1323:7;1319:23;1315:32;1312:52;;;1360:1;1357;1350:12;1312:52;1383:29;1402:9;1383:29;:::i;:::-;1373:39;1459:2;1444:18;;;;1431:32;;-1:-1:-1;;;1215:254:112:o;1666:328::-;1743:6;1751;1759;1812:2;1800:9;1791:7;1787:23;1783:32;1780:52;;;1828:1;1825;1818:12;1780:52;1851:29;1870:9;1851:29;:::i;:::-;1841:39;;1899:38;1933:2;1922:9;1918:18;1899:38;:::i;:::-;1889:48;;1984:2;1973:9;1969:18;1956:32;1946:42;;1666:328;;;;;:::o;2620:186::-;2679:6;2732:2;2720:9;2711:7;2707:23;2703:32;2700:52;;;2748:1;2745;2738:12;2700:52;2771:29;2790:9;2771:29;:::i;2811:254::-;2879:6;2887;2940:2;2928:9;2919:7;2915:23;2911:32;2908:52;;;2956:1;2953;2946:12;2908:52;2992:9;2979:23;2969:33;;3021:38;3055:2;3044:9;3040:18;3021:38;:::i;:::-;3011:48;;2811:254;;;;;:::o;3070:328::-;3147:6;3155;3163;3216:2;3204:9;3195:7;3191:23;3187:32;3184:52;;;3232:1;3229;3222:12;3184:52;3268:9;3255:23;3245:33;;3297:38;3331:2;3320:9;3316:18;3297:38;:::i;:::-;3287:48;;3354:38;3388:2;3377:9;3373:18;3354:38;:::i;:::-;3344:48;;3070:328;;;;;:::o;3403:260::-;3471:6;3479;3532:2;3520:9;3511:7;3507:23;3503:32;3500:52;;;3548:1;3545;3538:12;3500:52;3571:29;3590:9;3571:29;:::i;:::-;3561:39;;3619:38;3653:2;3642:9;3638:18;3619:38;:::i;3668:184::-;3738:6;3791:2;3779:9;3770:7;3766:23;3762:32;3759:52;;;3807:1;3804;3797:12;3759:52;-1:-1:-1;3830:16:112;;3668:184;-1:-1:-1;3668:184:112:o;3857:222::-;3922:9;;;3943:10;;;3940:133;;;3995:10;3990:3;3986:20;3983:1;3976:31;4030:4;4027:1;4020:15;4058:4;4055:1;4048:15;4084:380;4163:1;4159:12;;;;4206;;;4227:61;;4281:4;4273:6;4269:17;4259:27;;4227:61;4334:2;4326:6;4323:14;4303:18;4300:38;4297:161;;4380:10;4375:3;4371:20;4368:1;4361:31;4415:4;4412:1;4405:15;4443:4;4440:1;4433:15;4297:161;;4084:380;;;:::o;9532:127::-;9593:10;9588:3;9584:20;9581:1;9574:31;9624:4;9621:1;9614:15;9648:4;9645:1;9638:15;9664:127;9725:10;9720:3;9716:20;9713:1;9706:31;9756:4;9753:1;9746:15;9780:4;9777:1;9770:15;11341:277;11408:6;11461:2;11449:9;11440:7;11436:23;11432:32;11429:52;;;11477:1;11474;11467:12;11429:52;11509:9;11503:16;11562:5;11555:13;11548:21;11541:5;11538:32;11528:60;;11584:1;11581;11574:12;12441:287;12570:3;12608:6;12602:13;12624:66;12683:6;12678:3;12671:4;12663:6;12659:17;12624:66;:::i;:::-;12706:16;;;;;12441:287;-1:-1:-1;;12441:287:112:o",
    "linkReferences": {},
    "immutableReferences": {
      "28578": [
        {
          "start": 667,
          "length": 32
        },
        {
          "start": 1199,
          "length": 32
        },
        {
          "start": 2463,
          "length": 32
        },
        {
          "start": 2598,
          "length": 32
        },
        {
          "start": 3708,
          "length": 32
        },
        {
          "start": 3918,
          "length": 32
        },
        {
          "start": 4650,
          "length": 32
        }
      ],
      "28580": [
        {
          "start": 623,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "asset()": "38d52e0f",
    "balanceOf(address)": "70a08231",
    "compoundMGN()": "ed72ade6",
    "convertToAssets(uint256)": "07a2d13a",
    "convertToShares(uint256)": "c6e6f592",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deposit(uint256,address)": "6e553f65",
    "increaseAllowance(address,uint256)": "39509351",
    "maxDeposit(address)": "402d267d",
    "maxMint(address)": "c63d75b6",
    "maxRedeem(address)": "d905777e",
    "maxWithdraw(address)": "ce96cb77",
    "mint(uint256,address)": "94bf804d",
    "name()": "06fdde03",
    "previewDeposit(uint256)": "ef8b30f7",
    "previewMint(uint256)": "b3d7f6b9",
    "previewRedeem(uint256)": "4cdad506",
    "previewWithdraw(uint256)": "0a28a477",
    "redeem(uint256,address,address)": "ba087652",
    "stake()": "3a4b66f1",
    "symbol()": "95d89b41",
    "totalAssets()": "01e1d114",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "withdraw(uint256,address,address)": "b460af94"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_stake\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compoundMGN\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"contract IStake\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"See {IERC4626-asset}. \"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"convertToAssets(uint256)\":{\"details\":\"See {IERC4626-convertToAssets}. \"},\"convertToShares(uint256)\":{\"details\":\"See {IERC4626-convertToShares}. \"},\"decimals()\":{\"details\":\"Decimals are read from the underlying asset in the constructor and cached. If this fails (e.g., the asset has not been created yet), the cached value is set to a default obtained by `super.decimals()` (which depends on inheritance but is most likely 18). Override this function in order to set a guaranteed hardcoded value. See {IERC20Metadata-decimals}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256,address)\":{\"details\":\"See {IERC4626-deposit}. \"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"maxDeposit(address)\":{\"details\":\"See {IERC4626-maxDeposit}. \"},\"maxMint(address)\":{\"details\":\"See {IERC4626-maxMint}. \"},\"maxRedeem(address)\":{\"details\":\"See {IERC4626-maxRedeem}. \"},\"maxWithdraw(address)\":{\"details\":\"See {IERC4626-maxWithdraw}. \"},\"mint(uint256,address)\":{\"details\":\"See {IERC4626-mint}. \"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"See {IERC4626-previewDeposit}. \"},\"previewMint(uint256)\":{\"details\":\"See {IERC4626-previewMint}. \"},\"previewRedeem(uint256)\":{\"details\":\"See {IERC4626-previewRedeem}. \"},\"previewWithdraw(uint256)\":{\"details\":\"See {IERC4626-previewWithdraw}. \"},\"redeem(uint256,address,address)\":{\"details\":\"See {IERC4626-redeem}. \"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"See {IERC4626-totalAssets}. \"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"withdraw(uint256,address,address)\":{\"details\":\"See {IERC4626-withdraw}. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mocks/MockstMugen.sol\":\"MockstMugen\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":3xcaliSwap/=lib/3xcaliSwap/contracts/\",\":3xcaliswap/=lib/3xcaliswap/\",\":@core/=lib/3xcaliSwap/contracts/core/\",\":@openzeppelin/=lib/3xcaliSwap/node_modules/@openzeppelin/\",\":@solmate/=lib/3xcaliSwap/node_modules/solmate/src/\",\":LayerZero/=lib/contracts/lib/LayerZero/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=lib/contracts/contracts/\",\":create3-factory/=lib/create3-factory/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":fraxlend/=lib/fraxlend/\",\":joe-v2/=lib/joe-v2/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":pancake-smart-contracts/=lib/pancake-smart-contracts/\",\":pancake/=lib/pancake-smart-contracts/\",\":solmate/=lib/solmate/\",\":spookyswap-core/=lib/spookyswap-core/contracts/\",\":spookyswap/=lib/spookyswap-core/\",\":sushiswap/=lib/sushiswap/\",\":traderjoe/=lib/joe-v2/src/\",\":uniswap/v3-core/=lib/v3-core/\",\":uniswap/v3-periphery/=lib/v3-periphery/\",\":utils/=lib/contracts/test/utils/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\",\":velodrome/=lib/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x1acad3a3e79d3ccbac56cf866482563677e51545516a1f84ffb7cd220e43d93a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85c2b518ec0ba4f8a9f0e544507decf3dbb4fd74321be1fc024e41619e2777b\",\"dweb:/ipfs/QmdyKUbqzaxW9XCMEU31qpRmuHVurhb8fa9XiU1gKU6Ng9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0xa0ba3f05c1dfe6c3d6ca5f4fe8becca8ce3c56b508934f17a2b50560bde7bb31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d657f1a60d4ea69c8fb63c5aba6e58d4aac24993887c0a10e496c745bf0842ef\",\"dweb:/ipfs/QmQ9fb84C2aVL4A9Yg2gDqBouxrSy4ryAFkjssPeZWbBC1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71\",\"dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf\",\"dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP\"]},\"src/interfaces/IStake.sol\":{\"keccak256\":\"0x78305480437bcbc7d58690ede0d2c2bcee6518273ba274791fb8563d17ef62ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25b1918f6e5c579cf86f71bccb49327df1e8beeb652925b250f2c694a93b295c\",\"dweb:/ipfs/QmbucTZqW1TQUrNqmLyoRZG81s1Jf87573hUpRT6w3gZJs\"]},\"src/mocks/MockstMugen.sol\":{\"keccak256\":\"0xa47aba841b8af528d49e1b6348352d78f1689d418076b755e99713bd8db2ae13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b23e6472d926bfb4101fcf7fce1120143a9d7a883f3928254e2fa2202be7f9f4\",\"dweb:/ipfs/QmcM4NUtJJtLP5QKhdpNcg4kxYJRU6514qLgn2tvpz3iJd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_stake",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Staked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "asset",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "compoundMGN"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxRedeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewRedeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stake",
          "outputs": [
            {
              "internalType": "contract IStake",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "asset()": {
            "details": "See {IERC4626-asset}. "
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "convertToAssets(uint256)": {
            "details": "See {IERC4626-convertToAssets}. "
          },
          "convertToShares(uint256)": {
            "details": "See {IERC4626-convertToShares}. "
          },
          "decimals()": {
            "details": "Decimals are read from the underlying asset in the constructor and cached. If this fails (e.g., the asset has not been created yet), the cached value is set to a default obtained by `super.decimals()` (which depends on inheritance but is most likely 18). Override this function in order to set a guaranteed hardcoded value. See {IERC20Metadata-decimals}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "deposit(uint256,address)": {
            "details": "See {IERC4626-deposit}. "
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "maxDeposit(address)": {
            "details": "See {IERC4626-maxDeposit}. "
          },
          "maxMint(address)": {
            "details": "See {IERC4626-maxMint}. "
          },
          "maxRedeem(address)": {
            "details": "See {IERC4626-maxRedeem}. "
          },
          "maxWithdraw(address)": {
            "details": "See {IERC4626-maxWithdraw}. "
          },
          "mint(uint256,address)": {
            "details": "See {IERC4626-mint}. "
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "previewDeposit(uint256)": {
            "details": "See {IERC4626-previewDeposit}. "
          },
          "previewMint(uint256)": {
            "details": "See {IERC4626-previewMint}. "
          },
          "previewRedeem(uint256)": {
            "details": "See {IERC4626-previewRedeem}. "
          },
          "previewWithdraw(uint256)": {
            "details": "See {IERC4626-previewWithdraw}. "
          },
          "redeem(uint256,address,address)": {
            "details": "See {IERC4626-redeem}. "
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalAssets()": {
            "details": "See {IERC4626-totalAssets}. "
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "withdraw(uint256,address,address)": {
            "details": "See {IERC4626-withdraw}. "
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":3xcaliSwap/=lib/3xcaliSwap/contracts/",
        ":3xcaliswap/=lib/3xcaliswap/",
        ":@core/=lib/3xcaliSwap/contracts/core/",
        ":@openzeppelin/=lib/3xcaliSwap/node_modules/@openzeppelin/",
        ":@solmate/=lib/3xcaliSwap/node_modules/solmate/src/",
        ":LayerZero/=lib/contracts/lib/LayerZero/contracts/",
        ":chainlink/=lib/chainlink/",
        ":contracts/=lib/contracts/contracts/",
        ":create3-factory/=lib/create3-factory/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fraxlend/=lib/fraxlend/",
        ":joe-v2/=lib/joe-v2/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":pancake-smart-contracts/=lib/pancake-smart-contracts/",
        ":pancake/=lib/pancake-smart-contracts/",
        ":solmate/=lib/solmate/",
        ":spookyswap-core/=lib/spookyswap-core/contracts/",
        ":spookyswap/=lib/spookyswap-core/",
        ":sushiswap/=lib/sushiswap/",
        ":traderjoe/=lib/joe-v2/src/",
        ":uniswap/v3-core/=lib/v3-core/",
        ":uniswap/v3-periphery/=lib/v3-periphery/",
        ":utils/=lib/contracts/test/utils/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/",
        ":velodrome/=lib/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/mocks/MockstMugen.sol": "MockstMugen"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x1acad3a3e79d3ccbac56cf866482563677e51545516a1f84ffb7cd220e43d93a",
        "urls": [
          "bzz-raw://b85c2b518ec0ba4f8a9f0e544507decf3dbb4fd74321be1fc024e41619e2777b",
          "dweb:/ipfs/QmdyKUbqzaxW9XCMEU31qpRmuHVurhb8fa9XiU1gKU6Ng9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol": {
        "keccak256": "0xa0ba3f05c1dfe6c3d6ca5f4fe8becca8ce3c56b508934f17a2b50560bde7bb31",
        "urls": [
          "bzz-raw://d657f1a60d4ea69c8fb63c5aba6e58d4aac24993887c0a10e496c745bf0842ef",
          "dweb:/ipfs/QmQ9fb84C2aVL4A9Yg2gDqBouxrSy4ryAFkjssPeZWbBC1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749",
        "urls": [
          "bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71",
          "dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe",
        "urls": [
          "bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf",
          "dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP"
        ],
        "license": "MIT"
      },
      "src/interfaces/IStake.sol": {
        "keccak256": "0x78305480437bcbc7d58690ede0d2c2bcee6518273ba274791fb8563d17ef62ad",
        "urls": [
          "bzz-raw://25b1918f6e5c579cf86f71bccb49327df1e8beeb652925b250f2c694a93b295c",
          "dweb:/ipfs/QmbucTZqW1TQUrNqmLyoRZG81s1Jf87573hUpRT6w3gZJs"
        ],
        "license": "MIT"
      },
      "src/mocks/MockstMugen.sol": {
        "keccak256": "0xa47aba841b8af528d49e1b6348352d78f1689d418076b755e99713bd8db2ae13",
        "urls": [
          "bzz-raw://b23e6472d926bfb4101fcf7fce1120143a9d7a883f3928254e2fa2202be7f9f4",
          "dweb:/ipfs/QmcM4NUtJJtLP5QKhdpNcg4kxYJRU6514qLgn2tvpz3iJd"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/mocks/MockstMugen.sol",
    "id": 45724,
    "exportedSymbols": {
      "Address": [
        29915
      ],
      "Context": [
        29937
      ],
      "ERC20": [
        28483
      ],
      "ERC4626": [
        29243
      ],
      "IERC20": [
        28561
      ],
      "IERC20Metadata": [
        29268
      ],
      "IERC20Permit": [
        29304
      ],
      "IERC4626": [
        27734
      ],
      "IStake": [
        44716
      ],
      "Math": [
        30814
      ],
      "MockstMugen": [
        45723
      ],
      "SafeERC20": [
        29585
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2092:105",
    "nodes": [
      {
        "id": 45491,
        "nodeType": "PragmaDirective",
        "src": "32:23:105",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 45492,
        "nodeType": "ImportDirective",
        "src": "57:67:105",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol",
        "file": "openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45724,
        "sourceUnit": 29244,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45493,
        "nodeType": "ImportDirective",
        "src": "125:55:105",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45724,
        "sourceUnit": 28562,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45494,
        "nodeType": "ImportDirective",
        "src": "181:34:105",
        "nodes": [],
        "absolutePath": "src/interfaces/IStake.sol",
        "file": "../interfaces/IStake.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45724,
        "sourceUnit": 44717,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45495,
        "nodeType": "ImportDirective",
        "src": "216:64:105",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45724,
        "sourceUnit": 29586,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45723,
        "nodeType": "ContractDefinition",
        "src": "312:1811:105",
        "nodes": [
          {
            "id": 45501,
            "nodeType": "UsingForDirective",
            "src": "350:27:105",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 45498,
              "name": "SafeERC20",
              "nameLocations": [
                "356:9:105"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29585,
              "src": "356:9:105"
            },
            "typeName": {
              "id": 45500,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45499,
                "name": "IERC20",
                "nameLocations": [
                  "370:6:105"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28561,
                "src": "370:6:105"
              },
              "referencedDeclaration": 28561,
              "src": "370:6:105",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$28561",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 45505,
            "nodeType": "EventDefinition",
            "src": "383:35:105",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "eebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca27",
            "name": "Staked",
            "nameLocation": "389:6:105",
            "parameters": {
              "id": 45504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45503,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakedAmount",
                  "nameLocation": "404:12:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45505,
                  "src": "396:20:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "395:22:105"
            }
          },
          {
            "id": 45508,
            "nodeType": "VariableDeclaration",
            "src": "424:19:105",
            "nodes": [],
            "constant": false,
            "functionSelector": "3a4b66f1",
            "mutability": "mutable",
            "name": "stake",
            "nameLocation": "438:5:105",
            "scope": 45723,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStake_$44716",
              "typeString": "contract IStake"
            },
            "typeName": {
              "id": 45507,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45506,
                "name": "IStake",
                "nameLocations": [
                  "424:6:105"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44716,
                "src": "424:6:105"
              },
              "referencedDeclaration": 44716,
              "src": "424:6:105",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStake_$44716",
                "typeString": "contract IStake"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45534,
            "nodeType": "FunctionDefinition",
            "src": "450:178:105",
            "nodes": [],
            "body": {
              "id": 45533,
              "nodeType": "Block",
              "src": "589:39:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45527,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45508,
                      "src": "599:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStake_$44716",
                        "typeString": "contract IStake"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 45529,
                          "name": "_stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45517,
                          "src": "614:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 45528,
                        "name": "IStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44716,
                        "src": "607:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStake_$44716_$",
                          "typeString": "type(contract IStake)"
                        }
                      },
                      "id": 45530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "607:14:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStake_$44716",
                        "typeString": "contract IStake"
                      }
                    },
                    "src": "599:22:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStake_$44716",
                      "typeString": "contract IStake"
                    }
                  },
                  "id": 45532,
                  "nodeType": "ExpressionStatement",
                  "src": "599:22:105"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 45520,
                    "name": "asset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45511,
                    "src": "550:5:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$28561",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 45521,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 45519,
                  "name": "ERC4626",
                  "nameLocations": [
                    "542:7:105"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29243,
                  "src": "542:7:105"
                },
                "nodeType": "ModifierInvocation",
                "src": "542:14:105"
              },
              {
                "arguments": [
                  {
                    "id": 45523,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45513,
                    "src": "571:4:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 45524,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45515,
                    "src": "577:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 45525,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 45522,
                  "name": "ERC20",
                  "nameLocations": [
                    "565:5:105"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28483,
                  "src": "565:5:105"
                },
                "nodeType": "ModifierInvocation",
                "src": "565:19:105"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 45518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45511,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "469:5:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45534,
                  "src": "462:12:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$28561",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 45510,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45509,
                      "name": "IERC20",
                      "nameLocations": [
                        "462:6:105"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28561,
                      "src": "462:6:105"
                    },
                    "referencedDeclaration": 28561,
                    "src": "462:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$28561",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45513,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "490:4:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45534,
                  "src": "476:18:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45512,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45515,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "510:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45534,
                  "src": "496:20:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45514,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45517,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nameLocation": "526:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45534,
                  "src": "518:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "461:72:105"
            },
            "returnParameters": {
              "id": 45526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "589:0:105"
            },
            "scope": 45723,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45557,
            "nodeType": "FunctionDefinition",
            "src": "634:158:105",
            "nodes": [],
            "body": {
              "id": 45556,
              "nodeType": "Block",
              "src": "704:88:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45544,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "746:4:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockstMugen_$45723",
                                "typeString": "contract MockstMugen"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockstMugen_$45723",
                                "typeString": "contract MockstMugen"
                              }
                            ],
                            "id": 45543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "738:7:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45542,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "738:7:105",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "738:13:105",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 45540,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28578,
                          "src": "721:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$28561",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 45541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "728:9:105",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28518,
                        "src": "721:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 45546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "721:31:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45551,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "779:4:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockstMugen_$45723",
                                "typeString": "contract MockstMugen"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockstMugen_$45723",
                                "typeString": "contract MockstMugen"
                              }
                            ],
                            "id": 45550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "771:7:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45549,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "771:7:105",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "771:13:105",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 45547,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45508,
                          "src": "755:5:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStake_$44716",
                            "typeString": "contract IStake"
                          }
                        },
                        "id": 45548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "761:9:105",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44698,
                        "src": "755:15:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 45553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "755:30:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "721:64:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 45539,
                  "id": 45555,
                  "nodeType": "Return",
                  "src": "714:71:105"
                }
              ]
            },
            "baseFunctions": [
              28717
            ],
            "functionSelector": "01e1d114",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalAssets",
            "nameLocation": "643:11:105",
            "overrides": {
              "id": 45536,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "677:8:105"
            },
            "parameters": {
              "id": 45535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "654:2:105"
            },
            "returnParameters": {
              "id": 45539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45538,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45557,
                  "src": "695:7:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "694:9:105"
            },
            "scope": 45723,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 45583,
            "nodeType": "FunctionDefinition",
            "src": "798:174:105",
            "nodes": [],
            "body": {
              "id": 45582,
              "nodeType": "Block",
              "src": "845:127:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45567,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45508,
                            "src": "892:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStake_$44716",
                              "typeString": "contract IStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IStake_$44716",
                              "typeString": "contract IStake"
                            }
                          ],
                          "id": 45566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "884:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45565,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "884:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "884:14:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45569,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45559,
                        "src": "900:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45562,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28578,
                        "src": "855:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 45564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "862:21:105",
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29442,
                      "src": "855:28:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$28561_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$28561_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 45570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "855:52:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45571,
                  "nodeType": "ExpressionStatement",
                  "src": "855:52:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45575,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45559,
                        "src": "929:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45572,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45508,
                        "src": "917:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStake_$44716",
                          "typeString": "contract IStake"
                        }
                      },
                      "id": 45574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "923:5:105",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44691,
                      "src": "917:11:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "917:19:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45577,
                  "nodeType": "ExpressionStatement",
                  "src": "917:19:105"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45579,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45559,
                        "src": "958:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45578,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45505,
                      "src": "951:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 45580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "951:14:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45581,
                  "nodeType": "EmitStatement",
                  "src": "946:19:105"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "afterDeposit",
            "nameLocation": "807:12:105",
            "parameters": {
              "id": 45560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45559,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "828:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45583,
                  "src": "820:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:16:105"
            },
            "returnParameters": {
              "id": 45561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "845:0:105"
            },
            "scope": 45723,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45595,
            "nodeType": "FunctionDefinition",
            "src": "978:104:105",
            "nodes": [],
            "body": {
              "id": 45594,
              "nodeType": "Block",
              "src": "1035:47:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45591,
                        "name": "_unstakeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45585,
                        "src": "1060:14:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45588,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45508,
                        "src": "1045:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStake_$44716",
                          "typeString": "contract IStake"
                        }
                      },
                      "id": 45590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1051:8:105",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44703,
                      "src": "1045:14:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1045:30:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45593,
                  "nodeType": "ExpressionStatement",
                  "src": "1045:30:105"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beforeWithdraw",
            "nameLocation": "987:14:105",
            "parameters": {
              "id": 45586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45585,
                  "mutability": "mutable",
                  "name": "_unstakeAmount",
                  "nameLocation": "1010:14:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45595,
                  "src": "1002:22:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1001:24:105"
            },
            "returnParameters": {
              "id": 45587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1035:0:105"
            },
            "scope": 45723,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45630,
            "nodeType": "FunctionDefinition",
            "src": "1088:216:105",
            "nodes": [],
            "body": {
              "id": 45629,
              "nodeType": "Block",
              "src": "1118:186:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45598,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45508,
                        "src": "1128:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStake_$44716",
                          "typeString": "contract IStake"
                        }
                      },
                      "id": 45600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1134:9:105",
                      "memberName": "getReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44715,
                      "src": "1128:15:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 45601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1128:17:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45602,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:17:105"
                },
                {
                  "assignments": [
                    45604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45604,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1163:7:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 45629,
                      "src": "1155:15:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45603,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1155:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45612,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45609,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1198:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockstMugen_$45723",
                              "typeString": "contract MockstMugen"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockstMugen_$45723",
                              "typeString": "contract MockstMugen"
                            }
                          ],
                          "id": 45608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1190:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45607,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1190:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1190:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45605,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28578,
                        "src": "1173:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 45606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1180:9:105",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28518,
                      "src": "1173:16:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 45611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1173:31:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1155:49:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45618,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45508,
                            "src": "1251:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStake_$44716",
                              "typeString": "contract IStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IStake_$44716",
                              "typeString": "contract IStake"
                            }
                          ],
                          "id": 45617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1243:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45616,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1243:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1243:14:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45620,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45604,
                        "src": "1259:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45613,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28578,
                        "src": "1214:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 45615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1221:21:105",
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29442,
                      "src": "1214:28:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$28561_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$28561_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 45621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1214:53:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45622,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:53:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45626,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45604,
                        "src": "1289:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45623,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45508,
                        "src": "1277:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStake_$44716",
                          "typeString": "contract IStake"
                        }
                      },
                      "id": 45625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1283:5:105",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44691,
                      "src": "1277:11:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:20:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45628,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:20:105"
                }
              ]
            },
            "functionSelector": "ed72ade6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "compoundMGN",
            "nameLocation": "1097:11:105",
            "parameters": {
              "id": 45596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1108:2:105"
            },
            "returnParameters": {
              "id": 45597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1118:0:105"
            },
            "scope": 45723,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45671,
            "nodeType": "FunctionDefinition",
            "src": "1310:366:105",
            "nodes": [],
            "body": {
              "id": 45670,
              "nodeType": "Block",
              "src": "1420:256:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45645,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28578,
                        "src": "1512:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 45646,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45632,
                        "src": "1520:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45649,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1536:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockstMugen_$45723",
                              "typeString": "contract MockstMugen"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockstMugen_$45723",
                              "typeString": "contract MockstMugen"
                            }
                          ],
                          "id": 45648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1528:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45647,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1528:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1528:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45651,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45636,
                        "src": "1543:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45642,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29585,
                        "src": "1485:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$29585_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 45644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1495:16:105",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29362,
                      "src": "1485:26:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$28561_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 45652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1485:65:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45653,
                  "nodeType": "ExpressionStatement",
                  "src": "1485:65:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45655,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45634,
                        "src": "1566:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45656,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45638,
                        "src": "1576:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45654,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28300,
                      "src": "1560:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 45657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1560:23:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45658,
                  "nodeType": "ExpressionStatement",
                  "src": "1560:23:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45660,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45636,
                        "src": "1606:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45659,
                      "name": "afterDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45583,
                      "src": "1593:12:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 45661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:20:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45662,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:20:105"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45664,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45632,
                        "src": "1636:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45665,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45634,
                        "src": "1644:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45666,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45636,
                        "src": "1654:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45667,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45638,
                        "src": "1662:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45663,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27585,
                      "src": "1628:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 45668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1628:41:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45669,
                  "nodeType": "EmitStatement",
                  "src": "1623:46:105"
                }
              ]
            },
            "baseFunctions": [
              29179
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "1319:8:105",
            "overrides": {
              "id": 45640,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1411:8:105"
            },
            "parameters": {
              "id": 45639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45632,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1336:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45671,
                  "src": "1328:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45634,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1352:8:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45671,
                  "src": "1344:16:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1344:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45636,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "1370:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45671,
                  "src": "1362:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1362:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45638,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1386:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45671,
                  "src": "1378:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:66:105"
            },
            "returnParameters": {
              "id": 45641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:105"
            },
            "scope": 45723,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 45722,
            "nodeType": "FunctionDefinition",
            "src": "1682:439:105",
            "nodes": [],
            "body": {
              "id": 45721,
              "nodeType": "Block",
              "src": "1836:285:105",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 45687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45685,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45673,
                      "src": "1850:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 45686,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45677,
                      "src": "1860:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1850:15:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45695,
                  "nodeType": "IfStatement",
                  "src": "1846:84:105",
                  "trueBody": {
                    "id": 45694,
                    "nodeType": "Block",
                    "src": "1867:63:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45689,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45677,
                              "src": "1897:5:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 45690,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45673,
                              "src": "1904:6:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 45691,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45681,
                              "src": "1912:6:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 45688,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28460,
                            "src": "1881:15:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 45692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1881:38:105",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45693,
                        "nodeType": "ExpressionStatement",
                        "src": "1881:38:105"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45697,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45679,
                        "src": "1954:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45696,
                      "name": "beforeWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45595,
                      "src": "1939:14:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 45698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1939:22:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45699,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:22:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45701,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45677,
                        "src": "1977:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45702,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45681,
                        "src": "1984:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45700,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28372,
                      "src": "1971:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 45703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1971:20:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45704,
                  "nodeType": "ExpressionStatement",
                  "src": "1971:20:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45708,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28578,
                        "src": "2024:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 45709,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45675,
                        "src": "2032:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45710,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45679,
                        "src": "2042:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45705,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29585,
                        "src": "2001:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$29585_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 45707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2011:12:105",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29336,
                      "src": "2001:22:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$28561_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 45711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2001:48:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45712,
                  "nodeType": "ExpressionStatement",
                  "src": "2001:48:105"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45714,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45673,
                        "src": "2074:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45715,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45675,
                        "src": "2082:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45716,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45677,
                        "src": "2092:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45717,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45679,
                        "src": "2099:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45718,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45681,
                        "src": "2107:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45713,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27597,
                      "src": "2065:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 45719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2065:49:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45720,
                  "nodeType": "EmitStatement",
                  "src": "2060:54:105"
                }
              ]
            },
            "baseFunctions": [
              29226
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "1691:9:105",
            "overrides": {
              "id": 45683,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1823:8:105"
            },
            "parameters": {
              "id": 45682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45673,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1709:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45722,
                  "src": "1701:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1701:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45675,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1725:8:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45722,
                  "src": "1717:16:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45677,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1743:5:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45722,
                  "src": "1735:13:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45679,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "1758:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45722,
                  "src": "1750:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1750:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45681,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1774:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 45722,
                  "src": "1766:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1700:81:105"
            },
            "returnParameters": {
              "id": 45684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1836:0:105"
            },
            "scope": 45723,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45496,
              "name": "ERC4626",
              "nameLocations": [
                "336:7:105"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29243,
              "src": "336:7:105"
            },
            "id": 45497,
            "nodeType": "InheritanceSpecifier",
            "src": "336:7:105"
          }
        ],
        "canonicalName": "MockstMugen",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45723,
          29243,
          27734,
          28483,
          29268,
          28561,
          29937
        ],
        "name": "MockstMugen",
        "nameLocation": "321:11:105",
        "scope": 45724,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 105
}