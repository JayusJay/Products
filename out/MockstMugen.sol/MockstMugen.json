{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_stake",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "asset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "compoundMGN",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "convertToAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "convertToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "maxRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "maxWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "previewDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "previewMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "previewRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "previewWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [
        {
          "internalType": "contract IStake",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b5060405162001f0438038062001f048339810160408190526200003491620002a9565b8383836003620000458382620003cc565b506004620000548282620003cc565b5050506000806200006b83620000ca60201b60201c565b915091508162000090576200008a620001b160201b62000ab11760201c565b62000092565b805b60ff1660a05250506001600160a01b03908116608052600580546001600160a01b0319169290911691909117905550620004d0915050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000918291829182916001600160a01b03871691620001139162000498565b6000604051808303816000865af19150503d806000811462000152576040519150601f19603f3d011682016040523d82523d6000602084013e62000157565b606091505b50915091508180156200016c57506020815110155b15620001a4576000818060200190518101906200018a9190620004b6565b905060ff8111620001a2576001969095509350505050565b505b5060009485945092505050565b601290565b6001600160a01b0381168114620001cc57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000202578181015183820152602001620001e8565b8381111562000212576000848401525b50505050565b600082601f8301126200022a57600080fd5b81516001600160401b0380821115620002475762000247620001cf565b604051601f8301601f19908116603f01168101908282118183101715620002725762000272620001cf565b816040528381528660208588010111156200028c57600080fd5b6200029f846020830160208901620001e5565b9695505050505050565b60008060008060808587031215620002c057600080fd5b8451620002cd81620001b6565b60208601519094506001600160401b0380821115620002eb57600080fd5b620002f98883890162000218565b945060408701519150808211156200031057600080fd5b506200031f8782880162000218565b92505060608501516200033281620001b6565b939692955090935050565b600181811c908216806200035257607f821691505b6020821081036200037357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003c757600081815260208120601f850160051c81016020861015620003a25750805b601f850160051c820191505b81811015620003c357828155600101620003ae565b5050505b505050565b81516001600160401b03811115620003e857620003e8620001cf565b6200040081620003f984546200033d565b8462000379565b602080601f8311600181146200043857600084156200041f5750858301515b600019600386901b1c1916600185901b178555620003c3565b600085815260208120601f198616915b82811015620004695788860151825594840194600190910190840162000448565b5085821015620004885787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251620004ac818460208701620001e5565b9190910192915050565b600060208284031215620004c957600080fd5b5051919050565b60805160a0516119e462000520600039600061026f01526000818161029b015281816104af0152818161099f01528181610a2601528181610e7c01528181610f4e015261122a01526119e46000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063ba087652116100a2578063d905777e11610071578063d905777e146103fd578063dd62ed3e14610410578063ed72ade614610423578063ef8b30f7146103d757600080fd5b8063ba087652146103af578063c63d75b6146103c2578063c6e6f592146103d7578063ce96cb77146103ea57600080fd5b8063a457c2d7116100de578063a457c2d714610363578063a9059cbb14610376578063b3d7f6b914610389578063b460af941461039c57600080fd5b806370a082311461031f57806394bf804d1461034857806395d89b411461035b57600080fd5b8063313ce567116101715780633a4b66f11161014b5780633a4b66f1146102e6578063402d267d146102f95780634cdad506146102045780636e553f651461030c57600080fd5b8063313ce5671461026857806338d52e0f1461029957806339509351146102d357600080fd5b8063095ea7b3116101ad578063095ea7b3146102175780630a28a4771461023a57806318160ddd1461024d57806323b872dd1461025557600080fd5b806301e1d114146101d457806306fdde03146101ef57806307a2d13a14610204575b600080fd5b6101dc61042d565b6040519081526020015b60405180910390f35b6101f7610531565b6040516101e69190611750565b6101dc610212366004611783565b6105c3565b61022a6102253660046117b8565b6105d6565b60405190151581526020016101e6565b6101dc610248366004611783565b6105ee565b6002546101dc565b61022a6102633660046117e2565b6105fb565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101e6565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016101e6565b61022a6102e13660046117b8565b610621565b6005546102bb906001600160a01b031681565b6101dc61030736600461181e565b610643565b6101dc61031a366004611839565b610661565b6101dc61032d36600461181e565b6001600160a01b031660009081526020819052604090205490565b6101dc610356366004611839565b6106d9565b6101f76106f3565b61022a6103713660046117b8565b610702565b61022a6103843660046117b8565b610788565b6101dc610397366004611783565b610796565b6101dc6103aa366004611865565b6107a3565b6101dc6103bd366004611865565b61081f565b6101dc6103d036600461181e565b5060001990565b6101dc6103e5366004611783565b610893565b6101dc6103f836600461181e565b6108a0565b6101dc61040b36600461181e565b6108c4565b6101dc61041e3660046118a1565b6108e2565b61042b61090d565b005b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a91906118cb565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052291906118cb565b61052c91906118e4565b905090565b6060600380546105409061190a565b80601f016020809104026020016040519081016040528092919081815260200182805461056c9061190a565b80156105b95780601f1061058e576101008083540402835291602001916105b9565b820191906000526020600020905b81548152906001019060200180831161059c57829003601f168201915b5050505050905090565b60006105d0826000610ab6565b92915050565b6000336105e4818585610ae9565b5060019392505050565b60006105d0826001610c0d565b600033610609858285610c3f565b610614858585610cb9565b60019150505b9392505050565b6000336105e481858561063483836108e2565b61063e91906118e4565b610ae9565b600061064d610e5d565b6106585760006105d0565b60001992915050565b600061066c82610643565b8311156106c05760405162461bcd60e51b815260206004820152601e60248201527f455243343632363a206465706f736974206d6f7265207468616e206d6178000060448201526064015b60405180910390fd5b60006106cb84610893565b905061061a33848684610e77565b6000806106e584610796565b905061061a33848387610e77565b6060600480546105409061190a565b6000338161071082866108e2565b9050838110156107705760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106b7565b61077d8286868403610ae9565b506001949350505050565b6000336105e4818585610cb9565b60006105d0826001610ab6565b60006107ae826108a0565b8411156107fd5760405162461bcd60e51b815260206004820152601f60248201527f455243343632363a207769746864726177206d6f7265207468616e206d61780060448201526064016106b7565b6000610808856105ee565b90506108173385858885610f12565b949350505050565b600061082a826108c4565b8411156108795760405162461bcd60e51b815260206004820152601d60248201527f455243343632363a2072656465656d206d6f7265207468616e206d617800000060448201526064016106b7565b6000610884856105c3565b90506108173385858489610f12565b60006105d0826000610c0d565b6001600160a01b0381166000908152602081905260408120546105d0906000610ab6565b6001600160a01b0381166000908152602081905260408120546105d0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600560009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610962573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098691906118cb565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906118cb565b600554909150610a4f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610fdb565b60055460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a906024015b600060405180830381600087803b158015610a9657600080fd5b505af1158015610aaa573d6000803e3d6000fd5b5050505050565b601290565b600080610ac260025490565b90508015610ae357610ade610ad561042d565b859083866110c0565b610817565b83610817565b6001600160a01b038316610b4b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106b7565b6001600160a01b038216610bac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106b7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600080610c1960025490565b9050831580610c26575080155b610ae357610ade81610c3661042d565b869190866110c0565b6000610c4b84846108e2565b90506000198114610cb35781811015610ca65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106b7565b610cb38484848403610ae9565b50505050565b6001600160a01b038316610d1d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106b7565b6001600160a01b038216610d7f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106b7565b6001600160a01b03831660009081526020819052604090205481811015610df75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106b7565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610cb3565b600080610e6861042d565b118061052c5750506002541590565b610ea37f0000000000000000000000000000000000000000000000000000000000000000853085611122565b610ead838261115a565b610eb682611219565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051610f04929190918252602082015260400190565b60405180910390a350505050565b826001600160a01b0316856001600160a01b031614610f3657610f36838683610c3f565b610f3f826112ed565b610f49838261131e565b610f747f00000000000000000000000000000000000000000000000000000000000000008584611450565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8585604051610fcc929190918252602082015260400190565b60405180910390a45050505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561102c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105091906118cb565b61105a91906118e4565b6040516001600160a01b038516602482015260448101829052909150610cb390859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611480565b6000806110ce868686611552565b905060018360028111156110e4576110e4611944565b1480156111015750600084806110fc576110fc61195a565b868809115b15611114576111116001826118e4565b90505b95945050505050565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610cb39085906323b872dd60e01b90608401611089565b6001600160a01b0382166111b05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106b7565b80600260008282546111c291906118e4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600554611253906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610fdb565b60055460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561129957600080fd5b505af11580156112ad573d6000803e3d6000fd5b505050507feebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca27816040516112e291815260200190565b60405180910390a150565b600554604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401610a7c565b6001600160a01b03821661137e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106b7565b6001600160a01b038216600090815260208190526040902054818110156113f25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106b7565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6040516001600160a01b03831660248201526044810182905261111d90849063a9059cbb60e01b90606401611089565b60006114d5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116019092919063ffffffff16565b80519091501561111d57808060200190518101906114f39190611970565b61111d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106b7565b600080806000198587098587029250828110838203039150508060000361158c578382816115825761158261195a565b049250505061061a565b80841161159857600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6060610817848460008585600080866001600160a01b031685876040516116289190611992565b60006040518083038185875af1925050503d8060008114611665576040519150601f19603f3d011682016040523d82523d6000602084013e61166a565b606091505b509150915061167b87838387611686565b979650505050505050565b606083156116f55782516000036116ee576001600160a01b0385163b6116ee5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106b7565b5081610817565b610817838381511561170a5781518083602001fd5b8060405162461bcd60e51b81526004016106b79190611750565b60005b8381101561173f578181015183820152602001611727565b83811115610cb35750506000910152565b602081526000825180602084015261176f816040850160208701611724565b601f01601f19169190910160400192915050565b60006020828403121561179557600080fd5b5035919050565b80356001600160a01b03811681146117b357600080fd5b919050565b600080604083850312156117cb57600080fd5b6117d48361179c565b946020939093013593505050565b6000806000606084860312156117f757600080fd5b6118008461179c565b925061180e6020850161179c565b9150604084013590509250925092565b60006020828403121561183057600080fd5b61061a8261179c565b6000806040838503121561184c57600080fd5b8235915061185c6020840161179c565b90509250929050565b60008060006060848603121561187a57600080fd5b8335925061188a6020850161179c565b91506118986040850161179c565b90509250925092565b600080604083850312156118b457600080fd5b6118bd8361179c565b915061185c6020840161179c565b6000602082840312156118dd57600080fd5b5051919050565b6000821982111561190557634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061191e57607f821691505b60208210810361193e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60006020828403121561198257600080fd5b8151801515811461061a57600080fd5b600082516119a4818460208701611724565b919091019291505056fea264697066735822122052ed29a7ebe3d4d145885a22ec249f652869c1d0d446b85e232d1c26c1432a2b64736f6c634300080f0033",
    "sourceMap": "312:1811:103:-:0;;;450:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;550:5;571:4;577:6;2042:5:36;:13;571:4:103;2042:5:36;:13;:::i;:::-;-1:-1:-1;2065:7:36;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;1513:12:38;1527:19;1550:28;1571:6;1550:20;;;:28;;:::i;:::-;1512:66;;;;1600:7;:42;;1626:16;:14;;;;;:16;;:::i;:::-;1600:42;;;1610:13;1600:42;1588:54;;;;-1:-1:-1;;;;;;;1652:15:38;;;;;599:5:103::2;:22:::0;;-1:-1:-1;;;;;;599:22:103::2;::::0;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;312:1811:103;;-1:-1:-1;;312:1811:103;1817:535:38;1983:56;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1983:56:38;-1:-1:-1;;;1983:56:38;;;1949:100;;1879:4;;;;;;;;-1:-1:-1;;;;;1949:20:38;;;:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1902:147;;;;2063:7;:39;;;;;2100:2;2074:15;:22;:28;;2063:39;2059:260;;;2118:24;2156:15;2145:38;;;;;;;;;;;;:::i;:::-;2118:65;-1:-1:-1;2221:15:38;2201:35;;2197:112;;2264:4;;2276:16;;-1:-1:-1;1817:535:38;-1:-1:-1;;;;1817:535:38:o;2197:112::-;2104:215;2059:260;-1:-1:-1;2336:5:38;;;;-1:-1:-1;1817:535:38;-1:-1:-1;;;1817:535:38:o;3091:91:36:-;3173:2;;3091:91::o;14:139:110:-;-1:-1:-1;;;;;97:31:110;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:127::-;219:10;214:3;210:20;207:1;200:31;250:4;247:1;240:15;274:4;271:1;264:15;290:258;362:1;372:113;386:6;383:1;380:13;372:113;;;462:11;;;456:18;443:11;;;436:39;408:2;401:10;372:113;;;503:6;500:1;497:13;494:48;;;538:1;529:6;524:3;520:16;513:27;494:48;;290:258;;;:::o;553:686::-;607:5;660:3;653:4;645:6;641:17;637:27;627:55;;678:1;675;668:12;627:55;701:13;;-1:-1:-1;;;;;763:10:110;;;760:36;;;776:18;;:::i;:::-;851:2;845:9;819:2;905:13;;-1:-1:-1;;901:22:110;;;925:2;897:31;893:40;881:53;;;949:18;;;969:22;;;946:46;943:72;;;995:18;;:::i;:::-;1035:10;1031:2;1024:22;1070:2;1062:6;1055:18;1116:3;1109:4;1104:2;1096:6;1092:15;1088:26;1085:35;1082:55;;;1133:1;1130;1123:12;1082:55;1146:63;1206:2;1199:4;1191:6;1187:17;1180:4;1172:6;1168:17;1146:63;:::i;:::-;1227:6;553:686;-1:-1:-1;;;;;;553:686:110:o;1244:857::-;1377:6;1385;1393;1401;1454:3;1442:9;1433:7;1429:23;1425:33;1422:53;;;1471:1;1468;1461:12;1422:53;1503:9;1497:16;1522:39;1555:5;1522:39;:::i;:::-;1629:2;1614:18;;1608:25;1580:5;;-1:-1:-1;;;;;;1682:14:110;;;1679:34;;;1709:1;1706;1699:12;1679:34;1732:61;1785:7;1776:6;1765:9;1761:22;1732:61;:::i;:::-;1722:71;;1839:2;1828:9;1824:18;1818:25;1802:41;;1868:2;1858:8;1855:16;1852:36;;;1884:1;1881;1874:12;1852:36;;1907:63;1962:7;1951:8;1940:9;1936:24;1907:63;:::i;:::-;1897:73;;;2015:2;2004:9;2000:18;1994:25;2028:41;2061:7;2028:41;:::i;:::-;1244:857;;;;-1:-1:-1;1244:857:110;;-1:-1:-1;;1244:857:110:o;2106:380::-;2185:1;2181:12;;;;2228;;;2249:61;;2303:4;2295:6;2291:17;2281:27;;2249:61;2356:2;2348:6;2345:14;2325:18;2322:38;2319:161;;2402:10;2397:3;2393:20;2390:1;2383:31;2437:4;2434:1;2427:15;2465:4;2462:1;2455:15;2319:161;;2106:380;;;:::o;2617:545::-;2719:2;2714:3;2711:11;2708:448;;;2755:1;2780:5;2776:2;2769:17;2825:4;2821:2;2811:19;2895:2;2883:10;2879:19;2876:1;2872:27;2866:4;2862:38;2931:4;2919:10;2916:20;2913:47;;;-1:-1:-1;2954:4:110;2913:47;3009:2;3004:3;3000:12;2997:1;2993:20;2987:4;2983:31;2973:41;;3064:82;3082:2;3075:5;3072:13;3064:82;;;3127:17;;;3108:1;3097:13;3064:82;;;3068:3;;;2708:448;2617:545;;;:::o;3338:1352::-;3458:10;;-1:-1:-1;;;;;3480:30:110;;3477:56;;;3513:18;;:::i;:::-;3542:97;3632:6;3592:38;3624:4;3618:11;3592:38;:::i;:::-;3586:4;3542:97;:::i;:::-;3694:4;;3758:2;3747:14;;3775:1;3770:663;;;;4477:1;4494:6;4491:89;;;-1:-1:-1;4546:19:110;;;4540:26;4491:89;-1:-1:-1;;3295:1:110;3291:11;;;3287:24;3283:29;3273:40;3319:1;3315:11;;;3270:57;4593:81;;3740:944;;3770:663;2564:1;2557:14;;;2601:4;2588:18;;-1:-1:-1;;3806:20:110;;;3924:236;3938:7;3935:1;3932:14;3924:236;;;4027:19;;;4021:26;4006:42;;4119:27;;;;4087:1;4075:14;;;;3954:19;;3924:236;;;3928:3;4188:6;4179:7;4176:19;4173:201;;;4249:19;;;4243:26;-1:-1:-1;;4332:1:110;4328:14;;;4344:3;4324:24;4320:37;4316:42;4301:58;4286:74;;4173:201;-1:-1:-1;;;;;4420:1:110;4404:14;;;4400:22;4387:36;;-1:-1:-1;3338:1352:110:o;4695:274::-;4824:3;4862:6;4856:13;4878:53;4924:6;4919:3;4912:4;4904:6;4900:17;4878:53;:::i;:::-;4947:16;;;;;4695:274;-1:-1:-1;;4695:274:110:o;4974:184::-;5044:6;5097:2;5085:9;5076:7;5072:23;5068:32;5065:52;;;5113:1;5110;5103:12;5065:52;-1:-1:-1;5136:16:110;;4974:184;-1:-1:-1;4974:184:110:o;:::-;312:1811:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063ba087652116100a2578063d905777e11610071578063d905777e146103fd578063dd62ed3e14610410578063ed72ade614610423578063ef8b30f7146103d757600080fd5b8063ba087652146103af578063c63d75b6146103c2578063c6e6f592146103d7578063ce96cb77146103ea57600080fd5b8063a457c2d7116100de578063a457c2d714610363578063a9059cbb14610376578063b3d7f6b914610389578063b460af941461039c57600080fd5b806370a082311461031f57806394bf804d1461034857806395d89b411461035b57600080fd5b8063313ce567116101715780633a4b66f11161014b5780633a4b66f1146102e6578063402d267d146102f95780634cdad506146102045780636e553f651461030c57600080fd5b8063313ce5671461026857806338d52e0f1461029957806339509351146102d357600080fd5b8063095ea7b3116101ad578063095ea7b3146102175780630a28a4771461023a57806318160ddd1461024d57806323b872dd1461025557600080fd5b806301e1d114146101d457806306fdde03146101ef57806307a2d13a14610204575b600080fd5b6101dc61042d565b6040519081526020015b60405180910390f35b6101f7610531565b6040516101e69190611750565b6101dc610212366004611783565b6105c3565b61022a6102253660046117b8565b6105d6565b60405190151581526020016101e6565b6101dc610248366004611783565b6105ee565b6002546101dc565b61022a6102633660046117e2565b6105fb565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101e6565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016101e6565b61022a6102e13660046117b8565b610621565b6005546102bb906001600160a01b031681565b6101dc61030736600461181e565b610643565b6101dc61031a366004611839565b610661565b6101dc61032d36600461181e565b6001600160a01b031660009081526020819052604090205490565b6101dc610356366004611839565b6106d9565b6101f76106f3565b61022a6103713660046117b8565b610702565b61022a6103843660046117b8565b610788565b6101dc610397366004611783565b610796565b6101dc6103aa366004611865565b6107a3565b6101dc6103bd366004611865565b61081f565b6101dc6103d036600461181e565b5060001990565b6101dc6103e5366004611783565b610893565b6101dc6103f836600461181e565b6108a0565b6101dc61040b36600461181e565b6108c4565b6101dc61041e3660046118a1565b6108e2565b61042b61090d565b005b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a91906118cb565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052291906118cb565b61052c91906118e4565b905090565b6060600380546105409061190a565b80601f016020809104026020016040519081016040528092919081815260200182805461056c9061190a565b80156105b95780601f1061058e576101008083540402835291602001916105b9565b820191906000526020600020905b81548152906001019060200180831161059c57829003601f168201915b5050505050905090565b60006105d0826000610ab6565b92915050565b6000336105e4818585610ae9565b5060019392505050565b60006105d0826001610c0d565b600033610609858285610c3f565b610614858585610cb9565b60019150505b9392505050565b6000336105e481858561063483836108e2565b61063e91906118e4565b610ae9565b600061064d610e5d565b6106585760006105d0565b60001992915050565b600061066c82610643565b8311156106c05760405162461bcd60e51b815260206004820152601e60248201527f455243343632363a206465706f736974206d6f7265207468616e206d6178000060448201526064015b60405180910390fd5b60006106cb84610893565b905061061a33848684610e77565b6000806106e584610796565b905061061a33848387610e77565b6060600480546105409061190a565b6000338161071082866108e2565b9050838110156107705760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106b7565b61077d8286868403610ae9565b506001949350505050565b6000336105e4818585610cb9565b60006105d0826001610ab6565b60006107ae826108a0565b8411156107fd5760405162461bcd60e51b815260206004820152601f60248201527f455243343632363a207769746864726177206d6f7265207468616e206d61780060448201526064016106b7565b6000610808856105ee565b90506108173385858885610f12565b949350505050565b600061082a826108c4565b8411156108795760405162461bcd60e51b815260206004820152601d60248201527f455243343632363a2072656465656d206d6f7265207468616e206d617800000060448201526064016106b7565b6000610884856105c3565b90506108173385858489610f12565b60006105d0826000610c0d565b6001600160a01b0381166000908152602081905260408120546105d0906000610ab6565b6001600160a01b0381166000908152602081905260408120546105d0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600560009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610962573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098691906118cb565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906118cb565b600554909150610a4f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610fdb565b60055460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a906024015b600060405180830381600087803b158015610a9657600080fd5b505af1158015610aaa573d6000803e3d6000fd5b5050505050565b601290565b600080610ac260025490565b90508015610ae357610ade610ad561042d565b859083866110c0565b610817565b83610817565b6001600160a01b038316610b4b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106b7565b6001600160a01b038216610bac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106b7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600080610c1960025490565b9050831580610c26575080155b610ae357610ade81610c3661042d565b869190866110c0565b6000610c4b84846108e2565b90506000198114610cb35781811015610ca65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106b7565b610cb38484848403610ae9565b50505050565b6001600160a01b038316610d1d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106b7565b6001600160a01b038216610d7f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106b7565b6001600160a01b03831660009081526020819052604090205481811015610df75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106b7565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610cb3565b600080610e6861042d565b118061052c5750506002541590565b610ea37f0000000000000000000000000000000000000000000000000000000000000000853085611122565b610ead838261115a565b610eb682611219565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051610f04929190918252602082015260400190565b60405180910390a350505050565b826001600160a01b0316856001600160a01b031614610f3657610f36838683610c3f565b610f3f826112ed565b610f49838261131e565b610f747f00000000000000000000000000000000000000000000000000000000000000008584611450565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8585604051610fcc929190918252602082015260400190565b60405180910390a45050505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561102c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105091906118cb565b61105a91906118e4565b6040516001600160a01b038516602482015260448101829052909150610cb390859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611480565b6000806110ce868686611552565b905060018360028111156110e4576110e4611944565b1480156111015750600084806110fc576110fc61195a565b868809115b15611114576111116001826118e4565b90505b95945050505050565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610cb39085906323b872dd60e01b90608401611089565b6001600160a01b0382166111b05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106b7565b80600260008282546111c291906118e4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600554611253906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610fdb565b60055460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561129957600080fd5b505af11580156112ad573d6000803e3d6000fd5b505050507feebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca27816040516112e291815260200190565b60405180910390a150565b600554604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401610a7c565b6001600160a01b03821661137e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106b7565b6001600160a01b038216600090815260208190526040902054818110156113f25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106b7565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6040516001600160a01b03831660248201526044810182905261111d90849063a9059cbb60e01b90606401611089565b60006114d5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116019092919063ffffffff16565b80519091501561111d57808060200190518101906114f39190611970565b61111d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106b7565b600080806000198587098587029250828110838203039150508060000361158c578382816115825761158261195a565b049250505061061a565b80841161159857600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6060610817848460008585600080866001600160a01b031685876040516116289190611992565b60006040518083038185875af1925050503d8060008114611665576040519150601f19603f3d011682016040523d82523d6000602084013e61166a565b606091505b509150915061167b87838387611686565b979650505050505050565b606083156116f55782516000036116ee576001600160a01b0385163b6116ee5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106b7565b5081610817565b610817838381511561170a5781518083602001fd5b8060405162461bcd60e51b81526004016106b79190611750565b60005b8381101561173f578181015183820152602001611727565b83811115610cb35750506000910152565b602081526000825180602084015261176f816040850160208701611724565b601f01601f19169190910160400192915050565b60006020828403121561179557600080fd5b5035919050565b80356001600160a01b03811681146117b357600080fd5b919050565b600080604083850312156117cb57600080fd5b6117d48361179c565b946020939093013593505050565b6000806000606084860312156117f757600080fd5b6118008461179c565b925061180e6020850161179c565b9150604084013590509250925092565b60006020828403121561183057600080fd5b61061a8261179c565b6000806040838503121561184c57600080fd5b8235915061185c6020840161179c565b90509250929050565b60008060006060848603121561187a57600080fd5b8335925061188a6020850161179c565b91506118986040850161179c565b90509250925092565b600080604083850312156118b457600080fd5b6118bd8361179c565b915061185c6020840161179c565b6000602082840312156118dd57600080fd5b5051919050565b6000821982111561190557634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061191e57607f821691505b60208210810361193e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60006020828403121561198257600080fd5b8151801515811461061a57600080fd5b600082516119a4818460208701611724565b919091019291505056fea264697066735822122052ed29a7ebe3d4d145885a22ec249f652869c1d0d446b85e232d1c26c1432a2b64736f6c634300080f0033",
    "sourceMap": "312:1811:103:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:158;;;:::i;:::-;;;160:25:110;;;148:2;133:18;634:158:103;;;;;;;;2154:98:36;;;:::i;:::-;;;;;;;:::i;3476:163:38:-;;;;;;:::i;:::-;;:::i;4431:197:36:-;;;;;;:::i;:::-;;:::i;:::-;;;1634:14:110;;1627:22;1609:41;;1597:2;1582:18;4431:197:36;1469:187:110;4838:154:38;;;;;;:::i;:::-;;:::i;3242:106:36:-;3329:12;;3242:106;;5190:286;;;;;;:::i;:::-;;:::i;2762:121:38:-;;;2166:4:110;2867:9:38;2154:17:110;2136:36;;2124:2;2109:18;2762:121:38;1994:184:110;2927:103:38;3016:6;2927:103;;;-1:-1:-1;;;;;2347:32:110;;;2329:51;;2317:2;2302:18;2927:103:38;2183:203:110;5871:234:36;;;;;;:::i;:::-;;:::i;424:19:103:-;;;;;-1:-1:-1;;;;;424:19:103;;;3688:148:38;;;;;;:::i;:::-;;:::i;5244:315::-;;;;;;:::i;:::-;;:::i;3406:125:36:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:36;3480:7;3506:18;;;;;;;;;;;;3406:125;5602:303:38;;;;;;:::i;:::-;;:::i;2365:102:36:-;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;4634:150:38:-;;;;;;:::i;:::-;;:::i;5952:369::-;;;;;;:::i;:::-;;:::i;6366:361::-;;;;;;:::i;:::-;;:::i;3882:114::-;;;;;;:::i;:::-;-1:-1:-1;;;3972:17:38;3882:114;3259:163;;;;;;:::i;:::-;;:::i;4046:161::-;;;;;;:::i;:::-;;:::i;4255:121::-;;;;;;:::i;:::-;;:::i;3974:149:36:-;;;;;;:::i;:::-;;:::i;1088:216:103:-;;;:::i;:::-;;634:158;755:5;;:30;;-1:-1:-1;;;755:30:103;;779:4;755:30;;;2329:51:110;695:7:103;;-1:-1:-1;;;;;755:5:103;;:15;;2302:18:110;;755:30:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;721:31;;-1:-1:-1;;;721:31:103;;746:4;721:31;;;2329:51:110;721:6:103;-1:-1:-1;;;;;721:16:103;;;;2302:18:110;;721:31:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;;;:::i;:::-;714:71;;634:158;:::o;2154:98:36:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;3476:163:38:-;3555:14;3588:44;3605:6;3613:18;3588:16;:44::i;:::-;3581:51;3476:163;-1:-1:-1;;3476:163:38:o;4431:197:36:-;4514:4;719:10:43;4568:32:36;719:10:43;4584:7:36;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:36;;4431:197;-1:-1:-1;;;4431:197:36:o;4838:154:38:-;4917:7;4943:42;4960:6;4968:16;4943;:42::i;5190:286:36:-;5317:4;719:10:43;5373:38:36;5389:4;719:10:43;5404:6:36;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;;:::o;5871:234::-;5959:4;719:10:43;6013:64:36;719:10:43;6029:7:36;6066:10;6038:25;719:10:43;6029:7:36;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;3688:148:38:-;3755:7;3781:24;:22;:24::i;:::-;:48;;3828:1;3781:48;;;-1:-1:-1;;3774:55:38;3688:148;-1:-1:-1;;3688:148:38:o;5244:315::-;5328:7;5365:20;5376:8;5365:10;:20::i;:::-;5355:6;:30;;5347:73;;;;-1:-1:-1;;;5347:73:38;;4669:2:110;5347:73:38;;;4651:21:110;4708:2;4688:18;;;4681:30;4747:32;4727:18;;;4720:60;4797:18;;5347:73:38;;;;;;;;;5431:14;5448:22;5463:6;5448:14;:22::i;:::-;5431:39;-1:-1:-1;5480:48:38;719:10:43;5503:8:38;5513:6;5521;5480:8;:48::i;5602:303::-;5683:7;5780:14;5797:19;5809:6;5797:11;:19::i;:::-;5780:36;-1:-1:-1;5826:48:38;719:10:43;5849:8:38;5859:6;5867;5826:8;:48::i;2365:102:36:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:43;6685:4:36;6766:25;719:10:43;6783:7:36;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:36;;5384:2:110;6801:85:36;;;5366:21:110;5423:2;5403:18;;;5396:30;5462:34;5442:18;;;5435:62;-1:-1:-1;;;5513:18:110;;;5506:35;5558:19;;6801:85:36;5182:401:110;6801:85:36;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;-1:-1:-1;7008:4:36;;6592:427;-1:-1:-1;;;;6592:427:36:o;3727:189::-;3806:4;719:10:43;3860:28:36;719:10:43;3877:2:36;3881:6;3860:9;:28::i;4634:150:38:-;4709:7;4735:42;4752:6;4760:16;4735;:42::i;5952:369::-;6082:7;6119:18;6131:5;6119:11;:18::i;:::-;6109:6;:28;;6101:72;;;;-1:-1:-1;;;6101:72:38;;5790:2:110;6101:72:38;;;5772:21:110;5829:2;5809:18;;;5802:30;5868:33;5848:18;;;5841:61;5919:18;;6101:72:38;5588:355:110;6101:72:38;6184:14;6201:23;6217:6;6201:15;:23::i;:::-;6184:40;-1:-1:-1;6234:56:38;719:10:43;6258:8:38;6268:5;6275:6;6283;6234:9;:56::i;:::-;6308:6;5952:369;-1:-1:-1;;;;5952:369:38:o;6366:361::-;6494:7;6531:16;6541:5;6531:9;:16::i;:::-;6521:6;:26;;6513:68;;;;-1:-1:-1;;;6513:68:38;;6150:2:110;6513:68:38;;;6132:21:110;6189:2;6169:18;;;6162:30;6228:31;6208:18;;;6201:59;6277:18;;6513:68:38;5948:353:110;6513:68:38;6592:14;6609:21;6623:6;6609:13;:21::i;:::-;6592:38;-1:-1:-1;6640:56:38;719:10:43;6664:8:38;6674:5;6681:6;6689;6640:9;:56::i;3259:163::-;3338:14;3371:44;3388:6;3396:18;3371:16;:44::i;4046:161::-;-1:-1:-1;;;;;3506:18:36;;4120:7:38;3506:18:36;;;;;;;;;;;4146:54:38;;4181:18;4146:16;:54::i;4255:121::-;-1:-1:-1;;;;;3506:18:36;;4327:7:38;3506:18:36;;;;;;;;;;;4353:16:38;3406:125:36;3974:149;-1:-1:-1;;;;;4089:18:36;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;1088:216:103:-;1128:5;;;;;;;;;-1:-1:-1;;;;;1128:5:103;-1:-1:-1;;;;;1128:15:103;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1173:31:103;;-1:-1:-1;;;1173:31:103;;1198:4;1173:31;;;2329:51:110;1155:15:103;;1173:6;-1:-1:-1;;;;;1173:16:103;;;;2302:18:110;;1173:31:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1251:5;;1155:49;;-1:-1:-1;1214:53:103;;-1:-1:-1;;;;;1214:6:103;:28;;;1251:5;1155:49;1214:28;:53::i;:::-;1277:5;;:20;;-1:-1:-1;;;1277:20:103;;;;;160:25:110;;;-1:-1:-1;;;;;1277:5:103;;;;:11;;133:18:110;;1277:20:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1118:186;1088:216::o;3091:91:36:-;3173:2;;3091:91::o;7902:295:38:-;7999:14;8025;8042:13;3329:12:36;;;3242:106;8042:13:38;8025:30;-1:-1:-1;8085:11:38;;8084:106;;8144:46;8158:13;:11;:13::i;:::-;8144:6;;8173;8181:8;8144:13;:46::i;:::-;8084:106;;;8124:6;8100:41;8432:176;10504:370:36;-1:-1:-1;;;;;10635:19:36;;10627:68;;;;-1:-1:-1;;;10627:68:36;;6508:2:110;10627:68:36;;;6490:21:110;6547:2;6527:18;;;6520:30;6586:34;6566:18;;;6559:62;-1:-1:-1;;;6637:18:110;;;6630:34;6681:19;;10627:68:36;6306:400:110;10627:68:36;-1:-1:-1;;;;;10713:21:36;;10705:68;;;;-1:-1:-1;;;10705:68:36;;6913:2:110;10705:68:36;;;6895:21:110;6952:2;6932:18;;;6925:30;6991:34;6971:18;;;6964:62;-1:-1:-1;;;7042:18:110;;;7035:32;7084:19;;10705:68:36;6711:398:110;10705:68:36;-1:-1:-1;;;;;10784:18:36;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;160:25:110;;;10835:32:36;;133:18:110;10835:32:36;;;;;;;10504:370;;;:::o;7025:342:38:-;7122:14;7148;7165:13;3329:12:36;;;3242:106;7165:13:38;7148:30;-1:-1:-1;7208:11:38;;;:26;;-1:-1:-1;7223:11:38;;7208:26;7207:153;;7314:46;7328:6;7336:13;:11;:13::i;:::-;7314:6;;:46;7351:8;7314:13;:46::i;11155:441:36:-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:36;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:36;;7316:2:110;11404:68:36;;;7298:21:110;7355:2;7335:18;;;7328:30;7394:31;7374:18;;;7367:59;7443:18;;11404:68:36;7114:353:110;11404:68:36;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:36;;7591:68;;;;-1:-1:-1;;;7591:68:36;;7674:2:110;7591:68:36;;;7656:21:110;7713:2;7693:18;;;7686:30;7752:34;7732:18;;;7725:62;-1:-1:-1;;;7803:18:110;;;7796:35;7848:19;;7591:68:36;7472:401:110;7591:68:36;-1:-1:-1;;;;;7677:16:36;;7669:64;;;;-1:-1:-1;;;7669:64:36;;8080:2:110;7669:64:36;;;8062:21:110;8119:2;8099:18;;;8092:30;8158:34;8138:18;;;8131:62;-1:-1:-1;;;8209:18:110;;;8202:33;8252:19;;7669:64:36;7878:399:110;7669:64:36;-1:-1:-1;;;;;7815:15:36;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:36;;8484:2:110;7840:72:36;;;8466:21:110;8523:2;8503:18;;;8496:30;8562:34;8542:18;;;8535:62;-1:-1:-1;;;8613:18:110;;;8606:36;8659:19;;7840:72:36;8282:402:110;7840:72:36;-1:-1:-1;;;;;7946:15:36;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;160:25:110;;;8161:13:36;;8210:26;;133:18:110;8210:26:36;;;;;;;8247:37;12180:121;10528:125:38;10584:4;10623:1;10607:13;:11;:13::i;:::-;:17;:39;;;-1:-1:-1;;3329:12:36;;10628:18:38;;10528:125::o;1310:366:103:-;1485:65;1512:6;1520;1536:4;1543:6;1485:26;:65::i;:::-;1560:23;1566:8;1576:6;1560:5;:23::i;:::-;1593:20;1606:6;1593:12;:20::i;:::-;1644:8;-1:-1:-1;;;;;1628:41:103;1636:6;-1:-1:-1;;;;;1628:41:103;;1654:6;1662;1628:41;;;;;;8863:25:110;;;8919:2;8904:18;;8897:34;8851:2;8836:18;;8689:248;1628:41:103;;;;;;;;1310:366;;;;:::o;1682:439::-;1860:5;-1:-1:-1;;;;;1850:15:103;:6;-1:-1:-1;;;;;1850:15:103;;1846:84;;1881:38;1897:5;1904:6;1912;1881:15;:38::i;:::-;1939:22;1954:6;1939:14;:22::i;:::-;1971:20;1977:5;1984:6;1971:5;:20::i;:::-;2001:48;2024:6;2032:8;2042:6;2001:22;:48::i;:::-;2092:5;-1:-1:-1;;;;;2065:49:103;2082:8;-1:-1:-1;;;;;2065:49:103;2074:6;-1:-1:-1;;;;;2065:49:103;;2099:6;2107;2065:49;;;;;;8863:25:110;;;8919:2;8904:18;;8897:34;8851:2;8836:18;;8689:248;2065:49:103;;;;;;;;1682:439;;;;;:::o;2084:310:41:-;2233:39;;-1:-1:-1;;;2233:39:41;;2257:4;2233:39;;;9154:34:110;-1:-1:-1;;;;;9224:15:110;;;9204:18;;;9197:43;2210:20:41;;2275:5;;2233:15;;;;;9089:18:110;;2233:39:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2317:69;;-1:-1:-1;;;;;9443:32:110;;2317:69:41;;;9425:51:110;9492:18;;;9485:34;;;2210:70:41;;-1:-1:-1;2290:97:41;;2310:5;;-1:-1:-1;;;2340:22:41;9398:18:110;;2317:69:41;;;;-1:-1:-1;;2317:69:41;;;;;;;;;;;;;;-1:-1:-1;;;;;2317:69:41;-1:-1:-1;;;;;;2317:69:41;;;;;;;;;;2290:19;:97::i;5724:337:45:-;5863:7;5882:14;5899:25;5906:1;5909;5912:11;5899:6;:25::i;:::-;5882:42;-1:-1:-1;5950:11:45;5938:8;:23;;;;;;;;:::i;:::-;;:56;;;;;5993:1;5978:11;5965:25;;;;;:::i;:::-;5975:1;5972;5965:25;:29;5938:56;5934:98;;;6010:11;6020:1;6010:11;;:::i;:::-;;;5934:98;6048:6;5724:337;-1:-1:-1;;;;;5724:337:45:o;12180:121:36:-;;;;:::o;974:241:41:-;1139:68;;-1:-1:-1;;;;;10052:15:110;;;1139:68:41;;;10034:34:110;10104:15;;10084:18;;;10077:43;10136:18;;;10129:34;;;1112:96:41;;1132:5;;-1:-1:-1;;;1162:27:41;9969:18:110;;1139:68:41;9794:375:110;8567:535:36;-1:-1:-1;;;;;8650:21:36;;8642:65;;;;-1:-1:-1;;;8642:65:36;;10376:2:110;8642:65:36;;;10358:21:110;10415:2;10395:18;;;10388:30;10454:33;10434:18;;;10427:61;10505:18;;8642:65:36;10174:355:110;8642:65:36;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:36;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;160:25:110;;;8999:37:36;;133:18:110;8999:37:36;;;;;;;8567:535;;:::o;798:174:103:-;892:5;;855:52;;-1:-1:-1;;;;;855:6:103;:28;;;892:5;900:6;855:28;:52::i;:::-;917:5;;:19;;-1:-1:-1;;;917:19:103;;;;;160:25:110;;;-1:-1:-1;;;;;917:5:103;;;;:11;;133:18:110;;917:19:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;951:14;958:6;951:14;;;;160:25:110;;148:2;133:18;;14:177;951:14:103;;;;;;;;798:174;:::o;978:104::-;1045:5;;:30;;-1:-1:-1;;;1045:30:103;;;;;160:25:110;;;-1:-1:-1;;;;;1045:5:103;;;;:14;;133:18:110;;1045:30:103;14:177:110;9422:659:36;-1:-1:-1;;;;;9505:21:36;;9497:67;;;;-1:-1:-1;;;9497:67:36;;10736:2:110;9497:67:36;;;10718:21:110;10775:2;10755:18;;;10748:30;10814:34;10794:18;;;10787:62;-1:-1:-1;;;10865:18:110;;;10858:31;10906:19;;9497:67:36;10534:397:110;9497:67:36;-1:-1:-1;;;;;9660:18:36;;9635:22;9660:18;;;;;;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:36;;11138:2:110;9688:71:36;;;11120:21:110;11177:2;11157:18;;;11150:30;11216:34;11196:18;;;11189:62;-1:-1:-1;;;11267:18:110;;;11260:32;11309:19;;9688:71:36;10936:398:110;9688:71:36;-1:-1:-1;;;;;9793:18:36;;:9;:18;;;;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;160:25:110;;;9793:9:36;;:18;9978:37;;133:18:110;9978:37:36;;;;;;;12180:121;;;:::o;763:205:41:-;902:58;;-1:-1:-1;;;;;9443:32:110;;902:58:41;;;9425:51:110;9492:18;;;9485:34;;;875:86:41;;895:5;;-1:-1:-1;;;925:23:41;9398:18:110;;902:58:41;9251:274:110;3747:706:41;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:41;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:41;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:41;;11823:2:110;4351:85:41;;;11805:21:110;11862:2;11842:18;;;11835:30;11901:34;11881:18;;;11874:62;-1:-1:-1;;;11952:18:110;;;11945:40;12002:19;;4351:85:41;11621:406:110;1667:3925:45;1779:14;;;-1:-1:-1;;2316:1:45;2313;2306:20;2359:1;2356;2352:9;2343:18;;2414:5;2410:2;2407:13;2399:5;2395:2;2391:14;2387:34;2378:43;;;2516:5;2525:1;2516:10;2512:75;;2561:11;2553:5;:19;;;;;:::i;:::-;;2546:26;;;;;;2512:75;2711:5;2697:11;:19;2689:28;;;;;;2973:17;3108:11;3105:1;3102;3095:25;4486:1;3656;3641:12;;:16;;3626:32;;3761:22;;;;4467:1;:15;;4466:21;;4719;;;4715:25;;4704:36;4788:21;;;4784:25;;4773:36;4858:21;;;4854:25;;4843:36;4928:21;;;4924:25;;4913:36;4998:21;;;4994:25;;4983:36;5069:21;;;5065:25;;;5054:36;;;3611:12;4006;;;4002:23;;;3998:31;;;3222:20;;;3211:32;;;4118:12;;;;3269:21;;3859:16;;;;4109:21;;;;5533:15;;;-1:-1:-1;;;;1667:3925:45:o;3872:223:42:-;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4005;5240;5254:23;5281:6;-1:-1:-1;;;;;5281:11:42;5300:5;5307:4;5281:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5239:73;;;;5329:69;5356:6;5364:7;5373:10;5385:12;5329:26;:69::i;:::-;5322:76;4959:446;-1:-1:-1;;;;;;;4959:446:42:o;7465:628::-;7645:12;7673:7;7669:418;;;7700:10;:17;7721:1;7700:22;7696:286;;-1:-1:-1;;;;;1465:19:42;;;7907:60;;;;-1:-1:-1;;;7907:60:42;;12920:2:110;7907:60:42;;;12902:21:110;12959:2;12939:18;;;12932:30;12998:31;12978:18;;;12971:59;13047:18;;7907:60:42;12718:353:110;7907:60:42;-1:-1:-1;8002:10:42;7995:17;;7669:418;8043:33;8051:10;8063:12;8774:17;;:21;8770:379;;9002:10;8996:17;9058:15;9045:10;9041:2;9037:19;9030:44;8770:379;9125:12;9118:20;;-1:-1:-1;;;9118:20:42;;;;;;;;:::i;196:258:110:-;268:1;278:113;292:6;289:1;286:13;278:113;;;368:11;;;362:18;349:11;;;342:39;314:2;307:10;278:113;;;409:6;406:1;403:13;400:48;;;-1:-1:-1;;444:1:110;426:16;;419:27;196:258::o;459:383::-;608:2;597:9;590:21;571:4;640:6;634:13;683:6;678:2;667:9;663:18;656:34;699:66;758:6;753:2;742:9;738:18;733:2;725:6;721:15;699:66;:::i;:::-;826:2;805:15;-1:-1:-1;;801:29:110;786:45;;;;833:2;782:54;;459:383;-1:-1:-1;;459:383:110:o;847:180::-;906:6;959:2;947:9;938:7;934:23;930:32;927:52;;;975:1;972;965:12;927:52;-1:-1:-1;998:23:110;;847:180;-1:-1:-1;847:180:110:o;1032:173::-;1100:20;;-1:-1:-1;;;;;1149:31:110;;1139:42;;1129:70;;1195:1;1192;1185:12;1129:70;1032:173;;;:::o;1210:254::-;1278:6;1286;1339:2;1327:9;1318:7;1314:23;1310:32;1307:52;;;1355:1;1352;1345:12;1307:52;1378:29;1397:9;1378:29;:::i;:::-;1368:39;1454:2;1439:18;;;;1426:32;;-1:-1:-1;;;1210:254:110:o;1661:328::-;1738:6;1746;1754;1807:2;1795:9;1786:7;1782:23;1778:32;1775:52;;;1823:1;1820;1813:12;1775:52;1846:29;1865:9;1846:29;:::i;:::-;1836:39;;1894:38;1928:2;1917:9;1913:18;1894:38;:::i;:::-;1884:48;;1979:2;1968:9;1964:18;1951:32;1941:42;;1661:328;;;;;:::o;2615:186::-;2674:6;2727:2;2715:9;2706:7;2702:23;2698:32;2695:52;;;2743:1;2740;2733:12;2695:52;2766:29;2785:9;2766:29;:::i;2806:254::-;2874:6;2882;2935:2;2923:9;2914:7;2910:23;2906:32;2903:52;;;2951:1;2948;2941:12;2903:52;2987:9;2974:23;2964:33;;3016:38;3050:2;3039:9;3035:18;3016:38;:::i;:::-;3006:48;;2806:254;;;;;:::o;3065:328::-;3142:6;3150;3158;3211:2;3199:9;3190:7;3186:23;3182:32;3179:52;;;3227:1;3224;3217:12;3179:52;3263:9;3250:23;3240:33;;3292:38;3326:2;3315:9;3311:18;3292:38;:::i;:::-;3282:48;;3349:38;3383:2;3372:9;3368:18;3349:38;:::i;:::-;3339:48;;3065:328;;;;;:::o;3398:260::-;3466:6;3474;3527:2;3515:9;3506:7;3502:23;3498:32;3495:52;;;3543:1;3540;3533:12;3495:52;3566:29;3585:9;3566:29;:::i;:::-;3556:39;;3614:38;3648:2;3637:9;3633:18;3614:38;:::i;3663:184::-;3733:6;3786:2;3774:9;3765:7;3761:23;3757:32;3754:52;;;3802:1;3799;3792:12;3754:52;-1:-1:-1;3825:16:110;;3663:184;-1:-1:-1;3663:184:110:o;3852:225::-;3892:3;3923:1;3919:6;3916:1;3913:13;3910:136;;;3968:10;3963:3;3959:20;3956:1;3949:31;4003:4;4000:1;3993:15;4031:4;4028:1;4021:15;3910:136;-1:-1:-1;4062:9:110;;3852:225::o;4082:380::-;4161:1;4157:12;;;;4204;;;4225:61;;4279:4;4271:6;4267:17;4257:27;;4225:61;4332:2;4324:6;4321:14;4301:18;4298:38;4295:161;;4378:10;4373:3;4369:20;4366:1;4359:31;4413:4;4410:1;4403:15;4441:4;4438:1;4431:15;4295:161;;4082:380;;;:::o;9530:127::-;9591:10;9586:3;9582:20;9579:1;9572:31;9622:4;9619:1;9612:15;9646:4;9643:1;9636:15;9662:127;9723:10;9718:3;9714:20;9711:1;9704:31;9754:4;9751:1;9744:15;9778:4;9775:1;9768:15;11339:277;11406:6;11459:2;11447:9;11438:7;11434:23;11430:32;11427:52;;;11475:1;11472;11465:12;11427:52;11507:9;11501:16;11560:5;11553:13;11546:21;11539:5;11536:32;11526:60;;11582:1;11579;11572:12;12439:274;12568:3;12606:6;12600:13;12622:53;12668:6;12663:3;12656:4;12648:6;12644:17;12622:53;:::i;:::-;12691:16;;;;;12439:274;-1:-1:-1;;12439:274:110:o",
    "linkReferences": {},
    "immutableReferences": {
      "28578": [
        {
          "start": 667,
          "length": 32
        },
        {
          "start": 1199,
          "length": 32
        },
        {
          "start": 2463,
          "length": 32
        },
        {
          "start": 2598,
          "length": 32
        },
        {
          "start": 3708,
          "length": 32
        },
        {
          "start": 3918,
          "length": 32
        },
        {
          "start": 4650,
          "length": 32
        }
      ],
      "28580": [
        {
          "start": 623,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "asset()": "38d52e0f",
    "balanceOf(address)": "70a08231",
    "compoundMGN()": "ed72ade6",
    "convertToAssets(uint256)": "07a2d13a",
    "convertToShares(uint256)": "c6e6f592",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deposit(uint256,address)": "6e553f65",
    "increaseAllowance(address,uint256)": "39509351",
    "maxDeposit(address)": "402d267d",
    "maxMint(address)": "c63d75b6",
    "maxRedeem(address)": "d905777e",
    "maxWithdraw(address)": "ce96cb77",
    "mint(uint256,address)": "94bf804d",
    "name()": "06fdde03",
    "previewDeposit(uint256)": "ef8b30f7",
    "previewMint(uint256)": "b3d7f6b9",
    "previewRedeem(uint256)": "4cdad506",
    "previewWithdraw(uint256)": "0a28a477",
    "redeem(uint256,address,address)": "ba087652",
    "stake()": "3a4b66f1",
    "symbol()": "95d89b41",
    "totalAssets()": "01e1d114",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "withdraw(uint256,address,address)": "b460af94"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_stake\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compoundMGN\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"contract IStake\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"See {IERC4626-asset}. \"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"convertToAssets(uint256)\":{\"details\":\"See {IERC4626-convertToAssets}. \"},\"convertToShares(uint256)\":{\"details\":\"See {IERC4626-convertToShares}. \"},\"decimals()\":{\"details\":\"Decimals are read from the underlying asset in the constructor and cached. If this fails (e.g., the asset has not been created yet), the cached value is set to a default obtained by `super.decimals()` (which depends on inheritance but is most likely 18). Override this function in order to set a guaranteed hardcoded value. See {IERC20Metadata-decimals}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256,address)\":{\"details\":\"See {IERC4626-deposit}. \"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"maxDeposit(address)\":{\"details\":\"See {IERC4626-maxDeposit}. \"},\"maxMint(address)\":{\"details\":\"See {IERC4626-maxMint}. \"},\"maxRedeem(address)\":{\"details\":\"See {IERC4626-maxRedeem}. \"},\"maxWithdraw(address)\":{\"details\":\"See {IERC4626-maxWithdraw}. \"},\"mint(uint256,address)\":{\"details\":\"See {IERC4626-mint}. \"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"See {IERC4626-previewDeposit}. \"},\"previewMint(uint256)\":{\"details\":\"See {IERC4626-previewMint}. \"},\"previewRedeem(uint256)\":{\"details\":\"See {IERC4626-previewRedeem}. \"},\"previewWithdraw(uint256)\":{\"details\":\"See {IERC4626-previewWithdraw}. \"},\"redeem(uint256,address,address)\":{\"details\":\"See {IERC4626-redeem}. \"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"See {IERC4626-totalAssets}. \"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"withdraw(uint256,address,address)\":{\"details\":\"See {IERC4626-withdraw}. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mocks/MockstMugen.sol\":\"MockstMugen\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":3xcaliSwap/=lib/3xcaliSwap/contracts/\",\":3xcaliswap/=lib/3xcaliswap/\",\":@core/=lib/3xcaliSwap/contracts/core/\",\":@openzeppelin/=lib/3xcaliSwap/node_modules/@openzeppelin/\",\":@solmate/=lib/3xcaliSwap/node_modules/solmate/src/\",\":LayerZero/=lib/contracts/lib/LayerZero/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=lib/contracts/contracts/\",\":create3-factory/=lib/create3-factory/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":fraxlend/=lib/fraxlend/\",\":joe-v2/=lib/joe-v2/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":pancake-smart-contracts/=lib/pancake-smart-contracts/\",\":pancake/=lib/pancake-smart-contracts/\",\":solmate/=lib/solmate/\",\":spookyswap-core/=lib/spookyswap-core/contracts/\",\":spookyswap/=lib/spookyswap-core/\",\":sushiswap/=lib/sushiswap/\",\":traderjoe/=lib/joe-v2/src/\",\":uniswap/v3-core/=lib/v3-core/\",\":uniswap/v3-periphery/=lib/v3-periphery/\",\":utils/=lib/contracts/test/utils/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\",\":velodrome/=lib/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x1acad3a3e79d3ccbac56cf866482563677e51545516a1f84ffb7cd220e43d93a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85c2b518ec0ba4f8a9f0e544507decf3dbb4fd74321be1fc024e41619e2777b\",\"dweb:/ipfs/QmdyKUbqzaxW9XCMEU31qpRmuHVurhb8fa9XiU1gKU6Ng9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0xa0ba3f05c1dfe6c3d6ca5f4fe8becca8ce3c56b508934f17a2b50560bde7bb31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d657f1a60d4ea69c8fb63c5aba6e58d4aac24993887c0a10e496c745bf0842ef\",\"dweb:/ipfs/QmQ9fb84C2aVL4A9Yg2gDqBouxrSy4ryAFkjssPeZWbBC1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71\",\"dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf\",\"dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP\"]},\"src/interfaces/IStake.sol\":{\"keccak256\":\"0x9ce0e363b19ded7d5f045720d9d3b1abc132b9d6c10896500d1f9c5ea9064290\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1589942fc2c6ef39c9fbe175af88d276b09234f551ce3e54e4c482725c4cb6\",\"dweb:/ipfs/QmekwoYkFtEnfjLksKpt7rKEsoo1VjCKAqJKMrEpCg6gAV\"]},\"src/mocks/MockstMugen.sol\":{\"keccak256\":\"0xbb13a0398c6e6b8271fa9bd03238c88284361d19e12cdfa5665e6da9ec6cc31d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ba98dd13e67d3793130a41906b20f3727a47c67b9629164585dda030af668f8\",\"dweb:/ipfs/QmVDz6Gdv4GtNaXUqF4Z5brEPw8EXJhbarQrVBkNGrRXiD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_stake",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Staked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "asset",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "compoundMGN"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxRedeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewRedeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stake",
          "outputs": [
            {
              "internalType": "contract IStake",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "asset()": {
            "details": "See {IERC4626-asset}. "
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "convertToAssets(uint256)": {
            "details": "See {IERC4626-convertToAssets}. "
          },
          "convertToShares(uint256)": {
            "details": "See {IERC4626-convertToShares}. "
          },
          "decimals()": {
            "details": "Decimals are read from the underlying asset in the constructor and cached. If this fails (e.g., the asset has not been created yet), the cached value is set to a default obtained by `super.decimals()` (which depends on inheritance but is most likely 18). Override this function in order to set a guaranteed hardcoded value. See {IERC20Metadata-decimals}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "deposit(uint256,address)": {
            "details": "See {IERC4626-deposit}. "
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "maxDeposit(address)": {
            "details": "See {IERC4626-maxDeposit}. "
          },
          "maxMint(address)": {
            "details": "See {IERC4626-maxMint}. "
          },
          "maxRedeem(address)": {
            "details": "See {IERC4626-maxRedeem}. "
          },
          "maxWithdraw(address)": {
            "details": "See {IERC4626-maxWithdraw}. "
          },
          "mint(uint256,address)": {
            "details": "See {IERC4626-mint}. "
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "previewDeposit(uint256)": {
            "details": "See {IERC4626-previewDeposit}. "
          },
          "previewMint(uint256)": {
            "details": "See {IERC4626-previewMint}. "
          },
          "previewRedeem(uint256)": {
            "details": "See {IERC4626-previewRedeem}. "
          },
          "previewWithdraw(uint256)": {
            "details": "See {IERC4626-previewWithdraw}. "
          },
          "redeem(uint256,address,address)": {
            "details": "See {IERC4626-redeem}. "
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalAssets()": {
            "details": "See {IERC4626-totalAssets}. "
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "withdraw(uint256,address,address)": {
            "details": "See {IERC4626-withdraw}. "
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":3xcaliSwap/=lib/3xcaliSwap/contracts/",
        ":3xcaliswap/=lib/3xcaliswap/",
        ":@core/=lib/3xcaliSwap/contracts/core/",
        ":@openzeppelin/=lib/3xcaliSwap/node_modules/@openzeppelin/",
        ":@solmate/=lib/3xcaliSwap/node_modules/solmate/src/",
        ":LayerZero/=lib/contracts/lib/LayerZero/contracts/",
        ":chainlink/=lib/chainlink/",
        ":contracts/=lib/contracts/contracts/",
        ":create3-factory/=lib/create3-factory/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fraxlend/=lib/fraxlend/",
        ":joe-v2/=lib/joe-v2/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":pancake-smart-contracts/=lib/pancake-smart-contracts/",
        ":pancake/=lib/pancake-smart-contracts/",
        ":solmate/=lib/solmate/",
        ":spookyswap-core/=lib/spookyswap-core/contracts/",
        ":spookyswap/=lib/spookyswap-core/",
        ":sushiswap/=lib/sushiswap/",
        ":traderjoe/=lib/joe-v2/src/",
        ":uniswap/v3-core/=lib/v3-core/",
        ":uniswap/v3-periphery/=lib/v3-periphery/",
        ":utils/=lib/contracts/test/utils/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/",
        ":velodrome/=lib/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/mocks/MockstMugen.sol": "MockstMugen"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x1acad3a3e79d3ccbac56cf866482563677e51545516a1f84ffb7cd220e43d93a",
        "urls": [
          "bzz-raw://b85c2b518ec0ba4f8a9f0e544507decf3dbb4fd74321be1fc024e41619e2777b",
          "dweb:/ipfs/QmdyKUbqzaxW9XCMEU31qpRmuHVurhb8fa9XiU1gKU6Ng9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol": {
        "keccak256": "0xa0ba3f05c1dfe6c3d6ca5f4fe8becca8ce3c56b508934f17a2b50560bde7bb31",
        "urls": [
          "bzz-raw://d657f1a60d4ea69c8fb63c5aba6e58d4aac24993887c0a10e496c745bf0842ef",
          "dweb:/ipfs/QmQ9fb84C2aVL4A9Yg2gDqBouxrSy4ryAFkjssPeZWbBC1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749",
        "urls": [
          "bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71",
          "dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe",
        "urls": [
          "bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf",
          "dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP"
        ],
        "license": "MIT"
      },
      "src/interfaces/IStake.sol": {
        "keccak256": "0x9ce0e363b19ded7d5f045720d9d3b1abc132b9d6c10896500d1f9c5ea9064290",
        "urls": [
          "bzz-raw://da1589942fc2c6ef39c9fbe175af88d276b09234f551ce3e54e4c482725c4cb6",
          "dweb:/ipfs/QmekwoYkFtEnfjLksKpt7rKEsoo1VjCKAqJKMrEpCg6gAV"
        ],
        "license": "MIT"
      },
      "src/mocks/MockstMugen.sol": {
        "keccak256": "0xbb13a0398c6e6b8271fa9bd03238c88284361d19e12cdfa5665e6da9ec6cc31d",
        "urls": [
          "bzz-raw://0ba98dd13e67d3793130a41906b20f3727a47c67b9629164585dda030af668f8",
          "dweb:/ipfs/QmVDz6Gdv4GtNaXUqF4Z5brEPw8EXJhbarQrVBkNGrRXiD"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/mocks/MockstMugen.sol",
    "id": 45421,
    "exportedSymbols": {
      "Address": [
        29915
      ],
      "Context": [
        29937
      ],
      "ERC20": [
        28483
      ],
      "ERC4626": [
        29243
      ],
      "IERC20": [
        28561
      ],
      "IERC20Metadata": [
        29268
      ],
      "IERC20Permit": [
        29304
      ],
      "IERC4626": [
        27734
      ],
      "IStake": [
        44413
      ],
      "Math": [
        30814
      ],
      "MockstMugen": [
        45420
      ],
      "SafeERC20": [
        29585
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2092:103",
    "nodes": [
      {
        "id": 45188,
        "nodeType": "PragmaDirective",
        "src": "32:23:103",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 45189,
        "nodeType": "ImportDirective",
        "src": "57:67:103",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol",
        "file": "openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45421,
        "sourceUnit": 29244,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45190,
        "nodeType": "ImportDirective",
        "src": "125:55:103",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45421,
        "sourceUnit": 28562,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45191,
        "nodeType": "ImportDirective",
        "src": "181:34:103",
        "nodes": [],
        "absolutePath": "src/interfaces/IStake.sol",
        "file": "../interfaces/IStake.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45421,
        "sourceUnit": 44414,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45192,
        "nodeType": "ImportDirective",
        "src": "216:64:103",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45421,
        "sourceUnit": 29586,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45420,
        "nodeType": "ContractDefinition",
        "src": "312:1811:103",
        "nodes": [
          {
            "id": 45198,
            "nodeType": "UsingForDirective",
            "src": "350:27:103",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 45195,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29585,
              "src": "356:9:103"
            },
            "typeName": {
              "id": 45197,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45196,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28561,
                "src": "370:6:103"
              },
              "referencedDeclaration": 28561,
              "src": "370:6:103",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$28561",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 45202,
            "nodeType": "EventDefinition",
            "src": "383:35:103",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "eebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca27",
            "name": "Staked",
            "nameLocation": "389:6:103",
            "parameters": {
              "id": 45201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45200,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakedAmount",
                  "nameLocation": "404:12:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45202,
                  "src": "396:20:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "395:22:103"
            }
          },
          {
            "id": 45205,
            "nodeType": "VariableDeclaration",
            "src": "424:19:103",
            "nodes": [],
            "constant": false,
            "functionSelector": "3a4b66f1",
            "mutability": "mutable",
            "name": "stake",
            "nameLocation": "438:5:103",
            "scope": 45420,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStake_$44413",
              "typeString": "contract IStake"
            },
            "typeName": {
              "id": 45204,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45203,
                "name": "IStake",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44413,
                "src": "424:6:103"
              },
              "referencedDeclaration": 44413,
              "src": "424:6:103",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStake_$44413",
                "typeString": "contract IStake"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45231,
            "nodeType": "FunctionDefinition",
            "src": "450:178:103",
            "nodes": [],
            "body": {
              "id": 45230,
              "nodeType": "Block",
              "src": "589:39:103",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45224,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45205,
                      "src": "599:5:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStake_$44413",
                        "typeString": "contract IStake"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 45226,
                          "name": "_stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45214,
                          "src": "614:6:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 45225,
                        "name": "IStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44413,
                        "src": "607:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStake_$44413_$",
                          "typeString": "type(contract IStake)"
                        }
                      },
                      "id": 45227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "607:14:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStake_$44413",
                        "typeString": "contract IStake"
                      }
                    },
                    "src": "599:22:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStake_$44413",
                      "typeString": "contract IStake"
                    }
                  },
                  "id": 45229,
                  "nodeType": "ExpressionStatement",
                  "src": "599:22:103"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 45217,
                    "name": "asset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45208,
                    "src": "550:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$28561",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 45218,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 45216,
                  "name": "ERC4626",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29243,
                  "src": "542:7:103"
                },
                "nodeType": "ModifierInvocation",
                "src": "542:14:103"
              },
              {
                "arguments": [
                  {
                    "id": 45220,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45210,
                    "src": "571:4:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 45221,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45212,
                    "src": "577:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 45222,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 45219,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28483,
                  "src": "565:5:103"
                },
                "nodeType": "ModifierInvocation",
                "src": "565:19:103"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 45215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45208,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "469:5:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45231,
                  "src": "462:12:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$28561",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 45207,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45206,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28561,
                      "src": "462:6:103"
                    },
                    "referencedDeclaration": 28561,
                    "src": "462:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$28561",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45210,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "490:4:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45231,
                  "src": "476:18:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45209,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45212,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "510:6:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45231,
                  "src": "496:20:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45211,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45214,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nameLocation": "526:6:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45231,
                  "src": "518:14:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "461:72:103"
            },
            "returnParameters": {
              "id": 45223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "589:0:103"
            },
            "scope": 45420,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45254,
            "nodeType": "FunctionDefinition",
            "src": "634:158:103",
            "nodes": [],
            "body": {
              "id": 45253,
              "nodeType": "Block",
              "src": "704:88:103",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45241,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "746:4:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockstMugen_$45420",
                                "typeString": "contract MockstMugen"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockstMugen_$45420",
                                "typeString": "contract MockstMugen"
                              }
                            ],
                            "id": 45240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "738:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45239,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "738:7:103",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "738:13:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 45237,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28578,
                          "src": "721:6:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$28561",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 45238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28518,
                        "src": "721:16:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 45243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "721:31:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45248,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "779:4:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockstMugen_$45420",
                                "typeString": "contract MockstMugen"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockstMugen_$45420",
                                "typeString": "contract MockstMugen"
                              }
                            ],
                            "id": 45247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "771:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45246,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "771:7:103",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "771:13:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 45244,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45205,
                          "src": "755:5:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStake_$44413",
                            "typeString": "contract IStake"
                          }
                        },
                        "id": 45245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44395,
                        "src": "755:15:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 45250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "755:30:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "721:64:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 45236,
                  "id": 45252,
                  "nodeType": "Return",
                  "src": "714:71:103"
                }
              ]
            },
            "baseFunctions": [
              28717
            ],
            "functionSelector": "01e1d114",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalAssets",
            "nameLocation": "643:11:103",
            "overrides": {
              "id": 45233,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "677:8:103"
            },
            "parameters": {
              "id": 45232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "654:2:103"
            },
            "returnParameters": {
              "id": 45236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45254,
                  "src": "695:7:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "694:9:103"
            },
            "scope": 45420,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 45280,
            "nodeType": "FunctionDefinition",
            "src": "798:174:103",
            "nodes": [],
            "body": {
              "id": 45279,
              "nodeType": "Block",
              "src": "845:127:103",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45264,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45205,
                            "src": "892:5:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStake_$44413",
                              "typeString": "contract IStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IStake_$44413",
                              "typeString": "contract IStake"
                            }
                          ],
                          "id": 45263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "884:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45262,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "884:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "884:14:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45266,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45256,
                        "src": "900:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45259,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28578,
                        "src": "855:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 45261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29442,
                      "src": "855:28:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$28561_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$28561_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 45267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "855:52:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45268,
                  "nodeType": "ExpressionStatement",
                  "src": "855:52:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45272,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45256,
                        "src": "929:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45269,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45205,
                        "src": "917:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStake_$44413",
                          "typeString": "contract IStake"
                        }
                      },
                      "id": 45271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44388,
                      "src": "917:11:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "917:19:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45274,
                  "nodeType": "ExpressionStatement",
                  "src": "917:19:103"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45276,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45256,
                        "src": "958:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45275,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45202,
                      "src": "951:6:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 45277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "951:14:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45278,
                  "nodeType": "EmitStatement",
                  "src": "946:19:103"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "afterDeposit",
            "nameLocation": "807:12:103",
            "parameters": {
              "id": 45257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45256,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "828:6:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45280,
                  "src": "820:14:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:16:103"
            },
            "returnParameters": {
              "id": 45258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "845:0:103"
            },
            "scope": 45420,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45292,
            "nodeType": "FunctionDefinition",
            "src": "978:104:103",
            "nodes": [],
            "body": {
              "id": 45291,
              "nodeType": "Block",
              "src": "1035:47:103",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45288,
                        "name": "_unstakeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45282,
                        "src": "1060:14:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45285,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45205,
                        "src": "1045:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStake_$44413",
                          "typeString": "contract IStake"
                        }
                      },
                      "id": 45287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44400,
                      "src": "1045:14:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1045:30:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45290,
                  "nodeType": "ExpressionStatement",
                  "src": "1045:30:103"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beforeWithdraw",
            "nameLocation": "987:14:103",
            "parameters": {
              "id": 45283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45282,
                  "mutability": "mutable",
                  "name": "_unstakeAmount",
                  "nameLocation": "1010:14:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45292,
                  "src": "1002:22:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1001:24:103"
            },
            "returnParameters": {
              "id": 45284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1035:0:103"
            },
            "scope": 45420,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45327,
            "nodeType": "FunctionDefinition",
            "src": "1088:216:103",
            "nodes": [],
            "body": {
              "id": 45326,
              "nodeType": "Block",
              "src": "1118:186:103",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45295,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45205,
                        "src": "1128:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStake_$44413",
                          "typeString": "contract IStake"
                        }
                      },
                      "id": 45297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44412,
                      "src": "1128:15:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 45298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1128:17:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45299,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:17:103"
                },
                {
                  "assignments": [
                    45301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45301,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1163:7:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 45326,
                      "src": "1155:15:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45300,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1155:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45309,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45306,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1198:4:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockstMugen_$45420",
                              "typeString": "contract MockstMugen"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockstMugen_$45420",
                              "typeString": "contract MockstMugen"
                            }
                          ],
                          "id": 45305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1190:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45304,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1190:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1190:13:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45302,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28578,
                        "src": "1173:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 45303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28518,
                      "src": "1173:16:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 45308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1173:31:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1155:49:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45315,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45205,
                            "src": "1251:5:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStake_$44413",
                              "typeString": "contract IStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IStake_$44413",
                              "typeString": "contract IStake"
                            }
                          ],
                          "id": 45314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1243:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45313,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1243:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1243:14:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45317,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45301,
                        "src": "1259:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45310,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28578,
                        "src": "1214:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 45312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29442,
                      "src": "1214:28:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$28561_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$28561_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 45318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1214:53:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45319,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:53:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45323,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45301,
                        "src": "1289:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45320,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45205,
                        "src": "1277:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStake_$44413",
                          "typeString": "contract IStake"
                        }
                      },
                      "id": 45322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44388,
                      "src": "1277:11:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:20:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45325,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:20:103"
                }
              ]
            },
            "functionSelector": "ed72ade6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "compoundMGN",
            "nameLocation": "1097:11:103",
            "parameters": {
              "id": 45293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1108:2:103"
            },
            "returnParameters": {
              "id": 45294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1118:0:103"
            },
            "scope": 45420,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45368,
            "nodeType": "FunctionDefinition",
            "src": "1310:366:103",
            "nodes": [],
            "body": {
              "id": 45367,
              "nodeType": "Block",
              "src": "1420:256:103",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45342,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28578,
                        "src": "1512:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 45343,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45329,
                        "src": "1520:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45346,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1536:4:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockstMugen_$45420",
                              "typeString": "contract MockstMugen"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockstMugen_$45420",
                              "typeString": "contract MockstMugen"
                            }
                          ],
                          "id": 45345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1528:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45344,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1528:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1528:13:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45348,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45333,
                        "src": "1543:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45339,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29585,
                        "src": "1485:9:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$29585_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 45341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29362,
                      "src": "1485:26:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$28561_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 45349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1485:65:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45350,
                  "nodeType": "ExpressionStatement",
                  "src": "1485:65:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45352,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45331,
                        "src": "1566:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45353,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45335,
                        "src": "1576:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45351,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28300,
                      "src": "1560:5:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 45354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1560:23:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45355,
                  "nodeType": "ExpressionStatement",
                  "src": "1560:23:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45357,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45333,
                        "src": "1606:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45356,
                      "name": "afterDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45280,
                      "src": "1593:12:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 45358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:20:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45359,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:20:103"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45361,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45329,
                        "src": "1636:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45362,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45331,
                        "src": "1644:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45363,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45333,
                        "src": "1654:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45364,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45335,
                        "src": "1662:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45360,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27585,
                      "src": "1628:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 45365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1628:41:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45366,
                  "nodeType": "EmitStatement",
                  "src": "1623:46:103"
                }
              ]
            },
            "baseFunctions": [
              29179
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "1319:8:103",
            "overrides": {
              "id": 45337,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1411:8:103"
            },
            "parameters": {
              "id": 45336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45329,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1336:6:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45368,
                  "src": "1328:14:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45331,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1352:8:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45368,
                  "src": "1344:16:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1344:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45333,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "1370:6:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45368,
                  "src": "1362:14:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1362:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45335,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1386:6:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45368,
                  "src": "1378:14:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:66:103"
            },
            "returnParameters": {
              "id": 45338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:103"
            },
            "scope": 45420,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 45419,
            "nodeType": "FunctionDefinition",
            "src": "1682:439:103",
            "nodes": [],
            "body": {
              "id": 45418,
              "nodeType": "Block",
              "src": "1836:285:103",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 45384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45382,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45370,
                      "src": "1850:6:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 45383,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45374,
                      "src": "1860:5:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1850:15:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45392,
                  "nodeType": "IfStatement",
                  "src": "1846:84:103",
                  "trueBody": {
                    "id": 45391,
                    "nodeType": "Block",
                    "src": "1867:63:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45386,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45374,
                              "src": "1897:5:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 45387,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45370,
                              "src": "1904:6:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 45388,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45378,
                              "src": "1912:6:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 45385,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28460,
                            "src": "1881:15:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 45389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1881:38:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45390,
                        "nodeType": "ExpressionStatement",
                        "src": "1881:38:103"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45394,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45376,
                        "src": "1954:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45393,
                      "name": "beforeWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45292,
                      "src": "1939:14:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 45395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1939:22:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45396,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:22:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45398,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45374,
                        "src": "1977:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45399,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45378,
                        "src": "1984:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45397,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28372,
                      "src": "1971:5:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 45400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1971:20:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45401,
                  "nodeType": "ExpressionStatement",
                  "src": "1971:20:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45405,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28578,
                        "src": "2024:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 45406,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45372,
                        "src": "2032:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45407,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45376,
                        "src": "2042:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$28561",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45402,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29585,
                        "src": "2001:9:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$29585_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 45404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29336,
                      "src": "2001:22:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$28561_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 45408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2001:48:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45409,
                  "nodeType": "ExpressionStatement",
                  "src": "2001:48:103"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45411,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45370,
                        "src": "2074:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45412,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45372,
                        "src": "2082:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45413,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45374,
                        "src": "2092:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45414,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45376,
                        "src": "2099:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45415,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45378,
                        "src": "2107:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45410,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27597,
                      "src": "2065:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 45416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2065:49:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45417,
                  "nodeType": "EmitStatement",
                  "src": "2060:54:103"
                }
              ]
            },
            "baseFunctions": [
              29226
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "1691:9:103",
            "overrides": {
              "id": 45380,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1823:8:103"
            },
            "parameters": {
              "id": 45379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45370,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1709:6:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45419,
                  "src": "1701:14:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1701:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45372,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1725:8:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45419,
                  "src": "1717:16:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45374,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1743:5:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45419,
                  "src": "1735:13:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45376,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "1758:6:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45419,
                  "src": "1750:14:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1750:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45378,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1774:6:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 45419,
                  "src": "1766:14:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1700:81:103"
            },
            "returnParameters": {
              "id": 45381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1836:0:103"
            },
            "scope": 45420,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45193,
              "name": "ERC4626",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29243,
              "src": "336:7:103"
            },
            "id": 45194,
            "nodeType": "InheritanceSpecifier",
            "src": "336:7:103"
          }
        ],
        "canonicalName": "MockstMugen",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45420,
          29243,
          27734,
          28483,
          29268,
          28561,
          29937
        ],
        "name": "MockstMugen",
        "nameLocation": "321:11:103",
        "scope": 45421,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 103
}