{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_stake",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "asset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "compoundMGN",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "convertToAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "convertToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "maxRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "maxWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "previewDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "previewMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "previewRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "previewWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [
        {
          "internalType": "contract IStake",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b5060405162001f0438038062001f048339810160408190526200003491620002a9565b8383836003620000458382620003cc565b506004620000548282620003cc565b5050506000806200006b83620000ca60201b60201c565b915091508162000090576200008a620001b160201b62000ab11760201c565b62000092565b805b60ff1660a05250506001600160a01b03908116608052600580546001600160a01b0319169290911691909117905550620004d0915050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000918291829182916001600160a01b03871691620001139162000498565b6000604051808303816000865af19150503d806000811462000152576040519150601f19603f3d011682016040523d82523d6000602084013e62000157565b606091505b50915091508180156200016c57506020815110155b15620001a4576000818060200190518101906200018a9190620004b6565b905060ff8111620001a2576001969095509350505050565b505b5060009485945092505050565b601290565b6001600160a01b0381168114620001cc57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000202578181015183820152602001620001e8565b8381111562000212576000848401525b50505050565b600082601f8301126200022a57600080fd5b81516001600160401b0380821115620002475762000247620001cf565b604051601f8301601f19908116603f01168101908282118183101715620002725762000272620001cf565b816040528381528660208588010111156200028c57600080fd5b6200029f846020830160208901620001e5565b9695505050505050565b60008060008060808587031215620002c057600080fd5b8451620002cd81620001b6565b60208601519094506001600160401b0380821115620002eb57600080fd5b620002f98883890162000218565b945060408701519150808211156200031057600080fd5b506200031f8782880162000218565b92505060608501516200033281620001b6565b939692955090935050565b600181811c908216806200035257607f821691505b6020821081036200037357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003c757600081815260208120601f850160051c81016020861015620003a25750805b601f850160051c820191505b81811015620003c357828155600101620003ae565b5050505b505050565b81516001600160401b03811115620003e857620003e8620001cf565b6200040081620003f984546200033d565b8462000379565b602080601f8311600181146200043857600084156200041f5750858301515b600019600386901b1c1916600185901b178555620003c3565b600085815260208120601f198616915b82811015620004695788860151825594840194600190910190840162000448565b5085821015620004885787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251620004ac818460208701620001e5565b9190910192915050565b600060208284031215620004c957600080fd5b5051919050565b60805160a0516119e462000520600039600061026f01526000818161029b015281816104af0152818161099f01528181610a2601528181610e7c01528181610f4e015261122a01526119e46000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063ba087652116100a2578063d905777e11610071578063d905777e146103fd578063dd62ed3e14610410578063ed72ade614610423578063ef8b30f7146103d757600080fd5b8063ba087652146103af578063c63d75b6146103c2578063c6e6f592146103d7578063ce96cb77146103ea57600080fd5b8063a457c2d7116100de578063a457c2d714610363578063a9059cbb14610376578063b3d7f6b914610389578063b460af941461039c57600080fd5b806370a082311461031f57806394bf804d1461034857806395d89b411461035b57600080fd5b8063313ce567116101715780633a4b66f11161014b5780633a4b66f1146102e6578063402d267d146102f95780634cdad506146102045780636e553f651461030c57600080fd5b8063313ce5671461026857806338d52e0f1461029957806339509351146102d357600080fd5b8063095ea7b3116101ad578063095ea7b3146102175780630a28a4771461023a57806318160ddd1461024d57806323b872dd1461025557600080fd5b806301e1d114146101d457806306fdde03146101ef57806307a2d13a14610204575b600080fd5b6101dc61042d565b6040519081526020015b60405180910390f35b6101f7610531565b6040516101e69190611750565b6101dc610212366004611783565b6105c3565b61022a6102253660046117b8565b6105d6565b60405190151581526020016101e6565b6101dc610248366004611783565b6105ee565b6002546101dc565b61022a6102633660046117e2565b6105fb565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101e6565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016101e6565b61022a6102e13660046117b8565b610621565b6005546102bb906001600160a01b031681565b6101dc61030736600461181e565b610643565b6101dc61031a366004611839565b610661565b6101dc61032d36600461181e565b6001600160a01b031660009081526020819052604090205490565b6101dc610356366004611839565b6106d9565b6101f76106f3565b61022a6103713660046117b8565b610702565b61022a6103843660046117b8565b610788565b6101dc610397366004611783565b610796565b6101dc6103aa366004611865565b6107a3565b6101dc6103bd366004611865565b61081f565b6101dc6103d036600461181e565b5060001990565b6101dc6103e5366004611783565b610893565b6101dc6103f836600461181e565b6108a0565b6101dc61040b36600461181e565b6108c4565b6101dc61041e3660046118a1565b6108e2565b61042b61090d565b005b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a91906118cb565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052291906118cb565b61052c91906118e4565b905090565b6060600380546105409061190a565b80601f016020809104026020016040519081016040528092919081815260200182805461056c9061190a565b80156105b95780601f1061058e576101008083540402835291602001916105b9565b820191906000526020600020905b81548152906001019060200180831161059c57829003601f168201915b5050505050905090565b60006105d0826000610ab6565b92915050565b6000336105e4818585610ae9565b5060019392505050565b60006105d0826001610c0d565b600033610609858285610c3f565b610614858585610cb9565b60019150505b9392505050565b6000336105e481858561063483836108e2565b61063e91906118e4565b610ae9565b600061064d610e5d565b6106585760006105d0565b60001992915050565b600061066c82610643565b8311156106c05760405162461bcd60e51b815260206004820152601e60248201527f455243343632363a206465706f736974206d6f7265207468616e206d6178000060448201526064015b60405180910390fd5b60006106cb84610893565b905061061a33848684610e77565b6000806106e584610796565b905061061a33848387610e77565b6060600480546105409061190a565b6000338161071082866108e2565b9050838110156107705760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106b7565b61077d8286868403610ae9565b506001949350505050565b6000336105e4818585610cb9565b60006105d0826001610ab6565b60006107ae826108a0565b8411156107fd5760405162461bcd60e51b815260206004820152601f60248201527f455243343632363a207769746864726177206d6f7265207468616e206d61780060448201526064016106b7565b6000610808856105ee565b90506108173385858885610f12565b949350505050565b600061082a826108c4565b8411156108795760405162461bcd60e51b815260206004820152601d60248201527f455243343632363a2072656465656d206d6f7265207468616e206d617800000060448201526064016106b7565b6000610884856105c3565b90506108173385858489610f12565b60006105d0826000610c0d565b6001600160a01b0381166000908152602081905260408120546105d0906000610ab6565b6001600160a01b0381166000908152602081905260408120546105d0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600560009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610962573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098691906118cb565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906118cb565b600554909150610a4f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610fdb565b60055460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a906024015b600060405180830381600087803b158015610a9657600080fd5b505af1158015610aaa573d6000803e3d6000fd5b5050505050565b601290565b600080610ac260025490565b90508015610ae357610ade610ad561042d565b859083866110c0565b610817565b83610817565b6001600160a01b038316610b4b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106b7565b6001600160a01b038216610bac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106b7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600080610c1960025490565b9050831580610c26575080155b610ae357610ade81610c3661042d565b869190866110c0565b6000610c4b84846108e2565b90506000198114610cb35781811015610ca65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106b7565b610cb38484848403610ae9565b50505050565b6001600160a01b038316610d1d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106b7565b6001600160a01b038216610d7f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106b7565b6001600160a01b03831660009081526020819052604090205481811015610df75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106b7565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610cb3565b600080610e6861042d565b118061052c5750506002541590565b610ea37f0000000000000000000000000000000000000000000000000000000000000000853085611122565b610ead838261115a565b610eb682611219565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051610f04929190918252602082015260400190565b60405180910390a350505050565b826001600160a01b0316856001600160a01b031614610f3657610f36838683610c3f565b610f3f826112ed565b610f49838261131e565b610f747f00000000000000000000000000000000000000000000000000000000000000008584611450565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8585604051610fcc929190918252602082015260400190565b60405180910390a45050505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561102c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105091906118cb565b61105a91906118e4565b6040516001600160a01b038516602482015260448101829052909150610cb390859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611480565b6000806110ce868686611552565b905060018360028111156110e4576110e4611944565b1480156111015750600084806110fc576110fc61195a565b868809115b15611114576111116001826118e4565b90505b95945050505050565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610cb39085906323b872dd60e01b90608401611089565b6001600160a01b0382166111b05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106b7565b80600260008282546111c291906118e4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600554611253906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610fdb565b60055460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561129957600080fd5b505af11580156112ad573d6000803e3d6000fd5b505050507feebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca27816040516112e291815260200190565b60405180910390a150565b600554604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401610a7c565b6001600160a01b03821661137e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106b7565b6001600160a01b038216600090815260208190526040902054818110156113f25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106b7565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6040516001600160a01b03831660248201526044810182905261111d90849063a9059cbb60e01b90606401611089565b60006114d5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116019092919063ffffffff16565b80519091501561111d57808060200190518101906114f39190611970565b61111d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106b7565b600080806000198587098587029250828110838203039150508060000361158c578382816115825761158261195a565b049250505061061a565b80841161159857600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6060610817848460008585600080866001600160a01b031685876040516116289190611992565b60006040518083038185875af1925050503d8060008114611665576040519150601f19603f3d011682016040523d82523d6000602084013e61166a565b606091505b509150915061167b87838387611686565b979650505050505050565b606083156116f55782516000036116ee576001600160a01b0385163b6116ee5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106b7565b5081610817565b610817838381511561170a5781518083602001fd5b8060405162461bcd60e51b81526004016106b79190611750565b60005b8381101561173f578181015183820152602001611727565b83811115610cb35750506000910152565b602081526000825180602084015261176f816040850160208701611724565b601f01601f19169190910160400192915050565b60006020828403121561179557600080fd5b5035919050565b80356001600160a01b03811681146117b357600080fd5b919050565b600080604083850312156117cb57600080fd5b6117d48361179c565b946020939093013593505050565b6000806000606084860312156117f757600080fd5b6118008461179c565b925061180e6020850161179c565b9150604084013590509250925092565b60006020828403121561183057600080fd5b61061a8261179c565b6000806040838503121561184c57600080fd5b8235915061185c6020840161179c565b90509250929050565b60008060006060848603121561187a57600080fd5b8335925061188a6020850161179c565b91506118986040850161179c565b90509250925092565b600080604083850312156118b457600080fd5b6118bd8361179c565b915061185c6020840161179c565b6000602082840312156118dd57600080fd5b5051919050565b6000821982111561190557634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061191e57607f821691505b60208210810361193e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60006020828403121561198257600080fd5b8151801515811461061a57600080fd5b600082516119a4818460208701611724565b919091019291505056fea264697066735822122052ed29a7ebe3d4d145885a22ec249f652869c1d0d446b85e232d1c26c1432a2b64736f6c634300080f0033",
    "sourceMap": "312:1811:23:-:0;;;450:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;550:5;571:4;577:6;2042:5:1;:13;571:4:23;2042:5:1;:13;:::i;:::-;-1:-1:-1;2065:7:1;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;1513:12:3;1527:19;1550:28;1571:6;1550:20;;;:28;;:::i;:::-;1512:66;;;;1600:7;:42;;1626:16;:14;;;;;:16;;:::i;:::-;1600:42;;;1610:13;1600:42;1588:54;;;;-1:-1:-1;;;;;;;1652:15:3;;;;;599:5:23::2;:22:::0;;-1:-1:-1;;;;;;599:22:23::2;::::0;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;312:1811:23;;-1:-1:-1;;312:1811:23;1817:535:3;1983:56;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1983:56:3;-1:-1:-1;;;1983:56:3;;;1949:100;;1879:4;;;;;;;;-1:-1:-1;;;;;1949:20:3;;;:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1902:147;;;;2063:7;:39;;;;;2100:2;2074:15;:22;:28;;2063:39;2059:260;;;2118:24;2156:15;2145:38;;;;;;;;;;;;:::i;:::-;2118:65;-1:-1:-1;2221:15:3;2201:35;;2197:112;;2264:4;;2276:16;;-1:-1:-1;1817:535:3;-1:-1:-1;;;;1817:535:3:o;2197:112::-;2104:215;2059:260;-1:-1:-1;2336:5:3;;;;-1:-1:-1;1817:535:3;-1:-1:-1;;;1817:535:3:o;3091:91:1:-;3173:2;;3091:91::o;14:139:24:-;-1:-1:-1;;;;;97:31:24;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:127::-;219:10;214:3;210:20;207:1;200:31;250:4;247:1;240:15;274:4;271:1;264:15;290:258;362:1;372:113;386:6;383:1;380:13;372:113;;;462:11;;;456:18;443:11;;;436:39;408:2;401:10;372:113;;;503:6;500:1;497:13;494:48;;;538:1;529:6;524:3;520:16;513:27;494:48;;290:258;;;:::o;553:686::-;607:5;660:3;653:4;645:6;641:17;637:27;627:55;;678:1;675;668:12;627:55;701:13;;-1:-1:-1;;;;;763:10:24;;;760:36;;;776:18;;:::i;:::-;851:2;845:9;819:2;905:13;;-1:-1:-1;;901:22:24;;;925:2;897:31;893:40;881:53;;;949:18;;;969:22;;;946:46;943:72;;;995:18;;:::i;:::-;1035:10;1031:2;1024:22;1070:2;1062:6;1055:18;1116:3;1109:4;1104:2;1096:6;1092:15;1088:26;1085:35;1082:55;;;1133:1;1130;1123:12;1082:55;1146:63;1206:2;1199:4;1191:6;1187:17;1180:4;1172:6;1168:17;1146:63;:::i;:::-;1227:6;553:686;-1:-1:-1;;;;;;553:686:24:o;1244:855::-;1375:6;1383;1391;1399;1452:3;1440:9;1431:7;1427:23;1423:33;1420:53;;;1469:1;1466;1459:12;1420:53;1501:9;1495:16;1520:39;1553:5;1520:39;:::i;:::-;1627:2;1612:18;;1606:25;1578:5;;-1:-1:-1;;;;;;1680:14:24;;;1677:34;;;1707:1;1704;1697:12;1677:34;1730:61;1783:7;1774:6;1763:9;1759:22;1730:61;:::i;:::-;1720:71;;1837:2;1826:9;1822:18;1816:25;1800:41;;1866:2;1856:8;1853:16;1850:36;;;1882:1;1879;1872:12;1850:36;;1905:63;1960:7;1949:8;1938:9;1934:24;1905:63;:::i;:::-;1895:73;;;2013:2;2002:9;1998:18;1992:25;2026:41;2059:7;2026:41;:::i;:::-;1244:855;;;;-1:-1:-1;1244:855:24;;-1:-1:-1;;1244:855:24:o;2104:380::-;2183:1;2179:12;;;;2226;;;2247:61;;2301:4;2293:6;2289:17;2279:27;;2247:61;2354:2;2346:6;2343:14;2323:18;2320:38;2317:161;;2400:10;2395:3;2391:20;2388:1;2381:31;2435:4;2432:1;2425:15;2463:4;2460:1;2453:15;2317:161;;2104:380;;;:::o;2615:545::-;2717:2;2712:3;2709:11;2706:448;;;2753:1;2778:5;2774:2;2767:17;2823:4;2819:2;2809:19;2893:2;2881:10;2877:19;2874:1;2870:27;2864:4;2860:38;2929:4;2917:10;2914:20;2911:47;;;-1:-1:-1;2952:4:24;2911:47;3007:2;3002:3;2998:12;2995:1;2991:20;2985:4;2981:31;2971:41;;3062:82;3080:2;3073:5;3070:13;3062:82;;;3125:17;;;3106:1;3095:13;3062:82;;;3066:3;;;2706:448;2615:545;;;:::o;3336:1352::-;3456:10;;-1:-1:-1;;;;;3478:30:24;;3475:56;;;3511:18;;:::i;:::-;3540:97;3630:6;3590:38;3622:4;3616:11;3590:38;:::i;:::-;3584:4;3540:97;:::i;:::-;3692:4;;3756:2;3745:14;;3773:1;3768:663;;;;4475:1;4492:6;4489:89;;;-1:-1:-1;4544:19:24;;;4538:26;4489:89;-1:-1:-1;;3293:1:24;3289:11;;;3285:24;3281:29;3271:40;3317:1;3313:11;;;3268:57;4591:81;;3738:944;;3768:663;2562:1;2555:14;;;2599:4;2586:18;;-1:-1:-1;;3804:20:24;;;3922:236;3936:7;3933:1;3930:14;3922:236;;;4025:19;;;4019:26;4004:42;;4117:27;;;;4085:1;4073:14;;;;3952:19;;3922:236;;;3926:3;4186:6;4177:7;4174:19;4171:201;;;4247:19;;;4241:26;-1:-1:-1;;4330:1:24;4326:14;;;4342:3;4322:24;4318:37;4314:42;4299:58;4284:74;;4171:201;-1:-1:-1;;;;;4418:1:24;4402:14;;;4398:22;4385:36;;-1:-1:-1;3336:1352:24:o;4693:274::-;4822:3;4860:6;4854:13;4876:53;4922:6;4917:3;4910:4;4902:6;4898:17;4876:53;:::i;:::-;4945:16;;;;;4693:274;-1:-1:-1;;4693:274:24:o;4972:184::-;5042:6;5095:2;5083:9;5074:7;5070:23;5066:32;5063:52;;;5111:1;5108;5101:12;5063:52;-1:-1:-1;5134:16:24;;4972:184;-1:-1:-1;4972:184:24:o;:::-;312:1811:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063ba087652116100a2578063d905777e11610071578063d905777e146103fd578063dd62ed3e14610410578063ed72ade614610423578063ef8b30f7146103d757600080fd5b8063ba087652146103af578063c63d75b6146103c2578063c6e6f592146103d7578063ce96cb77146103ea57600080fd5b8063a457c2d7116100de578063a457c2d714610363578063a9059cbb14610376578063b3d7f6b914610389578063b460af941461039c57600080fd5b806370a082311461031f57806394bf804d1461034857806395d89b411461035b57600080fd5b8063313ce567116101715780633a4b66f11161014b5780633a4b66f1146102e6578063402d267d146102f95780634cdad506146102045780636e553f651461030c57600080fd5b8063313ce5671461026857806338d52e0f1461029957806339509351146102d357600080fd5b8063095ea7b3116101ad578063095ea7b3146102175780630a28a4771461023a57806318160ddd1461024d57806323b872dd1461025557600080fd5b806301e1d114146101d457806306fdde03146101ef57806307a2d13a14610204575b600080fd5b6101dc61042d565b6040519081526020015b60405180910390f35b6101f7610531565b6040516101e69190611750565b6101dc610212366004611783565b6105c3565b61022a6102253660046117b8565b6105d6565b60405190151581526020016101e6565b6101dc610248366004611783565b6105ee565b6002546101dc565b61022a6102633660046117e2565b6105fb565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101e6565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016101e6565b61022a6102e13660046117b8565b610621565b6005546102bb906001600160a01b031681565b6101dc61030736600461181e565b610643565b6101dc61031a366004611839565b610661565b6101dc61032d36600461181e565b6001600160a01b031660009081526020819052604090205490565b6101dc610356366004611839565b6106d9565b6101f76106f3565b61022a6103713660046117b8565b610702565b61022a6103843660046117b8565b610788565b6101dc610397366004611783565b610796565b6101dc6103aa366004611865565b6107a3565b6101dc6103bd366004611865565b61081f565b6101dc6103d036600461181e565b5060001990565b6101dc6103e5366004611783565b610893565b6101dc6103f836600461181e565b6108a0565b6101dc61040b36600461181e565b6108c4565b6101dc61041e3660046118a1565b6108e2565b61042b61090d565b005b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a91906118cb565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052291906118cb565b61052c91906118e4565b905090565b6060600380546105409061190a565b80601f016020809104026020016040519081016040528092919081815260200182805461056c9061190a565b80156105b95780601f1061058e576101008083540402835291602001916105b9565b820191906000526020600020905b81548152906001019060200180831161059c57829003601f168201915b5050505050905090565b60006105d0826000610ab6565b92915050565b6000336105e4818585610ae9565b5060019392505050565b60006105d0826001610c0d565b600033610609858285610c3f565b610614858585610cb9565b60019150505b9392505050565b6000336105e481858561063483836108e2565b61063e91906118e4565b610ae9565b600061064d610e5d565b6106585760006105d0565b60001992915050565b600061066c82610643565b8311156106c05760405162461bcd60e51b815260206004820152601e60248201527f455243343632363a206465706f736974206d6f7265207468616e206d6178000060448201526064015b60405180910390fd5b60006106cb84610893565b905061061a33848684610e77565b6000806106e584610796565b905061061a33848387610e77565b6060600480546105409061190a565b6000338161071082866108e2565b9050838110156107705760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106b7565b61077d8286868403610ae9565b506001949350505050565b6000336105e4818585610cb9565b60006105d0826001610ab6565b60006107ae826108a0565b8411156107fd5760405162461bcd60e51b815260206004820152601f60248201527f455243343632363a207769746864726177206d6f7265207468616e206d61780060448201526064016106b7565b6000610808856105ee565b90506108173385858885610f12565b949350505050565b600061082a826108c4565b8411156108795760405162461bcd60e51b815260206004820152601d60248201527f455243343632363a2072656465656d206d6f7265207468616e206d617800000060448201526064016106b7565b6000610884856105c3565b90506108173385858489610f12565b60006105d0826000610c0d565b6001600160a01b0381166000908152602081905260408120546105d0906000610ab6565b6001600160a01b0381166000908152602081905260408120546105d0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600560009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610962573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098691906118cb565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906118cb565b600554909150610a4f906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610fdb565b60055460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a906024015b600060405180830381600087803b158015610a9657600080fd5b505af1158015610aaa573d6000803e3d6000fd5b5050505050565b601290565b600080610ac260025490565b90508015610ae357610ade610ad561042d565b859083866110c0565b610817565b83610817565b6001600160a01b038316610b4b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106b7565b6001600160a01b038216610bac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106b7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600080610c1960025490565b9050831580610c26575080155b610ae357610ade81610c3661042d565b869190866110c0565b6000610c4b84846108e2565b90506000198114610cb35781811015610ca65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106b7565b610cb38484848403610ae9565b50505050565b6001600160a01b038316610d1d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106b7565b6001600160a01b038216610d7f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106b7565b6001600160a01b03831660009081526020819052604090205481811015610df75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106b7565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610cb3565b600080610e6861042d565b118061052c5750506002541590565b610ea37f0000000000000000000000000000000000000000000000000000000000000000853085611122565b610ead838261115a565b610eb682611219565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051610f04929190918252602082015260400190565b60405180910390a350505050565b826001600160a01b0316856001600160a01b031614610f3657610f36838683610c3f565b610f3f826112ed565b610f49838261131e565b610f747f00000000000000000000000000000000000000000000000000000000000000008584611450565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8585604051610fcc929190918252602082015260400190565b60405180910390a45050505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561102c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105091906118cb565b61105a91906118e4565b6040516001600160a01b038516602482015260448101829052909150610cb390859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611480565b6000806110ce868686611552565b905060018360028111156110e4576110e4611944565b1480156111015750600084806110fc576110fc61195a565b868809115b15611114576111116001826118e4565b90505b95945050505050565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610cb39085906323b872dd60e01b90608401611089565b6001600160a01b0382166111b05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106b7565b80600260008282546111c291906118e4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600554611253906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610fdb565b60055460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561129957600080fd5b505af11580156112ad573d6000803e3d6000fd5b505050507feebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca27816040516112e291815260200190565b60405180910390a150565b600554604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401610a7c565b6001600160a01b03821661137e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106b7565b6001600160a01b038216600090815260208190526040902054818110156113f25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106b7565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6040516001600160a01b03831660248201526044810182905261111d90849063a9059cbb60e01b90606401611089565b60006114d5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116019092919063ffffffff16565b80519091501561111d57808060200190518101906114f39190611970565b61111d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106b7565b600080806000198587098587029250828110838203039150508060000361158c578382816115825761158261195a565b049250505061061a565b80841161159857600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6060610817848460008585600080866001600160a01b031685876040516116289190611992565b60006040518083038185875af1925050503d8060008114611665576040519150601f19603f3d011682016040523d82523d6000602084013e61166a565b606091505b509150915061167b87838387611686565b979650505050505050565b606083156116f55782516000036116ee576001600160a01b0385163b6116ee5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106b7565b5081610817565b610817838381511561170a5781518083602001fd5b8060405162461bcd60e51b81526004016106b79190611750565b60005b8381101561173f578181015183820152602001611727565b83811115610cb35750506000910152565b602081526000825180602084015261176f816040850160208701611724565b601f01601f19169190910160400192915050565b60006020828403121561179557600080fd5b5035919050565b80356001600160a01b03811681146117b357600080fd5b919050565b600080604083850312156117cb57600080fd5b6117d48361179c565b946020939093013593505050565b6000806000606084860312156117f757600080fd5b6118008461179c565b925061180e6020850161179c565b9150604084013590509250925092565b60006020828403121561183057600080fd5b61061a8261179c565b6000806040838503121561184c57600080fd5b8235915061185c6020840161179c565b90509250929050565b60008060006060848603121561187a57600080fd5b8335925061188a6020850161179c565b91506118986040850161179c565b90509250925092565b600080604083850312156118b457600080fd5b6118bd8361179c565b915061185c6020840161179c565b6000602082840312156118dd57600080fd5b5051919050565b6000821982111561190557634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061191e57607f821691505b60208210810361193e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60006020828403121561198257600080fd5b8151801515811461061a57600080fd5b600082516119a4818460208701611724565b919091019291505056fea264697066735822122052ed29a7ebe3d4d145885a22ec249f652869c1d0d446b85e232d1c26c1432a2b64736f6c634300080f0033",
    "sourceMap": "312:1811:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:158;;;:::i;:::-;;;160:25:24;;;148:2;133:18;634:158:23;;;;;;;;2154:98:1;;;:::i;:::-;;;;;;;:::i;3476:163:3:-;;;;;;:::i;:::-;;:::i;4431:197:1:-;;;;;;:::i;:::-;;:::i;:::-;;;1634:14:24;;1627:22;1609:41;;1597:2;1582:18;4431:197:1;1469:187:24;4838:154:3;;;;;;:::i;:::-;;:::i;3242:106:1:-;3329:12;;3242:106;;5190:286;;;;;;:::i;:::-;;:::i;2762:121:3:-;;;2166:4:24;2867:9:3;2154:17:24;2136:36;;2124:2;2109:18;2762:121:3;1994:184:24;2927:103:3;3016:6;2927:103;;;-1:-1:-1;;;;;2347:32:24;;;2329:51;;2317:2;2302:18;2927:103:3;2183:203:24;5871:234:1;;;;;;:::i;:::-;;:::i;424:19:23:-;;;;;-1:-1:-1;;;;;424:19:23;;;3688:148:3;;;;;;:::i;:::-;;:::i;5244:315::-;;;;;;:::i;:::-;;:::i;3406:125:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:1;3480:7;3506:18;;;;;;;;;;;;3406:125;5602:303:3;;;;;;:::i;:::-;;:::i;2365:102:1:-;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;4634:150:3:-;;;;;;:::i;:::-;;:::i;5952:369::-;;;;;;:::i;:::-;;:::i;6366:361::-;;;;;;:::i;:::-;;:::i;3882:114::-;;;;;;:::i;:::-;-1:-1:-1;;;3972:17:3;3882:114;3259:163;;;;;;:::i;:::-;;:::i;4046:161::-;;;;;;:::i;:::-;;:::i;4255:121::-;;;;;;:::i;:::-;;:::i;3974:149:1:-;;;;;;:::i;:::-;;:::i;1088:216:23:-;;;:::i;:::-;;634:158;755:5;;:30;;-1:-1:-1;;;755:30:23;;779:4;755:30;;;2329:51:24;695:7:23;;-1:-1:-1;;;;;755:5:23;;:15;;2302:18:24;;755:30:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;721:31;;-1:-1:-1;;;721:31:23;;746:4;721:31;;;2329:51:24;721:6:23;-1:-1:-1;;;;;721:16:23;;;;2302:18:24;;721:31:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;;;:::i;:::-;714:71;;634:158;:::o;2154:98:1:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;3476:163:3:-;3555:14;3588:44;3605:6;3613:18;3588:16;:44::i;:::-;3581:51;3476:163;-1:-1:-1;;3476:163:3:o;4431:197:1:-;4514:4;719:10:8;4568:32:1;719:10:8;4584:7:1;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:1;;4431:197;-1:-1:-1;;;4431:197:1:o;4838:154:3:-;4917:7;4943:42;4960:6;4968:16;4943;:42::i;5190:286:1:-;5317:4;719:10:8;5373:38:1;5389:4;719:10:8;5404:6:1;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;;:::o;5871:234::-;5959:4;719:10:8;6013:64:1;719:10:8;6029:7:1;6066:10;6038:25;719:10:8;6029:7:1;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;3688:148:3:-;3755:7;3781:24;:22;:24::i;:::-;:48;;3828:1;3781:48;;;-1:-1:-1;;3774:55:3;3688:148;-1:-1:-1;;3688:148:3:o;5244:315::-;5328:7;5365:20;5376:8;5365:10;:20::i;:::-;5355:6;:30;;5347:73;;;;-1:-1:-1;;;5347:73:3;;4668:2:24;5347:73:3;;;4650:21:24;4707:2;4687:18;;;4680:30;4746:32;4726:18;;;4719:60;4796:18;;5347:73:3;;;;;;;;;5431:14;5448:22;5463:6;5448:14;:22::i;:::-;5431:39;-1:-1:-1;5480:48:3;719:10:8;5503:8:3;5513:6;5521;5480:8;:48::i;5602:303::-;5683:7;5780:14;5797:19;5809:6;5797:11;:19::i;:::-;5780:36;-1:-1:-1;5826:48:3;719:10:8;5849:8:3;5859:6;5867;5826:8;:48::i;2365:102:1:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:8;6685:4:1;6766:25;719:10:8;6783:7:1;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:1;;5383:2:24;6801:85:1;;;5365:21:24;5422:2;5402:18;;;5395:30;5461:34;5441:18;;;5434:62;-1:-1:-1;;;5512:18:24;;;5505:35;5557:19;;6801:85:1;5181:401:24;6801:85:1;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;-1:-1:-1;7008:4:1;;6592:427;-1:-1:-1;;;;6592:427:1:o;3727:189::-;3806:4;719:10:8;3860:28:1;719:10:8;3877:2:1;3881:6;3860:9;:28::i;4634:150:3:-;4709:7;4735:42;4752:6;4760:16;4735;:42::i;5952:369::-;6082:7;6119:18;6131:5;6119:11;:18::i;:::-;6109:6;:28;;6101:72;;;;-1:-1:-1;;;6101:72:3;;5789:2:24;6101:72:3;;;5771:21:24;5828:2;5808:18;;;5801:30;5867:33;5847:18;;;5840:61;5918:18;;6101:72:3;5587:355:24;6101:72:3;6184:14;6201:23;6217:6;6201:15;:23::i;:::-;6184:40;-1:-1:-1;6234:56:3;719:10:8;6258:8:3;6268:5;6275:6;6283;6234:9;:56::i;:::-;6308:6;5952:369;-1:-1:-1;;;;5952:369:3:o;6366:361::-;6494:7;6531:16;6541:5;6531:9;:16::i;:::-;6521:6;:26;;6513:68;;;;-1:-1:-1;;;6513:68:3;;6149:2:24;6513:68:3;;;6131:21:24;6188:2;6168:18;;;6161:30;6227:31;6207:18;;;6200:59;6276:18;;6513:68:3;5947:353:24;6513:68:3;6592:14;6609:21;6623:6;6609:13;:21::i;:::-;6592:38;-1:-1:-1;6640:56:3;719:10:8;6664:8:3;6674:5;6681:6;6689;6640:9;:56::i;3259:163::-;3338:14;3371:44;3388:6;3396:18;3371:16;:44::i;4046:161::-;-1:-1:-1;;;;;3506:18:1;;4120:7:3;3506:18:1;;;;;;;;;;;4146:54:3;;4181:18;4146:16;:54::i;4255:121::-;-1:-1:-1;;;;;3506:18:1;;4327:7:3;3506:18:1;;;;;;;;;;;4353:16:3;3406:125:1;3974:149;-1:-1:-1;;;;;4089:18:1;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;1088:216:23:-;1128:5;;;;;;;;;-1:-1:-1;;;;;1128:5:23;-1:-1:-1;;;;;1128:15:23;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1173:31:23;;-1:-1:-1;;;1173:31:23;;1198:4;1173:31;;;2329:51:24;1155:15:23;;1173:6;-1:-1:-1;;;;;1173:16:23;;;;2302:18:24;;1173:31:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1251:5;;1155:49;;-1:-1:-1;1214:53:23;;-1:-1:-1;;;;;1214:6:23;:28;;;1251:5;1155:49;1214:28;:53::i;:::-;1277:5;;:20;;-1:-1:-1;;;1277:20:23;;;;;160:25:24;;;-1:-1:-1;;;;;1277:5:23;;;;:11;;133:18:24;;1277:20:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1118:186;1088:216::o;3091:91:1:-;3173:2;;3091:91::o;7902:295:3:-;7999:14;8025;8042:13;3329:12:1;;;3242:106;8042:13:3;8025:30;-1:-1:-1;8085:11:3;;8084:106;;8144:46;8158:13;:11;:13::i;:::-;8144:6;;8173;8181:8;8144:13;:46::i;:::-;8084:106;;;8124:6;8100:41;8432:176;10504:370:1;-1:-1:-1;;;;;10635:19:1;;10627:68;;;;-1:-1:-1;;;10627:68:1;;6507:2:24;10627:68:1;;;6489:21:24;6546:2;6526:18;;;6519:30;6585:34;6565:18;;;6558:62;-1:-1:-1;;;6636:18:24;;;6629:34;6680:19;;10627:68:1;6305:400:24;10627:68:1;-1:-1:-1;;;;;10713:21:1;;10705:68;;;;-1:-1:-1;;;10705:68:1;;6912:2:24;10705:68:1;;;6894:21:24;6951:2;6931:18;;;6924:30;6990:34;6970:18;;;6963:62;-1:-1:-1;;;7041:18:24;;;7034:32;7083:19;;10705:68:1;6710:398:24;10705:68:1;-1:-1:-1;;;;;10784:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;160:25:24;;;10835:32:1;;133:18:24;10835:32:1;;;;;;;10504:370;;;:::o;7025:342:3:-;7122:14;7148;7165:13;3329:12:1;;;3242:106;7165:13:3;7148:30;-1:-1:-1;7208:11:3;;;:26;;-1:-1:-1;7223:11:3;;7208:26;7207:153;;7314:46;7328:6;7336:13;:11;:13::i;:::-;7314:6;;:46;7351:8;7314:13;:46::i;11155:441:1:-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:1;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:1;;7315:2:24;11404:68:1;;;7297:21:24;7354:2;7334:18;;;7327:30;7393:31;7373:18;;;7366:59;7442:18;;11404:68:1;7113:353:24;11404:68:1;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:1;;7591:68;;;;-1:-1:-1;;;7591:68:1;;7673:2:24;7591:68:1;;;7655:21:24;7712:2;7692:18;;;7685:30;7751:34;7731:18;;;7724:62;-1:-1:-1;;;7802:18:24;;;7795:35;7847:19;;7591:68:1;7471:401:24;7591:68:1;-1:-1:-1;;;;;7677:16:1;;7669:64;;;;-1:-1:-1;;;7669:64:1;;8079:2:24;7669:64:1;;;8061:21:24;8118:2;8098:18;;;8091:30;8157:34;8137:18;;;8130:62;-1:-1:-1;;;8208:18:24;;;8201:33;8251:19;;7669:64:1;7877:399:24;7669:64:1;-1:-1:-1;;;;;7815:15:1;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:1;;8483:2:24;7840:72:1;;;8465:21:24;8522:2;8502:18;;;8495:30;8561:34;8541:18;;;8534:62;-1:-1:-1;;;8612:18:24;;;8605:36;8658:19;;7840:72:1;8281:402:24;7840:72:1;-1:-1:-1;;;;;7946:15:1;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;160:25:24;;;8161:13:1;;8210:26;;133:18:24;8210:26:1;;;;;;;8247:37;12180:121;10528:125:3;10584:4;10623:1;10607:13;:11;:13::i;:::-;:17;:39;;;-1:-1:-1;;3329:12:1;;10628:18:3;;10528:125::o;1310:366:23:-;1485:65;1512:6;1520;1536:4;1543:6;1485:26;:65::i;:::-;1560:23;1566:8;1576:6;1560:5;:23::i;:::-;1593:20;1606:6;1593:12;:20::i;:::-;1644:8;-1:-1:-1;;;;;1628:41:23;1636:6;-1:-1:-1;;;;;1628:41:23;;1654:6;1662;1628:41;;;;;;8862:25:24;;;8918:2;8903:18;;8896:34;8850:2;8835:18;;8688:248;1628:41:23;;;;;;;;1310:366;;;;:::o;1682:439::-;1860:5;-1:-1:-1;;;;;1850:15:23;:6;-1:-1:-1;;;;;1850:15:23;;1846:84;;1881:38;1897:5;1904:6;1912;1881:15;:38::i;:::-;1939:22;1954:6;1939:14;:22::i;:::-;1971:20;1977:5;1984:6;1971:5;:20::i;:::-;2001:48;2024:6;2032:8;2042:6;2001:22;:48::i;:::-;2092:5;-1:-1:-1;;;;;2065:49:23;2082:8;-1:-1:-1;;;;;2065:49:23;2074:6;-1:-1:-1;;;;;2065:49:23;;2099:6;2107;2065:49;;;;;;8862:25:24;;;8918:2;8903:18;;8896:34;8850:2;8835:18;;8688:248;2065:49:23;;;;;;;;1682:439;;;;;:::o;2084:310:6:-;2233:39;;-1:-1:-1;;;2233:39:6;;2257:4;2233:39;;;9153:34:24;-1:-1:-1;;;;;9223:15:24;;;9203:18;;;9196:43;2210:20:6;;2275:5;;2233:15;;;;;9088:18:24;;2233:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2317:69;;-1:-1:-1;;;;;9442:32:24;;2317:69:6;;;9424:51:24;9491:18;;;9484:34;;;2210:70:6;;-1:-1:-1;2290:97:6;;2310:5;;-1:-1:-1;;;2340:22:6;9397:18:24;;2317:69:6;;;;-1:-1:-1;;2317:69:6;;;;;;;;;;;;;;-1:-1:-1;;;;;2317:69:6;-1:-1:-1;;;;;;2317:69:6;;;;;;;;;;2290:19;:97::i;5724:337:9:-;5863:7;5882:14;5899:25;5906:1;5909;5912:11;5899:6;:25::i;:::-;5882:42;-1:-1:-1;5950:11:9;5938:8;:23;;;;;;;;:::i;:::-;;:56;;;;;5993:1;5978:11;5965:25;;;;;:::i;:::-;5975:1;5972;5965:25;:29;5938:56;5934:98;;;6010:11;6020:1;6010:11;;:::i;:::-;;;5934:98;6048:6;5724:337;-1:-1:-1;;;;;5724:337:9:o;12180:121:1:-;;;;:::o;974:241:6:-;1139:68;;-1:-1:-1;;;;;10051:15:24;;;1139:68:6;;;10033:34:24;10103:15;;10083:18;;;10076:43;10135:18;;;10128:34;;;1112:96:6;;1132:5;;-1:-1:-1;;;1162:27:6;9968:18:24;;1139:68:6;9793:375:24;8567:535:1;-1:-1:-1;;;;;8650:21:1;;8642:65;;;;-1:-1:-1;;;8642:65:1;;10375:2:24;8642:65:1;;;10357:21:24;10414:2;10394:18;;;10387:30;10453:33;10433:18;;;10426:61;10504:18;;8642:65:1;10173:355:24;8642:65:1;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:1;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;160:25:24;;;8999:37:1;;133:18:24;8999:37:1;;;;;;;8567:535;;:::o;798:174:23:-;892:5;;855:52;;-1:-1:-1;;;;;855:6:23;:28;;;892:5;900:6;855:28;:52::i;:::-;917:5;;:19;;-1:-1:-1;;;917:19:23;;;;;160:25:24;;;-1:-1:-1;;;;;917:5:23;;;;:11;;133:18:24;;917:19:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;951:14;958:6;951:14;;;;160:25:24;;148:2;133:18;;14:177;951:14:23;;;;;;;;798:174;:::o;978:104::-;1045:5;;:30;;-1:-1:-1;;;1045:30:23;;;;;160:25:24;;;-1:-1:-1;;;;;1045:5:23;;;;:14;;133:18:24;;1045:30:23;14:177:24;9422:659:1;-1:-1:-1;;;;;9505:21:1;;9497:67;;;;-1:-1:-1;;;9497:67:1;;10735:2:24;9497:67:1;;;10717:21:24;10774:2;10754:18;;;10747:30;10813:34;10793:18;;;10786:62;-1:-1:-1;;;10864:18:24;;;10857:31;10905:19;;9497:67:1;10533:397:24;9497:67:1;-1:-1:-1;;;;;9660:18:1;;9635:22;9660:18;;;;;;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:1;;11137:2:24;9688:71:1;;;11119:21:24;11176:2;11156:18;;;11149:30;11215:34;11195:18;;;11188:62;-1:-1:-1;;;11266:18:24;;;11259:32;11308:19;;9688:71:1;10935:398:24;9688:71:1;-1:-1:-1;;;;;9793:18:1;;:9;:18;;;;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;160:25:24;;;9793:9:1;;:18;9978:37;;133:18:24;9978:37:1;;;;;;;12180:121;;;:::o;763:205:6:-;902:58;;-1:-1:-1;;;;;9442:32:24;;902:58:6;;;9424:51:24;9491:18;;;9484:34;;;875:86:6;;895:5;;-1:-1:-1;;;925:23:6;9397:18:24;;902:58:6;9250:274:24;3747:706:6;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:6;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:6;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:6;;11822:2:24;4351:85:6;;;11804:21:24;11861:2;11841:18;;;11834:30;11900:34;11880:18;;;11873:62;-1:-1:-1;;;11951:18:24;;;11944:40;12001:19;;4351:85:6;11620:406:24;1667:3925:9;1779:14;;;-1:-1:-1;;2316:1:9;2313;2306:20;2359:1;2356;2352:9;2343:18;;2414:5;2410:2;2407:13;2399:5;2395:2;2391:14;2387:34;2378:43;;;2516:5;2525:1;2516:10;2512:75;;2561:11;2553:5;:19;;;;;:::i;:::-;;2546:26;;;;;;2512:75;2711:5;2697:11;:19;2689:28;;;;;;2973:17;3108:11;3105:1;3102;3095:25;4486:1;3656;3641:12;;:16;;3626:32;;3761:22;;;;4467:1;:15;;4466:21;;4719;;;4715:25;;4704:36;4788:21;;;4784:25;;4773:36;4858:21;;;4854:25;;4843:36;4928:21;;;4924:25;;4913:36;4998:21;;;4994:25;;4983:36;5069:21;;;5065:25;;;5054:36;;;3611:12;4006;;;4002:23;;;3998:31;;;3222:20;;;3211:32;;;4118:12;;;;3269:21;;3859:16;;;;4109:21;;;;5533:15;;;-1:-1:-1;;;;1667:3925:9:o;3872:223:7:-;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4005;5240;5254:23;5281:6;-1:-1:-1;;;;;5281:11:7;5300:5;5307:4;5281:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5239:73;;;;5329:69;5356:6;5364:7;5373:10;5385:12;5329:26;:69::i;:::-;5322:76;4959:446;-1:-1:-1;;;;;;;4959:446:7:o;7465:628::-;7645:12;7673:7;7669:418;;;7700:10;:17;7721:1;7700:22;7696:286;;-1:-1:-1;;;;;1465:19:7;;;7907:60;;;;-1:-1:-1;;;7907:60:7;;12919:2:24;7907:60:7;;;12901:21:24;12958:2;12938:18;;;12931:30;12997:31;12977:18;;;12970:59;13046:18;;7907:60:7;12717:353:24;7907:60:7;-1:-1:-1;8002:10:7;7995:17;;7669:418;8043:33;8051:10;8063:12;8774:17;;:21;8770:379;;9002:10;8996:17;9058:15;9045:10;9041:2;9037:19;9030:44;8770:379;9125:12;9118:20;;-1:-1:-1;;;9118:20:7;;;;;;;;:::i;196:258:24:-;268:1;278:113;292:6;289:1;286:13;278:113;;;368:11;;;362:18;349:11;;;342:39;314:2;307:10;278:113;;;409:6;406:1;403:13;400:48;;;-1:-1:-1;;444:1:24;426:16;;419:27;196:258::o;459:383::-;608:2;597:9;590:21;571:4;640:6;634:13;683:6;678:2;667:9;663:18;656:34;699:66;758:6;753:2;742:9;738:18;733:2;725:6;721:15;699:66;:::i;:::-;826:2;805:15;-1:-1:-1;;801:29:24;786:45;;;;833:2;782:54;;459:383;-1:-1:-1;;459:383:24:o;847:180::-;906:6;959:2;947:9;938:7;934:23;930:32;927:52;;;975:1;972;965:12;927:52;-1:-1:-1;998:23:24;;847:180;-1:-1:-1;847:180:24:o;1032:173::-;1100:20;;-1:-1:-1;;;;;1149:31:24;;1139:42;;1129:70;;1195:1;1192;1185:12;1129:70;1032:173;;;:::o;1210:254::-;1278:6;1286;1339:2;1327:9;1318:7;1314:23;1310:32;1307:52;;;1355:1;1352;1345:12;1307:52;1378:29;1397:9;1378:29;:::i;:::-;1368:39;1454:2;1439:18;;;;1426:32;;-1:-1:-1;;;1210:254:24:o;1661:328::-;1738:6;1746;1754;1807:2;1795:9;1786:7;1782:23;1778:32;1775:52;;;1823:1;1820;1813:12;1775:52;1846:29;1865:9;1846:29;:::i;:::-;1836:39;;1894:38;1928:2;1917:9;1913:18;1894:38;:::i;:::-;1884:48;;1979:2;1968:9;1964:18;1951:32;1941:42;;1661:328;;;;;:::o;2614:186::-;2673:6;2726:2;2714:9;2705:7;2701:23;2697:32;2694:52;;;2742:1;2739;2732:12;2694:52;2765:29;2784:9;2765:29;:::i;2805:254::-;2873:6;2881;2934:2;2922:9;2913:7;2909:23;2905:32;2902:52;;;2950:1;2947;2940:12;2902:52;2986:9;2973:23;2963:33;;3015:38;3049:2;3038:9;3034:18;3015:38;:::i;:::-;3005:48;;2805:254;;;;;:::o;3064:328::-;3141:6;3149;3157;3210:2;3198:9;3189:7;3185:23;3181:32;3178:52;;;3226:1;3223;3216:12;3178:52;3262:9;3249:23;3239:33;;3291:38;3325:2;3314:9;3310:18;3291:38;:::i;:::-;3281:48;;3348:38;3382:2;3371:9;3367:18;3348:38;:::i;:::-;3338:48;;3064:328;;;;;:::o;3397:260::-;3465:6;3473;3526:2;3514:9;3505:7;3501:23;3497:32;3494:52;;;3542:1;3539;3532:12;3494:52;3565:29;3584:9;3565:29;:::i;:::-;3555:39;;3613:38;3647:2;3636:9;3632:18;3613:38;:::i;3662:184::-;3732:6;3785:2;3773:9;3764:7;3760:23;3756:32;3753:52;;;3801:1;3798;3791:12;3753:52;-1:-1:-1;3824:16:24;;3662:184;-1:-1:-1;3662:184:24:o;3851:225::-;3891:3;3922:1;3918:6;3915:1;3912:13;3909:136;;;3967:10;3962:3;3958:20;3955:1;3948:31;4002:4;3999:1;3992:15;4030:4;4027:1;4020:15;3909:136;-1:-1:-1;4061:9:24;;3851:225::o;4081:380::-;4160:1;4156:12;;;;4203;;;4224:61;;4278:4;4270:6;4266:17;4256:27;;4224:61;4331:2;4323:6;4320:14;4300:18;4297:38;4294:161;;4377:10;4372:3;4368:20;4365:1;4358:31;4412:4;4409:1;4402:15;4440:4;4437:1;4430:15;4294:161;;4081:380;;;:::o;9529:127::-;9590:10;9585:3;9581:20;9578:1;9571:31;9621:4;9618:1;9611:15;9645:4;9642:1;9635:15;9661:127;9722:10;9717:3;9713:20;9710:1;9703:31;9753:4;9750:1;9743:15;9777:4;9774:1;9767:15;11338:277;11405:6;11458:2;11446:9;11437:7;11433:23;11429:32;11426:52;;;11474:1;11471;11464:12;11426:52;11506:9;11500:16;11559:5;11552:13;11545:21;11538:5;11535:32;11525:60;;11581:1;11578;11571:12;12438:274;12567:3;12605:6;12599:13;12621:53;12667:6;12662:3;12655:4;12647:6;12643:17;12621:53;:::i;:::-;12690:16;;;;;12438:274;-1:-1:-1;;12438:274:24:o",
    "linkReferences": {},
    "immutableReferences": {
      "849": [
        {
          "start": 667,
          "length": 32
        },
        {
          "start": 1199,
          "length": 32
        },
        {
          "start": 2463,
          "length": 32
        },
        {
          "start": 2598,
          "length": 32
        },
        {
          "start": 3708,
          "length": 32
        },
        {
          "start": 3918,
          "length": 32
        },
        {
          "start": 4650,
          "length": 32
        }
      ],
      "851": [
        {
          "start": 623,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "asset()": "38d52e0f",
    "balanceOf(address)": "70a08231",
    "compoundMGN()": "ed72ade6",
    "convertToAssets(uint256)": "07a2d13a",
    "convertToShares(uint256)": "c6e6f592",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deposit(uint256,address)": "6e553f65",
    "increaseAllowance(address,uint256)": "39509351",
    "maxDeposit(address)": "402d267d",
    "maxMint(address)": "c63d75b6",
    "maxRedeem(address)": "d905777e",
    "maxWithdraw(address)": "ce96cb77",
    "mint(uint256,address)": "94bf804d",
    "name()": "06fdde03",
    "previewDeposit(uint256)": "ef8b30f7",
    "previewMint(uint256)": "b3d7f6b9",
    "previewRedeem(uint256)": "4cdad506",
    "previewWithdraw(uint256)": "0a28a477",
    "redeem(uint256,address,address)": "ba087652",
    "stake()": "3a4b66f1",
    "symbol()": "95d89b41",
    "totalAssets()": "01e1d114",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "withdraw(uint256,address,address)": "b460af94"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_stake\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compoundMGN\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"contract IStake\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"See {IERC4626-asset}. \"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"convertToAssets(uint256)\":{\"details\":\"See {IERC4626-convertToAssets}. \"},\"convertToShares(uint256)\":{\"details\":\"See {IERC4626-convertToShares}. \"},\"decimals()\":{\"details\":\"Decimals are read from the underlying asset in the constructor and cached. If this fails (e.g., the asset has not been created yet), the cached value is set to a default obtained by `super.decimals()` (which depends on inheritance but is most likely 18). Override this function in order to set a guaranteed hardcoded value. See {IERC20Metadata-decimals}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256,address)\":{\"details\":\"See {IERC4626-deposit}. \"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"maxDeposit(address)\":{\"details\":\"See {IERC4626-maxDeposit}. \"},\"maxMint(address)\":{\"details\":\"See {IERC4626-maxMint}. \"},\"maxRedeem(address)\":{\"details\":\"See {IERC4626-maxRedeem}. \"},\"maxWithdraw(address)\":{\"details\":\"See {IERC4626-maxWithdraw}. \"},\"mint(uint256,address)\":{\"details\":\"See {IERC4626-mint}. \"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"See {IERC4626-previewDeposit}. \"},\"previewMint(uint256)\":{\"details\":\"See {IERC4626-previewMint}. \"},\"previewRedeem(uint256)\":{\"details\":\"See {IERC4626-previewRedeem}. \"},\"previewWithdraw(uint256)\":{\"details\":\"See {IERC4626-previewWithdraw}. \"},\"redeem(uint256,address,address)\":{\"details\":\"See {IERC4626-redeem}. \"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"See {IERC4626-totalAssets}. \"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"withdraw(uint256,address,address)\":{\"details\":\"See {IERC4626-withdraw}. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mocks/MockstMugen.sol\":\"MockstMugen\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":3xcaliSwap/=lib/3xcaliSwap/contracts/\",\":3xcaliswap/=lib/3xcaliswap/\",\":@core/=lib/3xcaliSwap/contracts/core/\",\":@openzeppelin/=lib/3xcaliSwap/node_modules/@openzeppelin/\",\":@solmate/=lib/3xcaliSwap/node_modules/solmate/src/\",\":LayerZero/=lib/contracts/lib/LayerZero/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=lib/contracts/contracts/\",\":create3-factory/=lib/create3-factory/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":fraxlend/=lib/fraxlend/\",\":joe-v2/=lib/joe-v2/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":pancake-smart-contracts/=lib/pancake-smart-contracts/\",\":pancake/=lib/pancake-smart-contracts/\",\":solmate/=lib/solmate/\",\":spookyswap-core/=lib/spookyswap-core/contracts/\",\":spookyswap/=lib/spookyswap-core/\",\":sushiswap/=lib/sushiswap/\",\":traderjoe/=lib/joe-v2/src/\",\":uniswap/v3-core/=lib/v3-core/\",\":uniswap/v3-periphery/=lib/v3-periphery/\",\":utils/=lib/contracts/test/utils/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\",\":velodrome/=lib/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x1acad3a3e79d3ccbac56cf866482563677e51545516a1f84ffb7cd220e43d93a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85c2b518ec0ba4f8a9f0e544507decf3dbb4fd74321be1fc024e41619e2777b\",\"dweb:/ipfs/QmdyKUbqzaxW9XCMEU31qpRmuHVurhb8fa9XiU1gKU6Ng9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0xa0ba3f05c1dfe6c3d6ca5f4fe8becca8ce3c56b508934f17a2b50560bde7bb31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d657f1a60d4ea69c8fb63c5aba6e58d4aac24993887c0a10e496c745bf0842ef\",\"dweb:/ipfs/QmQ9fb84C2aVL4A9Yg2gDqBouxrSy4ryAFkjssPeZWbBC1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71\",\"dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf\",\"dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP\"]},\"src/interfaces/IStake.sol\":{\"keccak256\":\"0x9ce0e363b19ded7d5f045720d9d3b1abc132b9d6c10896500d1f9c5ea9064290\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1589942fc2c6ef39c9fbe175af88d276b09234f551ce3e54e4c482725c4cb6\",\"dweb:/ipfs/QmekwoYkFtEnfjLksKpt7rKEsoo1VjCKAqJKMrEpCg6gAV\"]},\"src/mocks/MockstMugen.sol\":{\"keccak256\":\"0xbb13a0398c6e6b8271fa9bd03238c88284361d19e12cdfa5665e6da9ec6cc31d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ba98dd13e67d3793130a41906b20f3727a47c67b9629164585dda030af668f8\",\"dweb:/ipfs/QmVDz6Gdv4GtNaXUqF4Z5brEPw8EXJhbarQrVBkNGrRXiD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_stake",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Staked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "asset",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "compoundMGN"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxRedeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewRedeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stake",
          "outputs": [
            {
              "internalType": "contract IStake",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "asset()": {
            "details": "See {IERC4626-asset}. "
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "convertToAssets(uint256)": {
            "details": "See {IERC4626-convertToAssets}. "
          },
          "convertToShares(uint256)": {
            "details": "See {IERC4626-convertToShares}. "
          },
          "decimals()": {
            "details": "Decimals are read from the underlying asset in the constructor and cached. If this fails (e.g., the asset has not been created yet), the cached value is set to a default obtained by `super.decimals()` (which depends on inheritance but is most likely 18). Override this function in order to set a guaranteed hardcoded value. See {IERC20Metadata-decimals}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "deposit(uint256,address)": {
            "details": "See {IERC4626-deposit}. "
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "maxDeposit(address)": {
            "details": "See {IERC4626-maxDeposit}. "
          },
          "maxMint(address)": {
            "details": "See {IERC4626-maxMint}. "
          },
          "maxRedeem(address)": {
            "details": "See {IERC4626-maxRedeem}. "
          },
          "maxWithdraw(address)": {
            "details": "See {IERC4626-maxWithdraw}. "
          },
          "mint(uint256,address)": {
            "details": "See {IERC4626-mint}. "
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "previewDeposit(uint256)": {
            "details": "See {IERC4626-previewDeposit}. "
          },
          "previewMint(uint256)": {
            "details": "See {IERC4626-previewMint}. "
          },
          "previewRedeem(uint256)": {
            "details": "See {IERC4626-previewRedeem}. "
          },
          "previewWithdraw(uint256)": {
            "details": "See {IERC4626-previewWithdraw}. "
          },
          "redeem(uint256,address,address)": {
            "details": "See {IERC4626-redeem}. "
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalAssets()": {
            "details": "See {IERC4626-totalAssets}. "
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "withdraw(uint256,address,address)": {
            "details": "See {IERC4626-withdraw}. "
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":3xcaliSwap/=lib/3xcaliSwap/contracts/",
        ":3xcaliswap/=lib/3xcaliswap/",
        ":@core/=lib/3xcaliSwap/contracts/core/",
        ":@openzeppelin/=lib/3xcaliSwap/node_modules/@openzeppelin/",
        ":@solmate/=lib/3xcaliSwap/node_modules/solmate/src/",
        ":LayerZero/=lib/contracts/lib/LayerZero/contracts/",
        ":chainlink/=lib/chainlink/",
        ":contracts/=lib/contracts/contracts/",
        ":create3-factory/=lib/create3-factory/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fraxlend/=lib/fraxlend/",
        ":joe-v2/=lib/joe-v2/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":pancake-smart-contracts/=lib/pancake-smart-contracts/",
        ":pancake/=lib/pancake-smart-contracts/",
        ":solmate/=lib/solmate/",
        ":spookyswap-core/=lib/spookyswap-core/contracts/",
        ":spookyswap/=lib/spookyswap-core/",
        ":sushiswap/=lib/sushiswap/",
        ":traderjoe/=lib/joe-v2/src/",
        ":uniswap/v3-core/=lib/v3-core/",
        ":uniswap/v3-periphery/=lib/v3-periphery/",
        ":utils/=lib/contracts/test/utils/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/",
        ":velodrome/=lib/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/mocks/MockstMugen.sol": "MockstMugen"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x1acad3a3e79d3ccbac56cf866482563677e51545516a1f84ffb7cd220e43d93a",
        "urls": [
          "bzz-raw://b85c2b518ec0ba4f8a9f0e544507decf3dbb4fd74321be1fc024e41619e2777b",
          "dweb:/ipfs/QmdyKUbqzaxW9XCMEU31qpRmuHVurhb8fa9XiU1gKU6Ng9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol": {
        "keccak256": "0xa0ba3f05c1dfe6c3d6ca5f4fe8becca8ce3c56b508934f17a2b50560bde7bb31",
        "urls": [
          "bzz-raw://d657f1a60d4ea69c8fb63c5aba6e58d4aac24993887c0a10e496c745bf0842ef",
          "dweb:/ipfs/QmQ9fb84C2aVL4A9Yg2gDqBouxrSy4ryAFkjssPeZWbBC1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749",
        "urls": [
          "bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71",
          "dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe",
        "urls": [
          "bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf",
          "dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP"
        ],
        "license": "MIT"
      },
      "src/interfaces/IStake.sol": {
        "keccak256": "0x9ce0e363b19ded7d5f045720d9d3b1abc132b9d6c10896500d1f9c5ea9064290",
        "urls": [
          "bzz-raw://da1589942fc2c6ef39c9fbe175af88d276b09234f551ce3e54e4c482725c4cb6",
          "dweb:/ipfs/QmekwoYkFtEnfjLksKpt7rKEsoo1VjCKAqJKMrEpCg6gAV"
        ],
        "license": "MIT"
      },
      "src/mocks/MockstMugen.sol": {
        "keccak256": "0xbb13a0398c6e6b8271fa9bd03238c88284361d19e12cdfa5665e6da9ec6cc31d",
        "urls": [
          "bzz-raw://0ba98dd13e67d3793130a41906b20f3727a47c67b9629164585dda030af668f8",
          "dweb:/ipfs/QmVDz6Gdv4GtNaXUqF4Z5brEPw8EXJhbarQrVBkNGrRXiD"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/mocks/MockstMugen.sol",
    "id": 5509,
    "exportedSymbols": {
      "Address": [
        2186
      ],
      "Context": [
        2208
      ],
      "ERC20": [
        754
      ],
      "ERC4626": [
        1514
      ],
      "IERC20": [
        832
      ],
      "IERC20Metadata": [
        1539
      ],
      "IERC20Permit": [
        1575
      ],
      "IERC4626": [
        167
      ],
      "IStake": [
        5274
      ],
      "Math": [
        3073
      ],
      "MockstMugen": [
        5508
      ],
      "SafeERC20": [
        1856
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2092:23",
    "nodes": [
      {
        "id": 5276,
        "nodeType": "PragmaDirective",
        "src": "32:23:23",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 5277,
        "nodeType": "ImportDirective",
        "src": "57:67:23",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol",
        "file": "openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5509,
        "sourceUnit": 1515,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5278,
        "nodeType": "ImportDirective",
        "src": "125:55:23",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5509,
        "sourceUnit": 833,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5279,
        "nodeType": "ImportDirective",
        "src": "181:34:23",
        "nodes": [],
        "absolutePath": "src/interfaces/IStake.sol",
        "file": "../interfaces/IStake.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5509,
        "sourceUnit": 5275,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5280,
        "nodeType": "ImportDirective",
        "src": "216:64:23",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5509,
        "sourceUnit": 1857,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5508,
        "nodeType": "ContractDefinition",
        "src": "312:1811:23",
        "nodes": [
          {
            "id": 5286,
            "nodeType": "UsingForDirective",
            "src": "350:27:23",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 5283,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1856,
              "src": "356:9:23"
            },
            "typeName": {
              "id": 5285,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5284,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 832,
                "src": "370:6:23"
              },
              "referencedDeclaration": 832,
              "src": "370:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$832",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 5290,
            "nodeType": "EventDefinition",
            "src": "383:35:23",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "eebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca27",
            "name": "Staked",
            "nameLocation": "389:6:23",
            "parameters": {
              "id": 5289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5288,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakedAmount",
                  "nameLocation": "404:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5290,
                  "src": "396:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "395:22:23"
            }
          },
          {
            "id": 5293,
            "nodeType": "VariableDeclaration",
            "src": "424:19:23",
            "nodes": [],
            "constant": false,
            "functionSelector": "3a4b66f1",
            "mutability": "mutable",
            "name": "stake",
            "nameLocation": "438:5:23",
            "scope": 5508,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStake_$5274",
              "typeString": "contract IStake"
            },
            "typeName": {
              "id": 5292,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5291,
                "name": "IStake",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5274,
                "src": "424:6:23"
              },
              "referencedDeclaration": 5274,
              "src": "424:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStake_$5274",
                "typeString": "contract IStake"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5319,
            "nodeType": "FunctionDefinition",
            "src": "450:178:23",
            "nodes": [],
            "body": {
              "id": 5318,
              "nodeType": "Block",
              "src": "589:39:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5312,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5293,
                      "src": "599:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStake_$5274",
                        "typeString": "contract IStake"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5314,
                          "name": "_stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5302,
                          "src": "614:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5313,
                        "name": "IStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5274,
                        "src": "607:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStake_$5274_$",
                          "typeString": "type(contract IStake)"
                        }
                      },
                      "id": 5315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "607:14:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStake_$5274",
                        "typeString": "contract IStake"
                      }
                    },
                    "src": "599:22:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStake_$5274",
                      "typeString": "contract IStake"
                    }
                  },
                  "id": 5317,
                  "nodeType": "ExpressionStatement",
                  "src": "599:22:23"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5305,
                    "name": "asset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5296,
                    "src": "550:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$832",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 5306,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5304,
                  "name": "ERC4626",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1514,
                  "src": "542:7:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "542:14:23"
              },
              {
                "arguments": [
                  {
                    "id": 5308,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5298,
                    "src": "571:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 5309,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5300,
                    "src": "577:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 5310,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5307,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 754,
                  "src": "565:5:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "565:19:23"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5296,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "469:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5319,
                  "src": "462:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$832",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 5295,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5294,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 832,
                      "src": "462:6:23"
                    },
                    "referencedDeclaration": 832,
                    "src": "462:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$832",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5298,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "490:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5319,
                  "src": "476:18:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5297,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5300,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "510:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5319,
                  "src": "496:20:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5299,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5302,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nameLocation": "526:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5319,
                  "src": "518:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "461:72:23"
            },
            "returnParameters": {
              "id": 5311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "589:0:23"
            },
            "scope": 5508,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5342,
            "nodeType": "FunctionDefinition",
            "src": "634:158:23",
            "nodes": [],
            "body": {
              "id": 5341,
              "nodeType": "Block",
              "src": "704:88:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 5329,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "746:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockstMugen_$5508",
                                "typeString": "contract MockstMugen"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockstMugen_$5508",
                                "typeString": "contract MockstMugen"
                              }
                            ],
                            "id": 5328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "738:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5327,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "738:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "738:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 5325,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 849,
                          "src": "721:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$832",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 5326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 789,
                        "src": "721:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 5331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "721:31:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 5336,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "779:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockstMugen_$5508",
                                "typeString": "contract MockstMugen"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockstMugen_$5508",
                                "typeString": "contract MockstMugen"
                              }
                            ],
                            "id": 5335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "771:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5334,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "771:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "771:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 5332,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5293,
                          "src": "755:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStake_$5274",
                            "typeString": "contract IStake"
                          }
                        },
                        "id": 5333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5256,
                        "src": "755:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 5338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "755:30:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "721:64:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5324,
                  "id": 5340,
                  "nodeType": "Return",
                  "src": "714:71:23"
                }
              ]
            },
            "baseFunctions": [
              988
            ],
            "functionSelector": "01e1d114",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalAssets",
            "nameLocation": "643:11:23",
            "overrides": {
              "id": 5321,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "677:8:23"
            },
            "parameters": {
              "id": 5320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "654:2:23"
            },
            "returnParameters": {
              "id": 5324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5342,
                  "src": "695:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "694:9:23"
            },
            "scope": 5508,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 5368,
            "nodeType": "FunctionDefinition",
            "src": "798:174:23",
            "nodes": [],
            "body": {
              "id": 5367,
              "nodeType": "Block",
              "src": "845:127:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5352,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5293,
                            "src": "892:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStake_$5274",
                              "typeString": "contract IStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IStake_$5274",
                              "typeString": "contract IStake"
                            }
                          ],
                          "id": 5351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "884:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5350,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "884:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "884:14:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5354,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5344,
                        "src": "900:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5347,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "855:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$832",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1713,
                      "src": "855:28:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$832_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 5355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "855:52:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5356,
                  "nodeType": "ExpressionStatement",
                  "src": "855:52:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5360,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5344,
                        "src": "929:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5357,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5293,
                        "src": "917:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStake_$5274",
                          "typeString": "contract IStake"
                        }
                      },
                      "id": 5359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5249,
                      "src": "917:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 5361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "917:19:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5362,
                  "nodeType": "ExpressionStatement",
                  "src": "917:19:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5364,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5344,
                        "src": "958:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5363,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5290,
                      "src": "951:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "951:14:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5366,
                  "nodeType": "EmitStatement",
                  "src": "946:19:23"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "afterDeposit",
            "nameLocation": "807:12:23",
            "parameters": {
              "id": 5345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5344,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "828:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5368,
                  "src": "820:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:16:23"
            },
            "returnParameters": {
              "id": 5346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "845:0:23"
            },
            "scope": 5508,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5380,
            "nodeType": "FunctionDefinition",
            "src": "978:104:23",
            "nodes": [],
            "body": {
              "id": 5379,
              "nodeType": "Block",
              "src": "1035:47:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5376,
                        "name": "_unstakeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5370,
                        "src": "1060:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5373,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5293,
                        "src": "1045:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStake_$5274",
                          "typeString": "contract IStake"
                        }
                      },
                      "id": 5375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5261,
                      "src": "1045:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 5377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1045:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5378,
                  "nodeType": "ExpressionStatement",
                  "src": "1045:30:23"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beforeWithdraw",
            "nameLocation": "987:14:23",
            "parameters": {
              "id": 5371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5370,
                  "mutability": "mutable",
                  "name": "_unstakeAmount",
                  "nameLocation": "1010:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5380,
                  "src": "1002:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1001:24:23"
            },
            "returnParameters": {
              "id": 5372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1035:0:23"
            },
            "scope": 5508,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5415,
            "nodeType": "FunctionDefinition",
            "src": "1088:216:23",
            "nodes": [],
            "body": {
              "id": 5414,
              "nodeType": "Block",
              "src": "1118:186:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 5383,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5293,
                        "src": "1128:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStake_$5274",
                          "typeString": "contract IStake"
                        }
                      },
                      "id": 5385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5273,
                      "src": "1128:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 5386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1128:17:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5387,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:17:23"
                },
                {
                  "assignments": [
                    5389
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5389,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1163:7:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 5414,
                      "src": "1155:15:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5388,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1155:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5397,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5394,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1198:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockstMugen_$5508",
                              "typeString": "contract MockstMugen"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockstMugen_$5508",
                              "typeString": "contract MockstMugen"
                            }
                          ],
                          "id": 5393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1190:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5392,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1190:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1190:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 5390,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "1173:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$832",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 789,
                      "src": "1173:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1173:31:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1155:49:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5403,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5293,
                            "src": "1251:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStake_$5274",
                              "typeString": "contract IStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IStake_$5274",
                              "typeString": "contract IStake"
                            }
                          ],
                          "id": 5402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1243:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5401,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1243:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1243:14:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5405,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5389,
                        "src": "1259:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5398,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "1214:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$832",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1713,
                      "src": "1214:28:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$832_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 5406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1214:53:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5407,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:53:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5411,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5389,
                        "src": "1289:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5408,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5293,
                        "src": "1277:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStake_$5274",
                          "typeString": "contract IStake"
                        }
                      },
                      "id": 5410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5249,
                      "src": "1277:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 5412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:20:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5413,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:20:23"
                }
              ]
            },
            "functionSelector": "ed72ade6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "compoundMGN",
            "nameLocation": "1097:11:23",
            "parameters": {
              "id": 5381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1108:2:23"
            },
            "returnParameters": {
              "id": 5382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1118:0:23"
            },
            "scope": 5508,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5456,
            "nodeType": "FunctionDefinition",
            "src": "1310:366:23",
            "nodes": [],
            "body": {
              "id": 5455,
              "nodeType": "Block",
              "src": "1420:256:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5430,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "1512:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$832",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 5431,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5417,
                        "src": "1520:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5434,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1536:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockstMugen_$5508",
                              "typeString": "contract MockstMugen"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockstMugen_$5508",
                              "typeString": "contract MockstMugen"
                            }
                          ],
                          "id": 5433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1528:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5432,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1528:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1528:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5436,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5421,
                        "src": "1543:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$832",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5427,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1856,
                        "src": "1485:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1856_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 5429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1633,
                      "src": "1485:26:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 5437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1485:65:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5438,
                  "nodeType": "ExpressionStatement",
                  "src": "1485:65:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5440,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5419,
                        "src": "1566:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5441,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5423,
                        "src": "1576:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5439,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "1560:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1560:23:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5443,
                  "nodeType": "ExpressionStatement",
                  "src": "1560:23:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5445,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5421,
                        "src": "1606:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5444,
                      "name": "afterDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5368,
                      "src": "1593:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:20:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5447,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:20:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5449,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5417,
                        "src": "1636:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5450,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5419,
                        "src": "1644:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5451,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5421,
                        "src": "1654:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5452,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5423,
                        "src": "1662:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5448,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1628:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 5453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1628:41:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5454,
                  "nodeType": "EmitStatement",
                  "src": "1623:46:23"
                }
              ]
            },
            "baseFunctions": [
              1450
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "1319:8:23",
            "overrides": {
              "id": 5425,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1411:8:23"
            },
            "parameters": {
              "id": 5424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5417,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1336:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5456,
                  "src": "1328:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5419,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1352:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5456,
                  "src": "1344:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1344:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5421,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "1370:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5456,
                  "src": "1362:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1362:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5423,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1386:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5456,
                  "src": "1378:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:66:23"
            },
            "returnParameters": {
              "id": 5426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:23"
            },
            "scope": 5508,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 5507,
            "nodeType": "FunctionDefinition",
            "src": "1682:439:23",
            "nodes": [],
            "body": {
              "id": 5506,
              "nodeType": "Block",
              "src": "1836:285:23",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5470,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5458,
                      "src": "1850:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 5471,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5462,
                      "src": "1860:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1850:15:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5480,
                  "nodeType": "IfStatement",
                  "src": "1846:84:23",
                  "trueBody": {
                    "id": 5479,
                    "nodeType": "Block",
                    "src": "1867:63:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5474,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5462,
                              "src": "1897:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5475,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5458,
                              "src": "1904:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5476,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5466,
                              "src": "1912:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5473,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 731,
                            "src": "1881:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 5477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1881:38:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5478,
                        "nodeType": "ExpressionStatement",
                        "src": "1881:38:23"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5482,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5464,
                        "src": "1954:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5481,
                      "name": "beforeWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5380,
                      "src": "1939:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1939:22:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5484,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:22:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5486,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5462,
                        "src": "1977:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5487,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5466,
                        "src": "1984:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5485,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "1971:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1971:20:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5489,
                  "nodeType": "ExpressionStatement",
                  "src": "1971:20:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5493,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "2024:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$832",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 5494,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5460,
                        "src": "2032:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5495,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5464,
                        "src": "2042:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$832",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5490,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1856,
                        "src": "2001:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1856_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 5492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1607,
                      "src": "2001:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 5496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2001:48:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5497,
                  "nodeType": "ExpressionStatement",
                  "src": "2001:48:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5499,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5458,
                        "src": "2074:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5500,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5460,
                        "src": "2082:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5501,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5462,
                        "src": "2092:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5502,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5464,
                        "src": "2099:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5503,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5466,
                        "src": "2107:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5498,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2065:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 5504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2065:49:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5505,
                  "nodeType": "EmitStatement",
                  "src": "2060:54:23"
                }
              ]
            },
            "baseFunctions": [
              1497
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "1691:9:23",
            "overrides": {
              "id": 5468,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1823:8:23"
            },
            "parameters": {
              "id": 5467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5458,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1709:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5507,
                  "src": "1701:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1701:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5460,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1725:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5507,
                  "src": "1717:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5462,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1743:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5507,
                  "src": "1735:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5464,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "1758:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5507,
                  "src": "1750:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1750:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5466,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1774:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5507,
                  "src": "1766:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1700:81:23"
            },
            "returnParameters": {
              "id": 5469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1836:0:23"
            },
            "scope": 5508,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5281,
              "name": "ERC4626",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1514,
              "src": "336:7:23"
            },
            "id": 5282,
            "nodeType": "InheritanceSpecifier",
            "src": "336:7:23"
          }
        ],
        "canonicalName": "MockstMugen",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5508,
          1514,
          167,
          754,
          1539,
          832,
          2208
        ],
        "name": "MockstMugen",
        "nameLocation": "321:11:23",
        "scope": 5509,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 23
}