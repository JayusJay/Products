{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testLB",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b506145ce806100316000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e414610067578063291c9831146100715780633a76846314610079578063ba414fa6146100b1578063f8ccbf47146100c9578063fa7626d4146100dc575b600080fd5b61006f6100e9565b005b61006f610249565b610094737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b96106ee565b60405190151581526020016100a8565b6000546100b99062010000900460ff1681565b6000546100b99060ff1681565b6040516100f590610819565b604051809103906000f080158015610111573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216918217905560405173b31f66aa3c1e785363f0875a1b74e27b85fd66c7917360ae616a2155ee3d9a68541ba4544862310933d49173e3ffc583dc176575eea7fd9df2a7c65f7e23f4c3919073c35dadb65012ec5796536bd9864ed8773abc74c4907fe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303907345a01e4e04f14f7a4a6702c74187c5f6222033cd906101ce90610826565b6001600160a01b0397881681529587166020870152938616604086015291851660608501528416608084015260a083015290911660c082015260e001604051809103906000f080158015610226573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b60408051600380825260808201909252600091602082016060803683375050604080516003808252608082019092529293506000929150602082015b60608152602001906001900390816102855790505090506002826000815181106102b1576102b1610833565b602002602001019060ff16908160ff1681525050600b826001815181106102da576102da610833565b602002602001019060ff16908160ff1681525050600d8260028151811061030357610303610833565b60ff92909216602092830291909101820152604080516002808252606082018352600093919290918301908036833701905050905073b31f66aa3c1e785363f0875a1b74e27b85fd66c78160008151811061036057610360610833565b60200260200101906001600160a01b031690816001600160a01b03168152505073b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e816001815181106103a8576103a8610833565b6001600160a01b0392909216602092830291909101909101526040805160018082528183019092526000918160200160208202803683370190505090506014816000815181106103fa576103fa610833565b6020908102919091010152604080516001808252818301909252600091816020015b6104476040518060800160405280600081526020016000815260200160608152602001606081525090565b81526020019060019003908161041c5790505090506040518060800160405280678ac7230489e8000081526020016305f5e1008152602001838152602001848152508160008151811061049c5761049c610833565b6020908102919091010152604080516001808252818301909252600091816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816104be579050506040805160608101825273b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e80825230602083015260085483516370a0823160e01b81526001600160a01b0390911660048201529394509092918301916370a0823190602401602060405180830381865afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105859190610849565b8152508160008151811061059b5761059b610833565b6020026020010181905250678ac7230489e800006040516020016105cf919067ffffffffffffffff91909116815260200190565b604051602081830303815290604052856000815181106105f1576105f1610833565b60200260200101819052508160405160200161060d91906108a6565b6040516020818303038152906040528560018151811061062f5761062f610833565b60200260200101819052508060405160200161064b919061096c565b6040516020818303038152906040528560028151811061066d5761066d610833565b602090810291909101015260085460405163b2817fd560e01b81526001600160a01b039091169063b2817fd590678ac7230489e80000906106b4908a908a90600401610a01565b6000604051808303818588803b1580156106cd57600080fd5b505af11580156106e1573d6000803e3d6000fd5b5050505050505050505050565b60008054610100900460ff161561070e5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156108145760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161079c917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610ab4565b60408051601f19818403018152908290526107b691610ae5565b6000604051808303816000865af19150503d80600081146107f3576040519150601f19603f3d011682016040523d82523d6000602084013e6107f8565b606091505b50915050808060200190518101906108109190610b01565b9150505b919050565b61079880610b2b83390190565b6132d6806112c383390190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561085b57600080fd5b5051919050565b600081518084526020808501945080840160005b8381101561089b5781516001600160a01b031687529582019590820190600101610876565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561095d57898403603f190186528251805185528881015189860152878101516080898701819052815190870181905260a08701918b019085905b8082101561092c5782518452928c0192918c01916001919091019061090c565b505050606080830151925086820381880152506109498183610862565b978a019795505050918701916001016108ce565b50919998505050505050505050565b602080825282518282018190526000919060409081850190868401855b828110156109c457815180516001600160a01b0390811686528782015116878601528501518585015260609093019290850190600101610989565b5091979650505050505050565b60005b838110156109ec5781810151838201526020016109d4565b838111156109fb576000848401525b50505050565b604080825283519082018190526000906020906060840190828701845b82811015610a3d57815160ff1684529284019290840190600101610a1e565b50505083810382850152845180825282820190600581901b8301840187850160005b83811015610aa557601f198087850301865282518051808652610a87818b88018c85016109d1565b96890196601f01909116939093018701925090860190600101610a5f565b50909998505050505050505050565b6001600160e01b0319831681528151600090610ad78160048501602087016109d1565b919091016004019392505050565b60008251610af78184602087016109d1565b9190910192915050565b600060208284031215610b1357600080fd5b81518015158114610b2357600080fd5b939250505056fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61071a8061007e6000396000f3fe60806040526004361061004e5760003560e01c806350431ce41461005a57806351cff8d914610071578063715018a6146100915780638da5cb5b146100a6578063f2fde38b146100d257600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061006f6100f2565b005b34801561007d57600080fd5b5061006f61008c366004610606565b610115565b34801561009d57600080fd5b5061006f6101ae565b3480156100b257600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100de57600080fd5b5061006f6100ed366004610606565b6101c2565b6100fa61023d565b6000546001600160a01b0316476101118282610297565b5050565b61011d61023d565b6101ab6101326000546001600160a01b031690565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a919061062a565b6001600160a01b03841691906102ed565b50565b6101b661023d565b6101c0600061033f565b565b6101ca61023d565b6001600160a01b0381166102345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101ab8161033f565b6000546001600160a01b031633146101c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022b565b600080600080600085875af19050806102e85760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b604482015260640161022b565b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526102e890849061038f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006103e4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104619092919063ffffffff16565b8051909150156102e857808060200190518101906104029190610643565b6102e85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161022b565b60606104708484600085610478565b949350505050565b6060824710156104d95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161022b565b600080866001600160a01b031685876040516104f59190610695565b60006040518083038185875af1925050503d8060008114610532576040519150601f19603f3d011682016040523d82523d6000602084013e610537565b606091505b509150915061054887838387610553565b979650505050505050565b606083156105c25782516000036105bb576001600160a01b0385163b6105bb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161022b565b5081610470565b61047083838151156105d75781518083602001fd5b8060405162461bcd60e51b815260040161022b91906106b1565b6001600160a01b03811681146101ab57600080fd5b60006020828403121561061857600080fd5b8135610623816105f1565b9392505050565b60006020828403121561063c57600080fd5b5051919050565b60006020828403121561065557600080fd5b8151801515811461062357600080fd5b60005b83811015610680578181015183820152602001610668565b8381111561068f576000848401525b50505050565b600082516106a7818460208701610665565b9190910192915050565b60208152600082518060208401526106d0816040850160208701610665565b601f01601f1916919091016040019291505056fea2646970667358221220d95940354243e711e013a7104a0aaff98ddf4f5b6d77383ab6722f8b51e2ff8964736f6c634300080f00336101206040526002805460ff191660011790553480156200001f57600080fd5b50604051620032d6380380620032d683398101604081905262000042916200009e565b600080546001600160a01b0319166001600160a01b03948516179055600191909155811660805293841660a05291831660c052821660e05216610100526200013d565b6001600160a01b03811681146200009b57600080fd5b50565b600080600080600080600060e0888a031215620000ba57600080fd5b8751620000c78162000085565b6020890151909750620000da8162000085565b6040890151909650620000ed8162000085565b6060890151909550620001008162000085565b6080890151909450620001138162000085565b60a089015160c08a015191945092506200012d8162000085565b8091505092959891949750929550565b60805160a05160c05160e0516101005161311d620001b9600039600081816101210152611045015260008181610b470152610bd601526000818161094601526109d501526000818161051301528181610675015261070801526000818160a00152818161016e015281816111b701526111de015261311d6000f3fe6080604052600436106100595760003560e01c80639aab924814610065578063a9e56f3c1461008e578063ab8236f3146100da578063b2817fd5146100fc578063c415b95c1461010f578063c45a01551461014357600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061007b60015481565b6040519081526020015b60405180910390f35b34801561009a57600080fd5b506100c27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610085565b3480156100e657600080fd5b506100fa6100f536600461207c565b610163565b005b6100fa61010a36600461215a565b610330565b34801561011b57600080fd5b506100c27f000000000000000000000000000000000000000000000000000000000000000081565b34801561014f57600080fd5b506000546100c2906001600160a01b031681565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101ac57604051638afe477f60e01b815260040160405180910390fd5b6000806000838060200190518101906101c591906122e9565b9250925092506000306001600160a01b031663b2817fd562030d4085856040518463ffffffff1660e01b81526004016101ff929190612480565b600060405180830381600088803b15801561021957600080fd5b5087f19350505050801561022b575060015b610279573d808015610259576040519150601f19603f3d011682016040523d82523d6000602084013e61025e565b606091505b506102736001600160a01b0389168689610d1e565b60019150505b600047156102d5576040516001600160a01b038616904790600081818185875af1925050503d80600081146102ca576040519150601f19603f3d011682016040523d82523d6000602084013e6102cf565b606091505b50909150505b6040805188815283151560208201528215158183015290516001600160a01b038a16917f7f345d6da48bd1339fd428ff45265a0f01258b14ca09dcf8db0c469f4f732fd3919081900360600190a25050505050505050505050565b60025460ff166001146103775760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064015b60405180910390fd5b6002805460ff19168117905560005b83811015610d0a5760008585838181106103a2576103a26124ae565b90506020020160208101906103b791906124c4565b905060001960ff8216016104af576000808585858181106103da576103da6124ae565b90506020028101906103ec91906124e8565b8101906103f991906125ed565b9150915060005b82518110156104a757600082828151811061041d5761041d6124ae565b6020026020010151116104435760405163fe4155c760e01b815260040160405180910390fd5b610495333084848151811061045a5761045a6124ae565b6020026020010151868581518110610474576104746124ae565b60200260200101516001600160a01b0316610d86909392919063ffffffff16565b8061049f81612666565b915050610400565b505050610cf7565b60011960ff82160161058b5760008484848181106104cf576104cf6124ae565b90506020028101906104e191906124e8565b8101906104ee919061267f565b9050600081116105115760405163fe4155c760e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561056c57600080fd5b505af1158015610580573d6000803e3d6000fd5b505050505050610cf7565b60041960ff8216016106145760008484848181106105ab576105ab6124ae565b90506020028101906105bd91906124e8565b8101906105ca91906126a6565b905060005b815181101561060d576105fa8282815181106105ed576105ed6124ae565b6020026020010151610dc4565b508061060581612666565b9150506105cf565b5050610cf7565b600b1960ff8216016107e057600080858585818110610635576106356124ae565b905060200281019061064791906124e8565b81019061065491906127b3565b91509150806000036106ed576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e891906127df565b6106ef565b805b604051632e1a7d4d60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561075457600080fd5b505af1158015610768573d6000803e3d6000fd5b505050506000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146107b9576040519150601f19603f3d011682016040523d82523d6000602084013e6107be565b606091505b50509050806104a757604051631d42c86760e21b815260040160405180910390fd5b600c1960ff8216016108a1576000848484818110610800576108006124ae565b905060200281019061081291906124e8565b81019061081f91906127f8565b905060005b815181101561060d5761088f828281518110610842576108426124ae565b602002602001015160000151838381518110610860576108606124ae565b60200260200101516040015184848151811061087e5761087e6124ae565b602002602001015160200151610fa4565b8061089981612666565b915050610824565b600d1960ff8216016108f45760008060008686868181106108c4576108c46124ae565b90506020028101906108d691906124e8565b8101906108e391906129aa565b9250925092506104a78383836110c6565b60091960ff821601610af5576000848484818110610914576109146124ae565b905060200281019061092691906124e8565b8101906109339190612aad565b905060005b815181101561060d576109d37f0000000000000000000000000000000000000000000000000000000000000000838381518110610977576109776124ae565b602002602001015160000151848481518110610995576109956124ae565b6020026020010151604001516000815181106109b3576109b36124ae565b60200260200101516001600160a01b03166113149092919063ffffffff16565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed1739838381518110610a1457610a146124ae565b602002602001015160000151848481518110610a3257610a326124ae565b602002602001015160200151858581518110610a5057610a506124ae565b60200260200101516040015130878781518110610a6f57610a6f6124ae565b6020026020010151606001516040518663ffffffff1660e01b8152600401610a9b959493929190612ba7565b6000604051808303816000875af1158015610aba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ae29190810190612c18565b5080610aed81612666565b915050610938565b600a1960ff821601610cf7576000848484818110610b1557610b156124ae565b9050602002810190610b2791906124e8565b810190610b349190612c9d565b905060005b8151811015610cf457610bd47f0000000000000000000000000000000000000000000000000000000000000000838381518110610b7857610b786124ae565b602002602001015160000151848481518110610b9657610b966124ae565b602002602001015160600151600081518110610bb457610bb46124ae565b60200260200101516001600160a01b03166113c69092919063ffffffff16565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636d0ff495838381518110610c1557610c156124ae565b602002602001015160000151848481518110610c3357610c336124ae565b602002602001015160200151858581518110610c5157610c516124ae565b602002602001015160400151868681518110610c6f57610c6f6124ae565b60200260200101516060015130426040518763ffffffff1660e01b8152600401610c9e96959493929190612e10565b6020604051808303816000875af1158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce191906127df565b5080610cec81612666565b915050610b39565b50505b5080610d0281612666565b915050610386565b50506002805460ff19166001179055505050565b6040516001600160a01b038316602482015260448101829052610d8190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526114db565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610dbe9085906323b872dd60e01b90608401610d4a565b50505050565b60008054825160408401516001548493610deb936001600160a01b039091169290916115ad565b90508060018251610dfc9190612eb9565b81518110610e0c57610e0c6124ae565b602002602001015191508260200151821015610e6a5760405162461bcd60e51b815260206004820152601760248201527f696e73756666696369656e742d616d6f756e742d6f7574000000000000000000604482015260640161036e565b826060015115610f8f576000805460408501518051610f8f93610ecd936001600160a01b03169291610e9e57610e9e6124ae565b60200260200101518660400151600181518110610ebd57610ebd6124ae565b6020026020010151600154611739565b8460400151600081518110610ee457610ee46124ae565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610f34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5891906127df565b8560400151600081518110610f6f57610f6f6124ae565b60200260200101516001600160a01b0316610d1e9092919063ffffffff16565b610f9e818460400151306117ed565b50919050565b81600003611019576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610ff0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101491906127df565b61101b565b815b91506000611028836119c4565b90506110348184612eb9565b925061106a6001600160a01b0385167f000000000000000000000000000000000000000000000000000000000000000083610d1e565b61107e6001600160a01b0385168385610d1e565b604080516001600160a01b0386168152602081018390527f075a2720282fdf622141dae0b048ef90a21a7e57c134c76912d19d006b3b3f6f910160405180910390a150505050565b600034116110e75760405163c9935ff960e01b815260040160405180910390fd5b6000836101000151838360405160200161110393929190612ed0565b604051602081830303815290604052905083608001516000036111935760208401516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561116a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118e91906127df565b611199565b83608001515b6080850181905260208501516111dc916001600160a01b03909116907f000000000000000000000000000000000000000000000000000000000000000090611314565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639fbf10fc47866000015187604001518860600151308a608001518b60a0015160405180606001604052808e610120015181526020018e60c0015181526020018e60e0015160405160200161126e919060609190911b6001600160601b031916815260140190565b6040516020818303038152906040528152508d60e001516040516020016112a8919060609190911b6001600160601b031916815260140190565b6040516020818303038152906040528b6040518b63ffffffff1660e01b81526004016112dc99989796959493929190612f10565b6000604051808303818588803b1580156112f557600080fd5b505af1158015611309573d6000803e3d6000fd5b505050505050505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611365573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138991906127df565b6113939190612fae565b6040516001600160a01b038516602482015260448101829052909150610dbe90859063095ea7b360e01b90606401610d4a565b8015806114405750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561141a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143e91906127df565b155b6114ab5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161036e565b6040516001600160a01b038316602482015260448101829052610d8190849063095ea7b360e01b90606401610d4a565b6000611530826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119ef9092919063ffffffff16565b805190915015610d81578080602001905181019061154e9190612fc6565b610d815760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161036e565b60606002835110156116015760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f504154480000604482015260640161036e565b82516001600160401b0381111561161a5761161a611f29565b604051908082528060200260200182016040528015611643578160200160208202803683370190505b509050838160008151811061165a5761165a6124ae565b60200260200101818152505060005b600184516116779190612eb9565b811015611730576000806116cb88878581518110611697576116976124ae565b6020026020010151888660016116ad9190612fae565b815181106116bd576116bd6124ae565b602002602001015188611a06565b915091506116f38484815181106116e4576116e46124ae565b60200260200101518383611ad2565b846116ff856001612fae565b8151811061170f5761170f6124ae565b6020026020010181815250505050808061172890612666565b915050611669565b50949350505050565b60008060006117488686611bf1565b6040516001600160601b0319606084811b8216602084015283901b1660348201529193509150879060480160405160208183030381529060405280519060200120856040516020016117ca939291906001600160f81b0319815260609390931b6001600160601b03191660018401526015830191909152603582015260550190565b60408051601f198184030181529190528051602090910120979650505050505050565b60005b600183516117fe9190612eb9565b811015610dbe5760008084838151811061181a5761181a6124ae565b6020026020010151858460016118309190612fae565b81518110611840576118406124ae565b60200260200101519150915060006118588383611bf1565b509050600087611869866001612fae565b81518110611879576118796124ae565b60200260200101519050600080836001600160a01b0316866001600160a01b0316146118a7578260006118ab565b6000835b91509150600060028a516118bf9190612eb9565b88106118cb57886118f8565b6000546118f8906001600160a01b0316878c6118e88c6002612fae565b81518110610ebd57610ebd6124ae565b905061191b60008054906101000a90046001600160a01b03168888600154611739565b6001600160a01b031663022c0d9f84848460006040519080825280601f01601f191660200182016040528015611958576020820181803683370190505b506040518563ffffffff1660e01b81526004016119789493929190612fe3565b600060405180830381600087803b15801561199257600080fd5b505af11580156119a6573d6000803e3d6000fd5b505050505050505050505080806119bc90612666565b9150506117f0565b60006127106119d58361270b613010565b6119df919061302f565b6119e99083612eb9565b92915050565b60606119fe8484600085611ce8565b949350505050565b6000806000611a158686611bf1565b509050600080611a2789898989611739565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190613068565b506001600160701b031691506001600160701b03169150826001600160a01b0316886001600160a01b031614611abf578082611ac2565b81815b909a909950975050505050505050565b6000808411611b375760405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201526a1394155517d05353d5539560aa1b606482015260840161036e565b600083118015611b475750600082115b611ba45760405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c604482015267495155494449545960c01b606482015260840161036e565b6000611bb2856103e5611db8565b90506000611bc08285611db8565b90506000611bda83611bd4886103e8611db8565b90611e1f565b9050611be6818361302f565b979650505050505050565b600080826001600160a01b0316846001600160a01b031603611c635760405162461bcd60e51b815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f41444452604482015264455353455360d81b606482015260840161036e565b826001600160a01b0316846001600160a01b031610611c83578284611c86565b83835b90925090506001600160a01b038216611ce15760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f414444524553530000604482015260640161036e565b9250929050565b606082471015611d495760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161036e565b600080866001600160a01b03168587604051611d6591906130b8565b60006040518083038185875af1925050503d8060008114611da2576040519150601f19603f3d011682016040523d82523d6000602084013e611da7565b606091505b5091509150611be687838387611e74565b6000811580611ddc57508282611dce8183613010565b9250611dda908361302f565b145b6119e95760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015260640161036e565b600082611e2c8382612fae565b91508110156119e95760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015260640161036e565b60608315611ee3578251600003611edc576001600160a01b0385163b611edc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161036e565b50816119fe565b6119fe8383815115611ef85781518083602001fd5b8060405162461bcd60e51b815260040161036e91906130d4565b803561ffff81168114611f2457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715611f6157611f61611f29565b60405290565b604051606081016001600160401b0381118282101715611f6157611f61611f29565b60405161016081016001600160401b0381118282101715611f6157611f61611f29565b604051601f8201601f191681016001600160401b0381118282101715611fd457611fd4611f29565b604052919050565b60006001600160401b03821115611ff557611ff5611f29565b50601f01601f191660200190565b600082601f83011261201457600080fd5b813561202761202282611fdc565b611fac565b81815284602083860101111561203c57600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b038116811461206e57600080fd5b50565b8035611f2481612059565b60008060008060008060c0878903121561209557600080fd5b61209e87611f12565b955060208701356001600160401b03808211156120ba57600080fd5b6120c68a838b01612003565b965060408901359550606089013591506120df82612059565b9093506080880135925060a088013590808211156120fc57600080fd5b5061210989828a01612003565b9150509295509295509295565b60008083601f84011261212857600080fd5b5081356001600160401b0381111561213f57600080fd5b6020830191508360208260051b8501011115611ce157600080fd5b6000806000806040858703121561217057600080fd5b84356001600160401b038082111561218757600080fd5b61219388838901612116565b909650945060208701359150808211156121ac57600080fd5b506121b987828801612116565b95989497509550505050565b60006001600160401b038211156121de576121de611f29565b5060051b60200190565b60ff8116811461206e57600080fd5b60005b838110156122125781810151838201526020016121fa565b83811115610dbe5750506000910152565b600082601f83011261223457600080fd5b81516020612244612022836121c5565b82815260059290921b8401810191818101908684111561226357600080fd5b8286015b848110156122de5780516001600160401b038111156122865760008081fd5b8701603f810189136122985760008081fd5b8481015160406122aa61202283611fdc565b8281528b828486010111156122bf5760008081fd5b6122ce838983018487016121f7565b8652505050918301918301612267565b509695505050505050565b6000806000606084860312156122fe57600080fd5b835161230981612059565b809350506020808501516001600160401b038082111561232857600080fd5b818701915087601f83011261233c57600080fd5b815161234a612022826121c5565b81815260059190911b8301840190848101908a83111561236957600080fd5b938501935b82851015612390578451612381816121e8565b8252938501939085019061236e565b60408a015190975094505050808311156123a957600080fd5b50506123b786828701612223565b9150509250925092565b600081518084526020808501945080840160005b838110156123f457815160ff16875295820195908201906001016123d5565b509495945050505050565b600081518084526124178160208601602086016121f7565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b858110156124735782840389526124618483516123ff565b98850198935090840190600101612449565b5091979650505050505050565b60408152600061249360408301856123c1565b82810360208401526124a5818561242b565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156124d657600080fd5b81356124e1816121e8565b9392505050565b6000808335601e198436030181126124ff57600080fd5b8301803591506001600160401b0382111561251957600080fd5b602001915036819003821315611ce157600080fd5b600082601f83011261253f57600080fd5b8135602061254f612022836121c5565b82815260059290921b8401810191818101908684111561256e57600080fd5b8286015b848110156122de57803561258581612059565b8352918301918301612572565b600082601f8301126125a357600080fd5b813560206125b3612022836121c5565b82815260059290921b840181019181810190868411156125d257600080fd5b8286015b848110156122de57803583529183019183016125d6565b6000806040838503121561260057600080fd5b82356001600160401b038082111561261757600080fd5b6126238683870161252e565b9350602085013591508082111561263957600080fd5b5061264685828601612592565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b60006001820161267857612678612650565b5060010190565b60006020828403121561269157600080fd5b5035919050565b801515811461206e57600080fd5b600060208083850312156126b957600080fd5b82356001600160401b03808211156126d057600080fd5b818501915085601f8301126126e457600080fd5b81356126f2612022826121c5565b81815260059190911b8301840190848101908883111561271157600080fd5b8585015b838110156127a65780358581111561272c57600080fd5b86016080818c03601f190112156127435760008081fd5b61274b611f3f565b8882013581526040808301358a8301526060808401358981111561276f5760008081fd5b61277d8f8d8388010161252e565b83850152506080840135935061279284612698565b820192909252845250918601918601612715565b5098975050505050505050565b600080604083850312156127c657600080fd5b82356127d181612059565b946020939093013593505050565b6000602082840312156127f157600080fd5b5051919050565b6000602080838503121561280b57600080fd5b82356001600160401b0381111561282157600080fd5b8301601f8101851361283257600080fd5b8035612840612022826121c5565b8181526060918202830184019184820191908884111561285f57600080fd5b938501935b838510156128bb5780858a03121561287c5760008081fd5b612884611f67565b853561288f81612059565b81528587013561289e81612059565b818801526040868101359082015283529384019391850191612864565b50979650505050505050565b600082601f8301126128d857600080fd5b813560206128e8612022836121c5565b82815260059290921b8401810191818101908684111561290757600080fd5b8286015b848110156122de57803561291e816121e8565b835291830191830161290b565b600082601f83011261293c57600080fd5b8135602061294c612022836121c5565b82815260059290921b8401810191818101908684111561296b57600080fd5b8286015b848110156122de5780356001600160401b0381111561298e5760008081fd5b61299c8986838b0101612003565b84525091830191830161296f565b60008060008385036101a08112156129c157600080fd5b610160808212156129d157600080fd5b6129d9611f89565b91506129e486611f12565b82526129f260208701612071565b602083015260408601356040830152606086013560608301526080860135608083015260a086013560a083015260c086013560c0830152612a3560e08701612071565b60e0830152610100612a48818801612071565b90830152610120868101359083015261014080870135908301529093508401356001600160401b0380821115612a7d57600080fd5b612a89878388016128c7565b9350610180860135915080821115612aa057600080fd5b506123b78682870161292b565b60006020808385031215612ac057600080fd5b82356001600160401b0380821115612ad757600080fd5b818501915085601f830112612aeb57600080fd5b8135612af9612022826121c5565b81815260059190911b83018401908481019088831115612b1857600080fd5b8585015b838110156127a657803585811115612b3357600080fd5b86016080818c03601f19011215612b4a5760008081fd5b612b52611f3f565b8882013581526040808301358a83015260608084013589811115612b765760008081fd5b612b848f8d8388010161252e565b928401929092526080939093013592820192909252845250918601918601612b1c565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015612bf75784516001600160a01b031683529383019391830191600101612bd2565b50506001600160a01b03969096166060850152505050608001529392505050565b60006020808385031215612c2b57600080fd5b82516001600160401b03811115612c4157600080fd5b8301601f81018513612c5257600080fd5b8051612c60612022826121c5565b81815260059190911b82018301908381019087831115612c7f57600080fd5b928401925b82841015611be657835182529284019290840190612c84565b60006020808385031215612cb057600080fd5b82356001600160401b0380821115612cc757600080fd5b818501915085601f830112612cdb57600080fd5b8135612ce9612022826121c5565b81815260059190911b83018401908481019088831115612d0857600080fd5b8585015b838110156127a657803585811115612d2357600080fd5b86016080818c03601f19011215612d3957600080fd5b612d41611f3f565b8882013581526040808301358a830152606083013588811115612d645760008081fd5b612d728e8c83870101612592565b8284015250608083013588811115612d8a5760008081fd5b8084019350508c603f840112612da05760008081fd5b89830135612db0612022826121c5565b81815260059190911b84018201908b8101908f831115612dd05760008081fd5b948301945b82861015612dfa5785359350612dea84612059565b838252948c0194908c0190612dd5565b6060850152505050845250918601918601612d0c565b600060c082018883526020888185015260c0604085015281885180845260e086019150828a01935060005b81811015612e5757845183529383019391830191600101612e3b565b50508481036060860152875180825290820192508188019060005b81811015612e975782516001600160a01b031685529383019391830191600101612e72565b505050506001600160a01b039490941660808301525060a00152949350505050565b600082821015612ecb57612ecb612650565b500390565b6001600160a01b0384168152606060208201819052600090612ef4908301856123c1565b8281036040840152612f06818561242b565b9695505050505050565b600061012061ffff8c1683528a602084015289604084015260018060a01b03891660608401528760808401528660a08401528060c084015285518184015250602085015161014083015260408501516060610160840152612f756101808401826123ff565b905082810360e0840152612f8981866123ff565b9050828103610100840152612f9e81856123ff565b9c9b505050505050505050505050565b60008219821115612fc157612fc1612650565b500190565b600060208284031215612fd857600080fd5b81516124e181612698565b84815283602082015260018060a01b0383166040820152608060608201526000612f0660808301846123ff565b600081600019048311821515161561302a5761302a612650565b500290565b60008261304c57634e487b7160e01b600052601260045260246000fd5b500490565b80516001600160701b0381168114611f2457600080fd5b60008060006060848603121561307d57600080fd5b61308684613051565b925061309460208501613051565b9150604084015163ffffffff811681146130ad57600080fd5b809150509250925092565b600082516130ca8184602087016121f7565b9190910192915050565b6020815260006124e160208301846123ff56fea2646970667358221220c1256af1b4725d173a6c779eddac93cbe16969f01d632c4e8bcfa6916f95d1f864736f6c634300080f0033a26469706673582212202060247dda3888355e036d0dd7b5b60119c4a3bf003f34d02af41f6523faef3f64736f6c634300080f0033",
    "sourceMap": "204:2019:81:-:0;;;1572:26:10;;;-1:-1:-1;;170:28:11;;;;;204:2019:81;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "204:2019:81:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;295:589;;;:::i;:::-;;890:1331;;;:::i;321:38:11:-;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:83;;;171:51;;159:2;144:18;321:38:11;;;;;;;;1819:584:10;;;:::i;:::-;;;398:14:83;;391:22;373:41;;361:2;346:18;1819:584:10;233:187:83;170:28:11;;;;;;;;;;;;1572:26:10;;;;;;;;;295:589:81;341:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;329:9:81;:30;;-1:-1:-1;;;;;;329:30:81;-1:-1:-1;;;;;329:30:81;;;;;;;;;381:436;;402:42;;464;;526;;329:30;617:42;;679:66;;773:42;;381:436;;;:::i;:::-;-1:-1:-1;;;;;837:15:83;;;819:34;;889:15;;;884:2;869:18;;862:43;941:15;;;936:2;921:18;;914:43;993:15;;;988:2;973:18;;966:43;1046:15;;1040:3;1025:19;;1018:44;799:3;1078:19;;1071:35;1143:15;;;1137:3;1122:19;;1115:44;768:3;753:19;381:436:81;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;369:9:81;:448;;-1:-1:-1;;;;;;369:448:81;-1:-1:-1;;;;;369:448:81;;;;;;;;;;295:589::o;890:1331::-;948:14;;;960:1;948:14;;;;;;;;;925:20;;948:14;;;;;;;;-1:-1:-1;;994:14:81;;;1006:1;994:14;;;;;;;;;925:37;;-1:-1:-1;972:19:81;;994:14;-1:-1:-1;994:14:81;;;;;;;;;;;;;;;;;;;;972:36;;1030:1;1019:5;1025:1;1019:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;;;;;;;1052:2;1041:5;1047:1;1041:8;;;;;;;;:::i;:::-;;;;;;:13;;;;;;;;;;;1075:2;1064:5;1070:1;1064:8;;;;;;;;:::i;:::-;:13;;;;;:8;;;;;;;;;;:13;1111:15;;;1124:1;1111:15;;;;;;;;1088:20;;1111:15;;1124:1;;1111:15;;;;;;;;;-1:-1:-1;1111:15:81;1088:38;;1153:42;1136:4;1141:1;1136:7;;;;;;;;:::i;:::-;;;;;;:60;-1:-1:-1;;;;;1136:60:81;;;-1:-1:-1;;;;;1136:60:81;;;;;1223:42;1206:4;1211:1;1206:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1206:60:81;;;;:7;;;;;;;;;;;:60;1305:16;;;1319:1;1305:16;;;;;;;;;1277:25;;1305:16;;;;;;;;;;;;-1:-1:-1;1305:16:81;1277:44;;1345:2;1331:8;1340:1;1331:11;;;;;;;;:::i;:::-;;;;;;;;;;:16;1406:38;;;1442:1;1406:38;;;;;;;;;1358:45;;1406:38;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1406:38:81;;;;;;;;;;;;;;;;1358:86;;1466:179;;;;;;;;1520:8;1466:179;;;;1565:4;1466:179;;;;1597:8;1466:179;;;;1630:4;1466:179;;;1454:6;1461:1;1454:9;;;;;;;;:::i;:::-;;;;;;;;;;:191;1711:36;;;1745:1;1711:36;;;;;;;;;1656:52;;1711:36;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;1711:36:81;;-1:-1:-1;;1711:36:81;;;;;;;;;;-1:-1:-1;1778:250:81;;;;;;;;1835:42;1778:250;;;1910:4;1778:250;;;;2006:9;;1937:80;;-1:-1:-1;;;1937:80:81;;-1:-1:-1;;;;;2006:9:81;;;1937:80;;;171:51:83;1656:91:81;;-1:-1:-1;1778:250:81;;;;;;1937:60;;144:18:83;;1937:80:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1778:250;;;1757:15;1773:1;1757:18;;;;;;;;:::i;:::-;;;;;;:271;;;;2060:8;2049:20;;;;;;;2033:18:83;2021:31;;;;2003:50;;1991:2;1976:18;;1831:228;2049:20:81;;;;;;;;;;;;;2039:4;2044:1;2039:7;;;;;;;;:::i;:::-;;;;;;:30;;;;2100:6;2089:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;2079:4;2084:1;2079:7;;;;;;;;:::i;:::-;;;;;;:28;;;;2138:15;2127:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;2117:4;2122:1;2117:7;;;;;;;;:::i;:::-;;;;;;;;;;:37;2165:9;;:49;;-1:-1:-1;;;2165:49:81;;-1:-1:-1;;;;;2165:9:81;;;;:19;;2192:8;;2165:49;;2202:5;;2209:4;;2165:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:1306;;;;;;890:1331::o;1819:584:10:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:10;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;7253:51:83;;;-1:-1:-1;;;7320:18:83;;;7313:34;2196:43:10;;;;;;;;;7226:18:83;;;2196:43:10;;;-1:-1:-1;;1671:64:10;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:10;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:10:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;1302:127:83:-;1363:10;1358:3;1354:20;1351:1;1344:31;1394:4;1391:1;1384:15;1418:4;1415:1;1408:15;1642:184;1712:6;1765:2;1753:9;1744:7;1740:23;1736:32;1733:52;;;1781:1;1778;1771:12;1733:52;-1:-1:-1;1804:16:83;;1642:184;-1:-1:-1;1642:184:83:o;2064:469::-;2125:3;2163:5;2157:12;2190:6;2185:3;2178:19;2216:4;2245:2;2240:3;2236:12;2229:19;;2282:2;2275:5;2271:14;2303:1;2313:195;2327:6;2324:1;2321:13;2313:195;;;2392:13;;-1:-1:-1;;;;;2388:39:83;2376:52;;2448:12;;;;2483:15;;;;2424:1;2342:9;2313:195;;;-1:-1:-1;2524:3:83;;2064:469;-1:-1:-1;;;;;2064:469:83:o;2538:1804::-;2756:4;2785:2;2825;2814:9;2810:18;2855:2;2844:9;2837:21;2878:6;2913;2907:13;2944:6;2936;2929:22;2970:2;2960:12;;3003:2;2992:9;2988:18;2981:25;;3065:2;3055:6;3052:1;3048:14;3037:9;3033:30;3029:39;3103:2;3095:6;3091:15;3124:1;3145;3155:1158;3171:6;3166:3;3163:15;3155:1158;;;3240:22;;;-1:-1:-1;;3236:36:83;3224:49;;3296:13;;3406:9;;3391:25;;3459:11;;;3453:18;3436:15;;;3429:43;3511:11;;;3505:18;3332:4;3543:15;;;3536:27;;;3624:19;;3363:15;;;3656:24;;;3714:3;3702:16;;;3747:21;;;3792:1;;3806:209;3822:8;3817:3;3814:17;3806:209;;;3899:15;;3885:30;;3941:14;;;;3984:17;;;;3850:1;3841:11;;;;;3806:209;;;3810:3;;;4038:4;4091:2;4087;4083:11;4077:18;4055:40;;4143:6;4136:5;4132:18;4127:2;4119:6;4115:15;4108:43;;4174:59;4227:5;4211:14;4174:59;:::i;:::-;4291:12;;;;4164:69;-1:-1:-1;;;4256:15:83;;;;3197:1;3188:11;3155:1158;;;-1:-1:-1;4330:6:83;;2538:1804;-1:-1:-1;;;;;;;;;2538:1804:83:o;4347:925::-;4590:2;4642:21;;;4712:13;;4615:18;;;4734:22;;;4561:4;;4590:2;4775;;4793:18;;;;4834:15;;;4561:4;4877:369;4891:6;4888:1;4885:13;4877:369;;;4950:13;;5034:9;;-1:-1:-1;;;;;5030:18:83;;;5018:31;;5093:11;;;5087:18;5083:27;5069:12;;;5062:49;5151:11;;5145:18;5131:12;;;5124:40;5193:4;5184:14;;;;5221:15;;;;5003:1;4906:9;4877:369;;;-1:-1:-1;5263:3:83;;4347:925;-1:-1:-1;;;;;;;4347:925:83:o;5277:258::-;5349:1;5359:113;5373:6;5370:1;5367:13;5359:113;;;5449:11;;;5443:18;5430:11;;;5423:39;5395:2;5388:10;5359:113;;;5490:6;5487:1;5484:13;5481:48;;;5525:1;5516:6;5511:3;5507:16;5500:27;5481:48;;5277:258;;;:::o;5540:1534::-;5822:2;5834:21;;;5904:13;;5807:18;;;5926:22;;;5774:4;;6001;;5979:2;5964:18;;;6028:15;;;5774:4;6071:180;6085:6;6082:1;6079:13;6071:180;;;6150:13;;6165:4;6146:24;6134:37;;6191:12;;;;6226:15;;;;6107:1;6100:9;6071:180;;;-1:-1:-1;;;6287:19:83;;;6267:18;;;6260:47;6357:13;;6379:21;;;6418:12;;;;6470:1;6466:16;;;6457:26;;6453:35;;6513:15;;;6548:1;6558:487;6574:8;6569:3;6566:17;6558:487;;;6643:2;6639:7;6695:2;6689:3;6681:6;6677:16;6673:25;6666:5;6659:40;6728:8;6722:15;6772:2;6766:9;6803:8;6795:6;6788:24;6825:61;6877:8;6872:2;6864:6;6860:15;6855:2;6851;6847:11;6825:61;:::i;:::-;7021:14;;;;6943:2;6929:17;6925:26;;;6913:39;;;;6909:48;;;-1:-1:-1;6982:17:83;;;;6602:1;6593:11;6558:487;;;-1:-1:-1;7062:6:83;;5540:1534;-1:-1:-1;;;;;;;;;5540:1534:83:o;7358:371::-;-1:-1:-1;;;;;;7543:33:83;;7531:46;;7600:13;;7513:3;;7622:61;7600:13;7672:1;7663:11;;7656:4;7644:17;;7622:61;:::i;:::-;7703:16;;;;7721:1;7699:24;;7358:371;-1:-1:-1;;;7358:371:83:o;7734:274::-;7863:3;7901:6;7895:13;7917:53;7963:6;7958:3;7951:4;7943:6;7939:17;7917:53;:::i;:::-;7986:16;;;;;7734:274;-1:-1:-1;;7734:274:83:o;8013:277::-;8080:6;8133:2;8121:9;8112:7;8108:23;8104:32;8101:52;;;8149:1;8146;8139:12;8101:52;8181:9;8175:16;8234:5;8227:13;8220:21;8213:5;8210:32;8200:60;;8256:1;8253;8246:12;8200:60;8279:5;8013:277;-1:-1:-1;;;8013:277:83:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testLB()": "291c9831",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testLB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/AvaxSwaps.t.sol\":\"AvaxSwapsTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":3xcaliSwap/=lib/3xcaliSwap/contracts/\",\":3xcaliswap/=lib/3xcaliswap/\",\":@core/=lib/3xcaliSwap/contracts/core/\",\":@openzeppelin/=lib/3xcaliSwap/node_modules/@openzeppelin/\",\":@solmate/=lib/3xcaliSwap/node_modules/solmate/src/\",\":LayerZero/=lib/contracts/lib/LayerZero/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=lib/contracts/contracts/\",\":create3-factory/=lib/create3-factory/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":fraxlend/=lib/fraxlend/\",\":joe-v2/=lib/joe-v2/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":pancake-smart-contracts/=lib/pancake-smart-contracts/\",\":pancake/=lib/pancake-smart-contracts/\",\":solmate/=lib/solmate/\",\":spookyswap-core/=lib/spookyswap-core/contracts/\",\":spookyswap/=lib/spookyswap-core/\",\":sushiswap/=lib/sushiswap/\",\":traderjoe/=lib/joe-v2/src/\",\":uniswap/v3-core/=lib/v3-core/\",\":uniswap/v3-periphery/=lib/v3-periphery/\",\":utils/=lib/contracts/test/utils/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\",\":velodrome/=lib/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x9ef2fa79d3a8dc9aa56f4ff3d496aa1de5a03b2912af074df94f771283145e94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b919cb336dac6418e64911295dc9d4137d566fb1d21fdda5b09d2046aeea36cf\",\"dweb:/ipfs/QmVnLfEqjmkqCbVzpgvZKcpL7M1JXVx5a8iT1M8EQzGyxj\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/joe-v2/src/LBErrors.sol\":{\"keccak256\":\"0xca49345b5935606cea5709362f64ed6be41379aaefc3f399e75e32aee927e1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c54ad3c6e59971afb23f243397f25b0cd376e5abfb0aea7dbb90d6fade567b0\",\"dweb:/ipfs/Qmf1ysYG1ErcfSo63mBPyYDL4yHmfkLaVXRwd98DSRs2J6\"]},\"lib/joe-v2/src/interfaces/IJoeFactory.sol\":{\"keccak256\":\"0xd1f116ee8133101c2c07112dfe871fabdcb182f9b84468765b58a5136d661ba6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://39e15e3db5f37a23410e6917d0f006390bfe48bb7e1549242e2927c498ee9c70\",\"dweb:/ipfs/QmapjmXv1ouKPGL7vvLYaaFakxZ3YJb55LdNe2nyN8RZaz\"]},\"lib/joe-v2/src/interfaces/IJoeRouter01.sol\":{\"keccak256\":\"0xf2dcb5d05cd907f8f4f9feabe9fbd58609549228232e148e2d419e1ae96c1f70\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f1129c33ad78d450269ea8ac0f7a8a4757b58dea587c590d0ab4fa507c933257\",\"dweb:/ipfs/QmcQzteigiv3CCgvpnHwxUMuXgUHCGMi3rwHPs7zYBj5pL\"]},\"lib/joe-v2/src/interfaces/IJoeRouter02.sol\":{\"keccak256\":\"0xc11017ab1ac3cb629e8e0f31450ef33745b9554d00034d87488edc9c01e8fefb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://770ecc9bff87a999d28f83eb95e6d97ae0c426234721edfb3e86852eeb35b125\",\"dweb:/ipfs/QmTSV86U5jTUifdK1KXAk3n1xeStbE7QLepAUHfJntJcCC\"]},\"lib/joe-v2/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0x46243cde713b1e026ec6dd77638cfbe20032f1dc21f82478da2abfaa162a30c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5c2dc5da4d91723e2a5a5bd9a48a85baa176b23c227a8b09157e22e1b9ec1e4\",\"dweb:/ipfs/QmcM4XRxBV57PCXtVdUpN8HtQbV797YHbcRmhQyaftJ5Zm\"]},\"lib/joe-v2/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0xef5b80d7079c596e2beec22d4a9c416e90a5a65246c2300abb3d5fc3ca24ef92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b3e60ef1abba0231870c9c44db0e80e599a8f3b52324f5635fc623067dda931\",\"dweb:/ipfs/QmTXVh2ScSLp3ZAG4yJrKUVwH44DQX1Gocgh8F1LoBGF76\"]},\"lib/joe-v2/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xaadfbc5ee6e3d6888f99fa4f3de19d01e05f633527b5a575ab1bb65d19a9790e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c75d1e7cab8bd1ee8868e28b06a2b209b20deb34b47980bddbeb63e65e9c2a\",\"dweb:/ipfs/QmSeBFpHLNXpe97Nip832fSoPp84wED1ttDqYKMupPnT2a\"]},\"lib/joe-v2/src/interfaces/ILBRouter.sol\":{\"keccak256\":\"0xc71ea4547322d3d101f4f668113992d1dfe185c481ee440d98ecf194d93a2f66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba414f175bc8df9c8a8ecd3f7fbdc6c3bb67e95c7a22047127cb4d33f2576c56\",\"dweb:/ipfs/QmfHFej5gooAfk64w8LSef4aQq8cKKMuVLLBT7FtFyUiYh\"]},\"lib/joe-v2/src/interfaces/ILBToken.sol\":{\"keccak256\":\"0x9d8eb670a464781b6604a7b33c2cda34630de72f843bfbc72ebe719cdbd8503e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5a3d21b0d8fc8fd7520bac2543eaeefe6ed022ee2c5d805e6295efa1d3b26e\",\"dweb:/ipfs/QmPxXfzGLjLEEfQz9MUmp9D8JkhXH8DB7wiWChvfj68tEN\"]},\"lib/joe-v2/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0xd6ffa5a490241627323c3b9898e067e892dc4ef2bd9d0368909036e15d4e44de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daf7fc6886c11586abe9785a0985bee88d50a962bc91d95531bffdba7bd4a6d4\",\"dweb:/ipfs/QmYSsC5VU6bcaohYbxZ265HqPfViNFUnh1STqHj31STAAk\"]},\"lib/joe-v2/src/interfaces/IWAVAX.sol\":{\"keccak256\":\"0x1f8ebff6f27034bbca9fa348f926452891b3b7093db1fb754d1c9312ef57ae61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbc0c2d30ef1db99028d2b113600ccae5875ed56b0bc828a1bbad6a2a018001d\",\"dweb:/ipfs/QmZTu9CfaK7ZhbVAgE5U6KUDa1zSKLeTejbJyqSZ1eJAu7\"]},\"lib/joe-v2/src/libraries/Constants.sol\":{\"keccak256\":\"0x98e575af75e763de6a7cd48a01eaf5289e8c6b9ef80de6fc7f571cb5b12002fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef7da2104932c56afb7b0d2cea200c8637ea1d146aba526097aaa69e467cfee\",\"dweb:/ipfs/QmUQJWNRqFzhoW9FwNvZprxoHwL2KUTUvqiHwhCTREtq2B\"]},\"lib/joe-v2/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x322e5d1d225dc2398083d1cd64ba30a6eea785a9e3ed9d6e8aaf07d61e43c7c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cff2c4aceeaf0db44ef579387e44c0e5ea572f3fb9d70e75238026c4c5771f8a\",\"dweb:/ipfs/QmVbFrxwJhGFZqUszkCY1GocF985ddUx6oW3UhwFzetKaP\"]},\"lib/joe-v2/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x77ead8b9b70bc9c7b9ad84558fdd33dc02b23e04968c0dcbea103775540ca19f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b21773b34387a4d9f8c8809558422dbed2f57e608333af4976d7fde9365ab75\",\"dweb:/ipfs/QmepKEKHiXKjwwrdE7k8ESR22zBYujtDzAcCQKDiVpbnmJ\"]},\"lib/joe-v2/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x27eef85c25e2ade4742b1b69926cad838261637a7202ac8b8fa40e990aa2223f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://614f875588e48380d48848b8fc5a048c13470a6f06af13f8eee4ccf3bcacbe32\",\"dweb:/ipfs/QmbZ8qKgqAnQuZZJpAb9XPr1pr5aFD1qS5Cu4vcojPrDQq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71\",\"dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"lib/sushiswap/protocols/sushiswap/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"lib/sushiswap/protocols/sushixswap/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x8992c26baf30eb4a743dbe6d2a9cb27625fb783347b06283ce9664ffad83c411\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69a3031548eee3af0fae76430ae6d7e0d4b241cf17e707142e2bb1f4890c7efb\",\"dweb:/ipfs/QmPeQqoSy8y69d2NPpKy5re1ncRo4xfc7sSCSbWu3sLxLo\"]},\"lib/sushiswap/protocols/sushixswap/contracts/libraries/UniswapV2Library.sol\":{\"keccak256\":\"0xc16c20b687bc7ad172efe48e41e2a07b3853b2be83d4215bc57a7097b0d7bbf6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fab6e7f7a202295ff3e9a99d9ee3a1a6ab66935b942da17e58420fba35451a50\",\"dweb:/ipfs/QmVzxsizknGXYAkXA34d5zdLJFvcQuv6xkrhE3rvkhsw5s\"]},\"src/CrossChainSwaps/Chains/Avax/AvaxSwaps.sol\":{\"keccak256\":\"0x5d07d9ed9efc36d1128e8df21501d30140f93248bfbfa8f53f96b9df4cc307ee\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://209cb9261a7ce9958a2af973532cb3371f0c6e604ade878bb2c0d489ad6f2e02\",\"dweb:/ipfs/QmWKtoqAihDjvyJsnstREEEyf2zQCZr6wLsZJvALZMd5e4\"]},\"src/CrossChainSwaps/Chains/Avax/StargateAvax.sol\":{\"keccak256\":\"0x57428984341283646bda25cb24f2891438eb62f0b07ff67309302c8237c89a00\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://f9f140e6c14df747df4f17fcfec3695bcbd17755ab4bf6b1e2615664736d835c\",\"dweb:/ipfs/QmQ8hKFg4KdzA65bYW43MMug1Ngtf2eAhRu8xm3WLN3rGG\"]},\"src/CrossChainSwaps/Chains/Avax/interfaces/IAvaxSwaps.sol\":{\"keccak256\":\"0x59e575810643ec5b152a0aacfcd6a9858b2ee8ca4b0a874468768a10b43dfbef\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://d04facd2e0dfc8a9385b3fd43734d04a1bccde305a67ce3f2837f0461f86c3c6\",\"dweb:/ipfs/QmSxxprxiBoRFr8m91xcLuTvJ795onWgUjW4vJDje9NYfu\"]},\"src/CrossChainSwaps/FeeCollector.sol\":{\"keccak256\":\"0x790ccada92ffa1d41edb98f7e14d230a89cbe008ee83a646b79dfe144499fc09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67baf22b62532a235cd561484987b09e64288305321892b44ab6e1025130a0e8\",\"dweb:/ipfs/QmbQeK3Muj4nLfXU2o9d2w4CqrePVDmPZixfYQAkBmBFCz\"]},\"src/CrossChainSwaps/adapters/SushiAdapter.sol\":{\"keccak256\":\"0x9809e8b149b301cfb0c691b1fc1118122deeeb2f6ef7c722013cf3ac164cbc37\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9c272f21df541166a5700210369167c05765cb1888edb8abb4b3fba32dc5b8ac\",\"dweb:/ipfs/QmPfdj25GwxugVKo98oqtvdHQVLe8JZaLf52GniNkBep36\"]},\"src/CrossChainSwaps/interfaces/IStargateReceiver.sol\":{\"keccak256\":\"0xa8ef54c6c8c01507c21d037817a1f5ec5e7ec74cc39fd1e6ba49e0adb22ca0e3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ad9a6533eb17ab3f8b365393a72a1084347ba03b2b17f76d21f92f209a5dc9b\",\"dweb:/ipfs/QmZK2kLZqFjCssLfU2JGaccwJJodGEt4zJxHsYit1cjVRr\"]},\"src/CrossChainSwaps/interfaces/IStargateRouter.sol\":{\"keccak256\":\"0x1a929770aaed6b2d344c3f699987c17cabb93321af11899b5aa346a84ed7e84e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4986951a279c0bbc8f6ad28c868a90fce927db1628775504c31b3e2140ed3ed4\",\"dweb:/ipfs/QmZBrorQqZXSW6LhiKmvaMgpf8fQzx417PHGUdqixkn8g8\"]},\"src/CrossChainSwaps/interfaces/IWETH9.sol\":{\"keccak256\":\"0x5d30362bd8c2e3ab35623606face693b512cee4b7c3aa70c9a37b6cfbef22811\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d8c95373b6783e7088dfb0e921ca88edd8dcf6364f1974785a029eb8f57cc39\",\"dweb:/ipfs/QmPjRatu7Tz4tCWA78BnyXHcXMnibKiUJsj4dC7Dc4NaHt\"]},\"test/AvaxSwaps.t.sol\":{\"keccak256\":\"0x6d906db632dd041efdf83378bd19281da76e3342042ed0814d18df63f00e1466\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://77e1afe3d3e2902acb28e12c336b7b70dbde19a1ad50b26855f530194ea52ed3\",\"dweb:/ipfs/QmYYqYn45WLNSKHEcLD8s1NBCtNdwGVisxbQjstxE9bWE3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testLB"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":3xcaliSwap/=lib/3xcaliSwap/contracts/",
        ":3xcaliswap/=lib/3xcaliswap/",
        ":@core/=lib/3xcaliSwap/contracts/core/",
        ":@openzeppelin/=lib/3xcaliSwap/node_modules/@openzeppelin/",
        ":@solmate/=lib/3xcaliSwap/node_modules/solmate/src/",
        ":LayerZero/=lib/contracts/lib/LayerZero/contracts/",
        ":chainlink/=lib/chainlink/",
        ":contracts/=lib/contracts/contracts/",
        ":create3-factory/=lib/create3-factory/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fraxlend/=lib/fraxlend/",
        ":joe-v2/=lib/joe-v2/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":pancake-smart-contracts/=lib/pancake-smart-contracts/",
        ":pancake/=lib/pancake-smart-contracts/",
        ":solmate/=lib/solmate/",
        ":spookyswap-core/=lib/spookyswap-core/contracts/",
        ":spookyswap/=lib/spookyswap-core/",
        ":sushiswap/=lib/sushiswap/",
        ":traderjoe/=lib/joe-v2/src/",
        ":uniswap/v3-core/=lib/v3-core/",
        ":uniswap/v3-periphery/=lib/v3-periphery/",
        ":utils/=lib/contracts/test/utils/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/",
        ":velodrome/=lib/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/AvaxSwaps.t.sol": "AvaxSwapsTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x9ef2fa79d3a8dc9aa56f4ff3d496aa1de5a03b2912af074df94f771283145e94",
        "urls": [
          "bzz-raw://b919cb336dac6418e64911295dc9d4137d566fb1d21fdda5b09d2046aeea36cf",
          "dweb:/ipfs/QmVnLfEqjmkqCbVzpgvZKcpL7M1JXVx5a8iT1M8EQzGyxj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/joe-v2/src/LBErrors.sol": {
        "keccak256": "0xca49345b5935606cea5709362f64ed6be41379aaefc3f399e75e32aee927e1fb",
        "urls": [
          "bzz-raw://1c54ad3c6e59971afb23f243397f25b0cd376e5abfb0aea7dbb90d6fade567b0",
          "dweb:/ipfs/Qmf1ysYG1ErcfSo63mBPyYDL4yHmfkLaVXRwd98DSRs2J6"
        ],
        "license": "MIT"
      },
      "lib/joe-v2/src/interfaces/IJoeFactory.sol": {
        "keccak256": "0xd1f116ee8133101c2c07112dfe871fabdcb182f9b84468765b58a5136d661ba6",
        "urls": [
          "bzz-raw://39e15e3db5f37a23410e6917d0f006390bfe48bb7e1549242e2927c498ee9c70",
          "dweb:/ipfs/QmapjmXv1ouKPGL7vvLYaaFakxZ3YJb55LdNe2nyN8RZaz"
        ],
        "license": "GPL-3.0"
      },
      "lib/joe-v2/src/interfaces/IJoeRouter01.sol": {
        "keccak256": "0xf2dcb5d05cd907f8f4f9feabe9fbd58609549228232e148e2d419e1ae96c1f70",
        "urls": [
          "bzz-raw://f1129c33ad78d450269ea8ac0f7a8a4757b58dea587c590d0ab4fa507c933257",
          "dweb:/ipfs/QmcQzteigiv3CCgvpnHwxUMuXgUHCGMi3rwHPs7zYBj5pL"
        ],
        "license": "GPL-3.0"
      },
      "lib/joe-v2/src/interfaces/IJoeRouter02.sol": {
        "keccak256": "0xc11017ab1ac3cb629e8e0f31450ef33745b9554d00034d87488edc9c01e8fefb",
        "urls": [
          "bzz-raw://770ecc9bff87a999d28f83eb95e6d97ae0c426234721edfb3e86852eeb35b125",
          "dweb:/ipfs/QmTSV86U5jTUifdK1KXAk3n1xeStbE7QLepAUHfJntJcCC"
        ],
        "license": "GPL-3.0"
      },
      "lib/joe-v2/src/interfaces/ILBFactory.sol": {
        "keccak256": "0x46243cde713b1e026ec6dd77638cfbe20032f1dc21f82478da2abfaa162a30c1",
        "urls": [
          "bzz-raw://f5c2dc5da4d91723e2a5a5bd9a48a85baa176b23c227a8b09157e22e1b9ec1e4",
          "dweb:/ipfs/QmcM4XRxBV57PCXtVdUpN8HtQbV797YHbcRmhQyaftJ5Zm"
        ],
        "license": "MIT"
      },
      "lib/joe-v2/src/interfaces/ILBFlashLoanCallback.sol": {
        "keccak256": "0xef5b80d7079c596e2beec22d4a9c416e90a5a65246c2300abb3d5fc3ca24ef92",
        "urls": [
          "bzz-raw://4b3e60ef1abba0231870c9c44db0e80e599a8f3b52324f5635fc623067dda931",
          "dweb:/ipfs/QmTXVh2ScSLp3ZAG4yJrKUVwH44DQX1Gocgh8F1LoBGF76"
        ],
        "license": "MIT"
      },
      "lib/joe-v2/src/interfaces/ILBPair.sol": {
        "keccak256": "0xaadfbc5ee6e3d6888f99fa4f3de19d01e05f633527b5a575ab1bb65d19a9790e",
        "urls": [
          "bzz-raw://12c75d1e7cab8bd1ee8868e28b06a2b209b20deb34b47980bddbeb63e65e9c2a",
          "dweb:/ipfs/QmSeBFpHLNXpe97Nip832fSoPp84wED1ttDqYKMupPnT2a"
        ],
        "license": "MIT"
      },
      "lib/joe-v2/src/interfaces/ILBRouter.sol": {
        "keccak256": "0xc71ea4547322d3d101f4f668113992d1dfe185c481ee440d98ecf194d93a2f66",
        "urls": [
          "bzz-raw://ba414f175bc8df9c8a8ecd3f7fbdc6c3bb67e95c7a22047127cb4d33f2576c56",
          "dweb:/ipfs/QmfHFej5gooAfk64w8LSef4aQq8cKKMuVLLBT7FtFyUiYh"
        ],
        "license": "MIT"
      },
      "lib/joe-v2/src/interfaces/ILBToken.sol": {
        "keccak256": "0x9d8eb670a464781b6604a7b33c2cda34630de72f843bfbc72ebe719cdbd8503e",
        "urls": [
          "bzz-raw://2c5a3d21b0d8fc8fd7520bac2543eaeefe6ed022ee2c5d805e6295efa1d3b26e",
          "dweb:/ipfs/QmPxXfzGLjLEEfQz9MUmp9D8JkhXH8DB7wiWChvfj68tEN"
        ],
        "license": "MIT"
      },
      "lib/joe-v2/src/interfaces/IPendingOwnable.sol": {
        "keccak256": "0xd6ffa5a490241627323c3b9898e067e892dc4ef2bd9d0368909036e15d4e44de",
        "urls": [
          "bzz-raw://daf7fc6886c11586abe9785a0985bee88d50a962bc91d95531bffdba7bd4a6d4",
          "dweb:/ipfs/QmYSsC5VU6bcaohYbxZ265HqPfViNFUnh1STqHj31STAAk"
        ],
        "license": "MIT"
      },
      "lib/joe-v2/src/interfaces/IWAVAX.sol": {
        "keccak256": "0x1f8ebff6f27034bbca9fa348f926452891b3b7093db1fb754d1c9312ef57ae61",
        "urls": [
          "bzz-raw://bbc0c2d30ef1db99028d2b113600ccae5875ed56b0bc828a1bbad6a2a018001d",
          "dweb:/ipfs/QmZTu9CfaK7ZhbVAgE5U6KUDa1zSKLeTejbJyqSZ1eJAu7"
        ],
        "license": "MIT"
      },
      "lib/joe-v2/src/libraries/Constants.sol": {
        "keccak256": "0x98e575af75e763de6a7cd48a01eaf5289e8c6b9ef80de6fc7f571cb5b12002fc",
        "urls": [
          "bzz-raw://3ef7da2104932c56afb7b0d2cea200c8637ea1d146aba526097aaa69e467cfee",
          "dweb:/ipfs/QmUQJWNRqFzhoW9FwNvZprxoHwL2KUTUvqiHwhCTREtq2B"
        ],
        "license": "MIT"
      },
      "lib/joe-v2/src/libraries/FeeHelper.sol": {
        "keccak256": "0x322e5d1d225dc2398083d1cd64ba30a6eea785a9e3ed9d6e8aaf07d61e43c7c8",
        "urls": [
          "bzz-raw://cff2c4aceeaf0db44ef579387e44c0e5ea572f3fb9d70e75238026c4c5771f8a",
          "dweb:/ipfs/QmVbFrxwJhGFZqUszkCY1GocF985ddUx6oW3UhwFzetKaP"
        ],
        "license": "MIT"
      },
      "lib/joe-v2/src/libraries/SafeCast.sol": {
        "keccak256": "0x77ead8b9b70bc9c7b9ad84558fdd33dc02b23e04968c0dcbea103775540ca19f",
        "urls": [
          "bzz-raw://9b21773b34387a4d9f8c8809558422dbed2f57e608333af4976d7fde9365ab75",
          "dweb:/ipfs/QmepKEKHiXKjwwrdE7k8ESR22zBYujtDzAcCQKDiVpbnmJ"
        ],
        "license": "MIT"
      },
      "lib/joe-v2/src/libraries/SafeMath.sol": {
        "keccak256": "0x27eef85c25e2ade4742b1b69926cad838261637a7202ac8b8fa40e990aa2223f",
        "urls": [
          "bzz-raw://614f875588e48380d48848b8fc5a048c13470a6f06af13f8eee4ccf3bcacbe32",
          "dweb:/ipfs/QmbZ8qKgqAnQuZZJpAb9XPr1pr5aFD1qS5Cu4vcojPrDQq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749",
        "urls": [
          "bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71",
          "dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/sushiswap/protocols/sushiswap/contracts/interfaces/IUniswapV2Pair.sol": {
        "keccak256": "0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385",
        "urls": [
          "bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e",
          "dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL"
        ],
        "license": "GPL-3.0"
      },
      "lib/sushiswap/protocols/sushixswap/contracts/libraries/SafeMath.sol": {
        "keccak256": "0x8992c26baf30eb4a743dbe6d2a9cb27625fb783347b06283ce9664ffad83c411",
        "urls": [
          "bzz-raw://69a3031548eee3af0fae76430ae6d7e0d4b241cf17e707142e2bb1f4890c7efb",
          "dweb:/ipfs/QmPeQqoSy8y69d2NPpKy5re1ncRo4xfc7sSCSbWu3sLxLo"
        ],
        "license": "GPL-3.0"
      },
      "lib/sushiswap/protocols/sushixswap/contracts/libraries/UniswapV2Library.sol": {
        "keccak256": "0xc16c20b687bc7ad172efe48e41e2a07b3853b2be83d4215bc57a7097b0d7bbf6",
        "urls": [
          "bzz-raw://fab6e7f7a202295ff3e9a99d9ee3a1a6ab66935b942da17e58420fba35451a50",
          "dweb:/ipfs/QmVzxsizknGXYAkXA34d5zdLJFvcQuv6xkrhE3rvkhsw5s"
        ],
        "license": "GPL-3.0"
      },
      "src/CrossChainSwaps/Chains/Avax/AvaxSwaps.sol": {
        "keccak256": "0x5d07d9ed9efc36d1128e8df21501d30140f93248bfbfa8f53f96b9df4cc307ee",
        "urls": [
          "bzz-raw://209cb9261a7ce9958a2af973532cb3371f0c6e604ade878bb2c0d489ad6f2e02",
          "dweb:/ipfs/QmWKtoqAihDjvyJsnstREEEyf2zQCZr6wLsZJvALZMd5e4"
        ],
        "license": "ISC"
      },
      "src/CrossChainSwaps/Chains/Avax/StargateAvax.sol": {
        "keccak256": "0x57428984341283646bda25cb24f2891438eb62f0b07ff67309302c8237c89a00",
        "urls": [
          "bzz-raw://f9f140e6c14df747df4f17fcfec3695bcbd17755ab4bf6b1e2615664736d835c",
          "dweb:/ipfs/QmQ8hKFg4KdzA65bYW43MMug1Ngtf2eAhRu8xm3WLN3rGG"
        ],
        "license": "ISC"
      },
      "src/CrossChainSwaps/Chains/Avax/interfaces/IAvaxSwaps.sol": {
        "keccak256": "0x59e575810643ec5b152a0aacfcd6a9858b2ee8ca4b0a874468768a10b43dfbef",
        "urls": [
          "bzz-raw://d04facd2e0dfc8a9385b3fd43734d04a1bccde305a67ce3f2837f0461f86c3c6",
          "dweb:/ipfs/QmSxxprxiBoRFr8m91xcLuTvJ795onWgUjW4vJDje9NYfu"
        ],
        "license": "ISC"
      },
      "src/CrossChainSwaps/FeeCollector.sol": {
        "keccak256": "0x790ccada92ffa1d41edb98f7e14d230a89cbe008ee83a646b79dfe144499fc09",
        "urls": [
          "bzz-raw://67baf22b62532a235cd561484987b09e64288305321892b44ab6e1025130a0e8",
          "dweb:/ipfs/QmbQeK3Muj4nLfXU2o9d2w4CqrePVDmPZixfYQAkBmBFCz"
        ],
        "license": "MIT"
      },
      "src/CrossChainSwaps/adapters/SushiAdapter.sol": {
        "keccak256": "0x9809e8b149b301cfb0c691b1fc1118122deeeb2f6ef7c722013cf3ac164cbc37",
        "urls": [
          "bzz-raw://9c272f21df541166a5700210369167c05765cb1888edb8abb4b3fba32dc5b8ac",
          "dweb:/ipfs/QmPfdj25GwxugVKo98oqtvdHQVLe8JZaLf52GniNkBep36"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/CrossChainSwaps/interfaces/IStargateReceiver.sol": {
        "keccak256": "0xa8ef54c6c8c01507c21d037817a1f5ec5e7ec74cc39fd1e6ba49e0adb22ca0e3",
        "urls": [
          "bzz-raw://0ad9a6533eb17ab3f8b365393a72a1084347ba03b2b17f76d21f92f209a5dc9b",
          "dweb:/ipfs/QmZK2kLZqFjCssLfU2JGaccwJJodGEt4zJxHsYit1cjVRr"
        ],
        "license": "BUSL-1.1"
      },
      "src/CrossChainSwaps/interfaces/IStargateRouter.sol": {
        "keccak256": "0x1a929770aaed6b2d344c3f699987c17cabb93321af11899b5aa346a84ed7e84e",
        "urls": [
          "bzz-raw://4986951a279c0bbc8f6ad28c868a90fce927db1628775504c31b3e2140ed3ed4",
          "dweb:/ipfs/QmZBrorQqZXSW6LhiKmvaMgpf8fQzx417PHGUdqixkn8g8"
        ],
        "license": "BUSL-1.1"
      },
      "src/CrossChainSwaps/interfaces/IWETH9.sol": {
        "keccak256": "0x5d30362bd8c2e3ab35623606face693b512cee4b7c3aa70c9a37b6cfbef22811",
        "urls": [
          "bzz-raw://1d8c95373b6783e7088dfb0e921ca88edd8dcf6364f1974785a029eb8f57cc39",
          "dweb:/ipfs/QmPjRatu7Tz4tCWA78BnyXHcXMnibKiUJsj4dC7Dc4NaHt"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/AvaxSwaps.t.sol": {
        "keccak256": "0x6d906db632dd041efdf83378bd19281da76e3342042ed0814d18df63f00e1466",
        "urls": [
          "bzz-raw://77e1afe3d3e2902acb28e12c336b7b70dbde19a1ad50b26855f530194ea52ed3",
          "dweb:/ipfs/QmYYqYn45WLNSKHEcLD8s1NBCtNdwGVisxbQjstxE9bWE3"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/AvaxSwaps.t.sol",
    "id": 41116,
    "exportedSymbols": {
      "Address": [
        28291
      ],
      "AvaxSwaps": [
        32353
      ],
      "AvaxSwapsTest": [
        41115
      ],
      "DSTest": [
        2501
      ],
      "FeeCollector": [
        37486
      ],
      "IAvaxSwaps": [
        32698
      ],
      "IERC20": [
        27644
      ],
      "IERC20Permit": [
        27680
      ],
      "IJoeRouter02": [
        24942
      ],
      "ILBRouter": [
        26113
      ],
      "IStargateReceiver": [
        39320
      ],
      "IStargateRouter": [
        39440
      ],
      "IUniswapV2Pair": [
        29832
      ],
      "IWETH9": [
        39457
      ],
      "Ownable": [
        27566
      ],
      "SafeERC20": [
        27961
      ],
      "SafeMathUniswap": [
        29907
      ],
      "SafeTransferLib": [
        29194
      ],
      "Script": [
        2764
      ],
      "StargateAvax": [
        32686
      ],
      "StdStorage": [
        5792
      ],
      "SushiAdapter": [
        37736
      ],
      "Test": [
        5694
      ],
      "UniswapV2Library": [
        30393
      ],
      "Vm": [
        7799
      ],
      "console": [
        15863
      ],
      "console2": [
        23927
      ],
      "stdError": [
        5764
      ],
      "stdJson": [
        3124
      ],
      "stdMath": [
        7033
      ],
      "stdStorage": [
        6894
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2185:81",
    "nodes": [
      {
        "id": 40871,
        "nodeType": "PragmaDirective",
        "src": "39:24:81",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 40872,
        "nodeType": "ImportDirective",
        "src": "65:28:81",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41116,
        "sourceUnit": 7034,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40873,
        "nodeType": "ImportDirective",
        "src": "94:58:81",
        "nodes": [],
        "absolutePath": "src/CrossChainSwaps/Chains/Avax/AvaxSwaps.sol",
        "file": "../src/CrossChainSwaps/Chains/Avax/AvaxSwaps.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41116,
        "sourceUnit": 32354,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40874,
        "nodeType": "ImportDirective",
        "src": "153:49:81",
        "nodes": [],
        "absolutePath": "src/CrossChainSwaps/FeeCollector.sol",
        "file": "../src/CrossChainSwaps/FeeCollector.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41116,
        "sourceUnit": 37487,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 41115,
        "nodeType": "ContractDefinition",
        "src": "204:2019:81",
        "nodes": [
          {
            "id": 40879,
            "nodeType": "VariableDeclaration",
            "src": "241:19:81",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "avaxSwaps",
            "nameLocation": "251:9:81",
            "scope": 41115,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AvaxSwaps_$32353",
              "typeString": "contract AvaxSwaps"
            },
            "typeName": {
              "id": 40878,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40877,
                "name": "AvaxSwaps",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 32353,
                "src": "241:9:81"
              },
              "referencedDeclaration": 32353,
              "src": "241:9:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AvaxSwaps_$32353",
                "typeString": "contract AvaxSwaps"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 40882,
            "nodeType": "VariableDeclaration",
            "src": "266:22:81",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "collector",
            "nameLocation": "279:9:81",
            "scope": 41115,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FeeCollector_$37486",
              "typeString": "contract FeeCollector"
            },
            "typeName": {
              "id": 40881,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40880,
                "name": "FeeCollector",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 37486,
                "src": "266:12:81"
              },
              "referencedDeclaration": 37486,
              "src": "266:12:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FeeCollector_$37486",
                "typeString": "contract FeeCollector"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 40926,
            "nodeType": "FunctionDefinition",
            "src": "295:589:81",
            "nodes": [],
            "body": {
              "id": 40925,
              "nodeType": "Block",
              "src": "319:565:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40885,
                      "name": "collector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40882,
                      "src": "329:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeCollector_$37486",
                        "typeString": "contract FeeCollector"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 40888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "341:16:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FeeCollector_$37486_$",
                          "typeString": "function () returns (contract FeeCollector)"
                        },
                        "typeName": {
                          "id": 40887,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 40886,
                            "name": "FeeCollector",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 37486,
                            "src": "345:12:81"
                          },
                          "referencedDeclaration": 37486,
                          "src": "345:12:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FeeCollector_$37486",
                            "typeString": "contract FeeCollector"
                          }
                        }
                      },
                      "id": 40889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "341:18:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeCollector_$37486",
                        "typeString": "contract FeeCollector"
                      }
                    },
                    "src": "329:30:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeCollector_$37486",
                      "typeString": "contract FeeCollector"
                    }
                  },
                  "id": 40891,
                  "nodeType": "ExpressionStatement",
                  "src": "329:30:81"
                },
                {
                  "expression": {
                    "id": 40923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40892,
                      "name": "avaxSwaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40879,
                      "src": "369:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AvaxSwaps_$32353",
                        "typeString": "contract AvaxSwaps"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307842333166363641413343316537383533363346303837354131423734453237623835464436366337",
                              "id": 40897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "402:42:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 40896,
                            "name": "IWETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39457,
                            "src": "395:6:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IWETH9_$39457_$",
                              "typeString": "type(contract IWETH9)"
                            }
                          },
                          "id": 40898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "395:50:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH9_$39457",
                            "typeString": "contract IWETH9"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307836306145363136613231353545653364394136383534314261343534343836323331303933336434",
                              "id": 40901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "464:42:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x60aE616a2155Ee3d9A68541Ba4544862310933d4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 40900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "456:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40899,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "456:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "456:51:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307845334666633538336443313736353735654541374644396446324137633635463745323366344333",
                              "id": 40905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "526:42:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0xE3Ffc583dC176575eEA7FD9dF2A7c65F7E23f4C3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 40904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "518:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40903,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "518:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "518:51:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 40909,
                              "name": "collector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40882,
                              "src": "588:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FeeCollector_$37486",
                                "typeString": "contract FeeCollector"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FeeCollector_$37486",
                                "typeString": "contract FeeCollector"
                              }
                            ],
                            "id": 40908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "580:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40907,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "580:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "580:18:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307863333544414442363530313265433537393635333662443938363465443837373361426337344334",
                              "id": 40913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "617:42:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0xc35DADB65012eC5796536bD9864eD8773aBc74C4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 40912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "609:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40911,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "609:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "609:51:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307865313861333465623065303462303466376130616332396136653830373438646361393633313962343263353464363739636238323164636139306336333033",
                              "id": 40917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "679:66:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_102014581054048155219094139864799974623317407309538683430784731063489150083843_by_1",
                                "typeString": "int_const 1020...(70 digits omitted)...3843"
                              },
                              "value": "0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_102014581054048155219094139864799974623317407309538683430784731063489150083843_by_1",
                                "typeString": "int_const 1020...(70 digits omitted)...3843"
                              }
                            ],
                            "id": 40916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "671:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 40915,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "671:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "671:75:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307834354130314534653034463134663741346136373032633734313837633546363232323033336364",
                              "id": 40920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "773:42:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x45A01E4e04F14f7A4a6702c74187c5F6222033cd"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 40919,
                            "name": "IStargateRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39440,
                            "src": "757:15:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IStargateRouter_$39440_$",
                              "typeString": "type(contract IStargateRouter)"
                            }
                          },
                          "id": 40921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "757:59:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStargateRouter_$39440",
                            "typeString": "contract IStargateRouter"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IWETH9_$39457",
                            "typeString": "contract IWETH9"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_contract$_IStargateRouter_$39440",
                            "typeString": "contract IStargateRouter"
                          }
                        ],
                        "id": 40895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "381:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IWETH9_$39457_$_t_address_$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_contract$_IStargateRouter_$39440_$returns$_t_contract$_AvaxSwaps_$32353_$",
                          "typeString": "function (contract IWETH9,address,address,address,address,bytes32,contract IStargateRouter) returns (contract AvaxSwaps)"
                        },
                        "typeName": {
                          "id": 40894,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 40893,
                            "name": "AvaxSwaps",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 32353,
                            "src": "385:9:81"
                          },
                          "referencedDeclaration": 32353,
                          "src": "385:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AvaxSwaps_$32353",
                            "typeString": "contract AvaxSwaps"
                          }
                        }
                      },
                      "id": 40922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "381:436:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AvaxSwaps_$32353",
                        "typeString": "contract AvaxSwaps"
                      }
                    },
                    "src": "369:448:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AvaxSwaps_$32353",
                      "typeString": "contract AvaxSwaps"
                    }
                  },
                  "id": 40924,
                  "nodeType": "ExpressionStatement",
                  "src": "369:448:81"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "304:5:81",
            "parameters": {
              "id": 40883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "309:2:81"
            },
            "returnParameters": {
              "id": 40884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "319:0:81"
            },
            "scope": 41115,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41114,
            "nodeType": "FunctionDefinition",
            "src": "890:1331:81",
            "nodes": [],
            "body": {
              "id": 41113,
              "nodeType": "Block",
              "src": "915:1306:81",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40933
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40933,
                      "mutability": "mutable",
                      "name": "steps",
                      "nameLocation": "940:5:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 41113,
                      "src": "925:20:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40931,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "925:5:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 40932,
                        "nodeType": "ArrayTypeName",
                        "src": "925:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40939,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 40937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "960:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 40936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "948:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40934,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "952:5:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 40935,
                        "nodeType": "ArrayTypeName",
                        "src": "952:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 40938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "948:14:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "925:37:81"
                },
                {
                  "assignments": [
                    40944
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40944,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "987:4:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 41113,
                      "src": "972:19:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40942,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:5:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 40943,
                        "nodeType": "ArrayTypeName",
                        "src": "972:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40950,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 40948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1006:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 40947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "994:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40945,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "998:5:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 40946,
                        "nodeType": "ArrayTypeName",
                        "src": "998:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 40949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "994:14:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "972:36:81"
                },
                {
                  "expression": {
                    "id": 40955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 40951,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40933,
                        "src": "1019:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 40953,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 40952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1025:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1019:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 40954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1030:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1019:12:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 40956,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:12:81"
                },
                {
                  "expression": {
                    "id": 40961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 40957,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40933,
                        "src": "1041:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 40959,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 40958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1047:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1041:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3131",
                      "id": 40960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1052:2:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_11_by_1",
                        "typeString": "int_const 11"
                      },
                      "value": "11"
                    },
                    "src": "1041:13:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 40962,
                  "nodeType": "ExpressionStatement",
                  "src": "1041:13:81"
                },
                {
                  "expression": {
                    "id": 40967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 40963,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40933,
                        "src": "1064:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 40965,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 40964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1070:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1064:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3133",
                      "id": 40966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1075:2:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_13_by_1",
                        "typeString": "int_const 13"
                      },
                      "value": "13"
                    },
                    "src": "1064:13:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 40968,
                  "nodeType": "ExpressionStatement",
                  "src": "1064:13:81"
                },
                {
                  "assignments": [
                    40973
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40973,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "1104:4:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 41113,
                      "src": "1088:20:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$27644_$dyn_memory_ptr",
                        "typeString": "contract IERC20[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40971,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 40970,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 27644,
                            "src": "1088:6:81"
                          },
                          "referencedDeclaration": 27644,
                          "src": "1088:6:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$27644",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 40972,
                        "nodeType": "ArrayTypeName",
                        "src": "1088:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$27644_$dyn_storage_ptr",
                          "typeString": "contract IERC20[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40980,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 40978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1124:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 40977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1111:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$27644_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40975,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 40974,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 27644,
                            "src": "1115:6:81"
                          },
                          "referencedDeclaration": 27644,
                          "src": "1115:6:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$27644",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 40976,
                        "nodeType": "ArrayTypeName",
                        "src": "1115:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$27644_$dyn_storage_ptr",
                          "typeString": "contract IERC20[]"
                        }
                      }
                    },
                    "id": 40979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1111:15:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$27644_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1088:38:81"
                },
                {
                  "expression": {
                    "id": 40987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 40981,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40973,
                        "src": "1136:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$27644_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 40983,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 40982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1141:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1136:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27644",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307842333166363641413343316537383533363346303837354131423734453237623835464436366337",
                          "id": 40985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1153:42:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 40984,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27644,
                        "src": "1146:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$27644_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 40986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1146:50:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27644",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1136:60:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27644",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 40988,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:60:81"
                },
                {
                  "expression": {
                    "id": 40995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 40989,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40973,
                        "src": "1206:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$27644_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 40991,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 40990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1211:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1206:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27644",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307842393745463945663837333443373139303444383030324638623642633636446439633438613645",
                          "id": 40993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1223:42:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 40992,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27644,
                        "src": "1216:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$27644_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 40994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1216:50:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27644",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1206:60:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27644",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 40996,
                  "nodeType": "ExpressionStatement",
                  "src": "1206:60:81"
                },
                {
                  "assignments": [
                    41001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41001,
                      "mutability": "mutable",
                      "name": "binSteps",
                      "nameLocation": "1294:8:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 41113,
                      "src": "1277:25:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40999,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1277:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 41000,
                        "nodeType": "ArrayTypeName",
                        "src": "1277:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41007,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 41005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1319:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 41004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1305:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 41002,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1309:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 41003,
                        "nodeType": "ArrayTypeName",
                        "src": "1309:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 41006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1305:16:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1277:44:81"
                },
                {
                  "expression": {
                    "id": 41012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41008,
                        "name": "binSteps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41001,
                        "src": "1331:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 41010,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 41009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1340:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1331:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3230",
                      "id": 41011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1345:2:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20_by_1",
                        "typeString": "int_const 20"
                      },
                      "value": "20"
                    },
                    "src": "1331:16:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41013,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:16:81"
                },
                {
                  "assignments": [
                    41019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41019,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "1397:6:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 41113,
                      "src": "1358:45:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_LiquidityBookParams_$31758_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AvaxSwaps.LiquidityBookParams[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 41017,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 41016,
                            "name": "AvaxSwaps.LiquidityBookParams",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31758,
                            "src": "1358:29:81"
                          },
                          "referencedDeclaration": 31758,
                          "src": "1358:29:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LiquidityBookParams_$31758_storage_ptr",
                            "typeString": "struct AvaxSwaps.LiquidityBookParams"
                          }
                        },
                        "id": 41018,
                        "nodeType": "ArrayTypeName",
                        "src": "1358:31:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LiquidityBookParams_$31758_storage_$dyn_storage_ptr",
                          "typeString": "struct AvaxSwaps.LiquidityBookParams[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41026,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 41024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1442:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 41023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1406:35:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_LiquidityBookParams_$31758_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct AvaxSwaps.LiquidityBookParams memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 41021,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 41020,
                            "name": "AvaxSwaps.LiquidityBookParams",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31758,
                            "src": "1410:29:81"
                          },
                          "referencedDeclaration": 31758,
                          "src": "1410:29:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LiquidityBookParams_$31758_storage_ptr",
                            "typeString": "struct AvaxSwaps.LiquidityBookParams"
                          }
                        },
                        "id": 41022,
                        "nodeType": "ArrayTypeName",
                        "src": "1410:31:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LiquidityBookParams_$31758_storage_$dyn_storage_ptr",
                          "typeString": "struct AvaxSwaps.LiquidityBookParams[]"
                        }
                      }
                    },
                    "id": 41025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1406:38:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LiquidityBookParams_$31758_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AvaxSwaps.LiquidityBookParams memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1358:86:81"
                },
                {
                  "expression": {
                    "id": 41037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41027,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41019,
                        "src": "1454:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LiquidityBookParams_$31758_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AvaxSwaps.LiquidityBookParams memory[] memory"
                        }
                      },
                      "id": 41029,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 41028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1461:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1454:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityBookParams_$31758_memory_ptr",
                        "typeString": "struct AvaxSwaps.LiquidityBookParams memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3130",
                          "id": 41032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1520:8:81",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "hexValue": "31306537",
                          "id": 41033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1565:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "value": "10e7"
                        },
                        {
                          "id": 41034,
                          "name": "binSteps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41001,
                          "src": "1597:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 41035,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40973,
                          "src": "1630:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$27644_$dyn_memory_ptr",
                            "typeString": "contract IERC20[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$27644_$dyn_memory_ptr",
                            "typeString": "contract IERC20[] memory"
                          }
                        ],
                        "expression": {
                          "id": 41030,
                          "name": "AvaxSwaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32353,
                          "src": "1466:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AvaxSwaps_$32353_$",
                            "typeString": "type(contract AvaxSwaps)"
                          }
                        },
                        "id": 41031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LiquidityBookParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31758,
                        "src": "1466:29:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_LiquidityBookParams_$31758_storage_ptr_$",
                          "typeString": "type(struct AvaxSwaps.LiquidityBookParams storage pointer)"
                        }
                      },
                      "id": 41036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "amountIn",
                        "amountOutWithSlippage",
                        "pairBinSteps",
                        "tokenPath"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1466:179:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityBookParams_$31758_memory_ptr",
                        "typeString": "struct AvaxSwaps.LiquidityBookParams memory"
                      }
                    },
                    "src": "1454:191:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityBookParams_$31758_memory_ptr",
                      "typeString": "struct AvaxSwaps.LiquidityBookParams memory"
                    }
                  },
                  "id": 41038,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:191:81"
                },
                {
                  "assignments": [
                    41044
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41044,
                      "mutability": "mutable",
                      "name": "srcTransferData",
                      "nameLocation": "1693:15:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 41113,
                      "src": "1656:52:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$31736_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AvaxSwaps.SrcTransferParams[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 41042,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 41041,
                            "name": "AvaxSwaps.SrcTransferParams",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31736,
                            "src": "1656:27:81"
                          },
                          "referencedDeclaration": 31736,
                          "src": "1656:27:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SrcTransferParams_$31736_storage_ptr",
                            "typeString": "struct AvaxSwaps.SrcTransferParams"
                          }
                        },
                        "id": 41043,
                        "nodeType": "ArrayTypeName",
                        "src": "1656:29:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$31736_storage_$dyn_storage_ptr",
                          "typeString": "struct AvaxSwaps.SrcTransferParams[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41051,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 41049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1745:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 41048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1711:33:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SrcTransferParams_$31736_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct AvaxSwaps.SrcTransferParams memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 41046,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 41045,
                            "name": "AvaxSwaps.SrcTransferParams",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31736,
                            "src": "1715:27:81"
                          },
                          "referencedDeclaration": 31736,
                          "src": "1715:27:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SrcTransferParams_$31736_storage_ptr",
                            "typeString": "struct AvaxSwaps.SrcTransferParams"
                          }
                        },
                        "id": 41047,
                        "nodeType": "ArrayTypeName",
                        "src": "1715:29:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$31736_storage_$dyn_storage_ptr",
                          "typeString": "struct AvaxSwaps.SrcTransferParams[]"
                        }
                      }
                    },
                    "id": 41050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:36:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$31736_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AvaxSwaps.SrcTransferParams memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1656:91:81"
                },
                {
                  "expression": {
                    "id": 41075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41052,
                        "name": "srcTransferData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41044,
                        "src": "1757:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$31736_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AvaxSwaps.SrcTransferParams memory[] memory"
                        }
                      },
                      "id": 41054,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 41053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1773:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1757:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SrcTransferParams_$31736_memory_ptr",
                        "typeString": "struct AvaxSwaps.SrcTransferParams memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307842393745463945663837333443373139303444383030324638623642633636446439633438613645",
                              "id": 41059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1835:42:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 41058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1827:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41057,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1827:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1827:51:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 41063,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1910:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AvaxSwapsTest_$41115",
                                "typeString": "contract AvaxSwapsTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AvaxSwapsTest_$41115",
                                "typeString": "contract AvaxSwapsTest"
                              }
                            ],
                            "id": 41062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1902:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41061,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1902:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1902:13:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 41071,
                                  "name": "avaxSwaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40879,
                                  "src": "2006:9:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AvaxSwaps_$32353",
                                    "typeString": "contract AvaxSwaps"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AvaxSwaps_$32353",
                                    "typeString": "contract AvaxSwaps"
                                  }
                                ],
                                "id": 41070,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1998:7:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 41069,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1998:7:81",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 41072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1998:18:81",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "307842393745463945663837333443373139303444383030324638623642633636446439633438613645",
                                  "id": 41066,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1944:42:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "value": "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 41065,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27644,
                                "src": "1937:6:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$27644_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 41067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1937:50:81",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$27644",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 41068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27601,
                            "src": "1937:60:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 41073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1937:80:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 41055,
                          "name": "AvaxSwaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32353,
                          "src": "1778:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AvaxSwaps_$32353_$",
                            "typeString": "type(contract AvaxSwaps)"
                          }
                        },
                        "id": 41056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SrcTransferParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31736,
                        "src": "1778:27:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SrcTransferParams_$31736_storage_ptr_$",
                          "typeString": "type(struct AvaxSwaps.SrcTransferParams storage pointer)"
                        }
                      },
                      "id": 41074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "token",
                        "receiver",
                        "amount"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1778:250:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SrcTransferParams_$31736_memory_ptr",
                        "typeString": "struct AvaxSwaps.SrcTransferParams memory"
                      }
                    },
                    "src": "1757:271:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SrcTransferParams_$31736_memory_ptr",
                      "typeString": "struct AvaxSwaps.SrcTransferParams memory"
                    }
                  },
                  "id": 41076,
                  "nodeType": "ExpressionStatement",
                  "src": "1757:271:81"
                },
                {
                  "expression": {
                    "id": 41084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41077,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40944,
                        "src": "2039:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 41079,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 41078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2044:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2039:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3130",
                          "id": 41082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2060:8:81",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 41080,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "2049:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 41081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "2049:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 41083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2049:20:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2039:30:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 41085,
                  "nodeType": "ExpressionStatement",
                  "src": "2039:30:81"
                },
                {
                  "expression": {
                    "id": 41093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41086,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40944,
                        "src": "2079:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 41088,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 41087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2084:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2079:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 41091,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41019,
                          "src": "2100:6:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_LiquidityBookParams_$31758_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct AvaxSwaps.LiquidityBookParams memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_LiquidityBookParams_$31758_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct AvaxSwaps.LiquidityBookParams memory[] memory"
                          }
                        ],
                        "expression": {
                          "id": 41089,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "2089:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 41090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "2089:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 41092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2089:18:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2079:28:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 41094,
                  "nodeType": "ExpressionStatement",
                  "src": "2079:28:81"
                },
                {
                  "expression": {
                    "id": 41102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41095,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40944,
                        "src": "2117:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 41097,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 41096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2122:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2117:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 41100,
                          "name": "srcTransferData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41044,
                          "src": "2138:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$31736_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct AvaxSwaps.SrcTransferParams memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$31736_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct AvaxSwaps.SrcTransferParams memory[] memory"
                          }
                        ],
                        "expression": {
                          "id": 41098,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "2127:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 41099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "2127:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 41101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2127:27:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2117:37:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 41103,
                  "nodeType": "ExpressionStatement",
                  "src": "2117:37:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41109,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40933,
                        "src": "2202:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      {
                        "id": 41110,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40944,
                        "src": "2209:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        ],
                        "expression": {
                          "id": 41104,
                          "name": "avaxSwaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40879,
                          "src": "2165:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AvaxSwaps_$32353",
                            "typeString": "contract AvaxSwaps"
                          }
                        },
                        "id": 41106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "avaxSwaps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32290,
                        "src": "2165:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
                          "typeString": "function (uint8[] memory,bytes memory[] memory) payable external"
                        }
                      },
                      "id": 41108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130",
                          "id": 41107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2192:8:81",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        }
                      ],
                      "src": "2165:36:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$value",
                        "typeString": "function (uint8[] memory,bytes memory[] memory) payable external"
                      }
                    },
                    "id": 41111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2165:49:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41112,
                  "nodeType": "ExpressionStatement",
                  "src": "2165:49:81"
                }
              ]
            },
            "functionSelector": "291c9831",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testLB",
            "nameLocation": "899:6:81",
            "parameters": {
              "id": 40927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "905:2:81"
            },
            "returnParameters": {
              "id": 40928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:0:81"
            },
            "scope": 41115,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40875,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5694,
              "src": "230:4:81"
            },
            "id": 40876,
            "nodeType": "InheritanceSpecifier",
            "src": "230:4:81"
          }
        ],
        "canonicalName": "AvaxSwapsTest",
        "contractDependencies": [
          32353,
          37486
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41115,
          5694,
          2764,
          2501
        ],
        "name": "AvaxSwapsTest",
        "nameLocation": "213:13:81",
        "scope": 41116,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 81
}