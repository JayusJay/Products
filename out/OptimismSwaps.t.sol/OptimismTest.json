{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOptimismUniMultiHop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testVelo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905566038d7ea4c68000600a5534801561002c57600080fd5b506165098061003c6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b063649b1161005b578063b063649b146100cc578063ba414fa6146100d4578063f8ccbf47146100ec578063fa7626d4146100ff57600080fd5b80630a9254e4146100825780633a7684631461008c57806356f68044146100c4575b600080fd5b61008a61010c565b005b6100a7737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b61008a610308565b61008a61069c565b6100dc610d17565b60405190151581526020016100bb565b6000546100dc9062010000900460ff1681565b6000546100dc9060ff1681565b60405161011890611157565b604051809103906000f080158015610134573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b039290921691821790556040516006602160991b01919073e592427a0aece92de3edee1f18e0157c0586156490600090819073b0d502e938ed5f4df2e681fe6e419ff29631d62b9061019b90611165565b6001600160a01b039687168152948616602086015292851660408501529084166060840152608083015290911660a082015260c001604051809103906000f0801580156101ec573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b039290921691909117905560405163ca669fa760e01b815273c66825c5c04b3c2ccd536d626934e16248a63f686004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561026d57600080fd5b505af1158015610281573d6000803e3d6000fd5b505060405163a9059cbb60e01b815230600482015264174876e8006024820152737f5c764cbc14f9669b88837ca1490cca17c31607925063a9059cbb91506044016020604051808303816000875af11580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103059190611173565b50565b60408051600380825260808201909252600091602082016060803683375050604080516003808252608082019092529293506000929150602082015b60608152602001906001900390816103445790505090506002826000815181106103705761037061119c565b602002602001019060ff16908160ff16815250506004826001815181106103995761039961119c565b602002602001019060ff16908160ff1681525050600e826002815181106103c2576103c261119c565b60ff9290921660209283029190910190910152604080516001808252818301909252600091816020015b6040805160e08101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c082015282526000199092019101816103ec5750506040805160e081018252678ac7230489e8000081526000602082018190526006602160991b0192820192909252737f5c764cbc14f9669b88837ca1490cca17c31607606082015273da10009cbd5d07dd0cecc66161fc93d7c9000da160808201526101f460a0820181905260c08201528251929350918391906104b9576104b961119c565b6020908102919091010152604080516001808252818301909252600091816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816104db5750506040805160608101825273da10009cbd5d07dd0cecc66161fc93d7c9000da18152306020820152600091810182905282519293509183919061054b5761054b61119c565b6020026020010181905250678ac7230489e8000060405160200161057f919067ffffffffffffffff91909116815260200190565b604051602081830303815290604052836000815181106105a1576105a161119c565b6020026020010181905250816040516020016105bd91906111b2565b604051602081830303815290604052836001815181106105df576105df61119c565b6020026020010181905250806040516020016105fb919061124f565b6040516020818303038152906040528360028151811061061d5761061d61119c565b6020908102919091010152600854604051632efb1dd760e11b81526001600160a01b0390911690635df63bae90678ac7230489e800009061066490889088906004016112cb565b6000604051808303818588803b15801561067d57600080fd5b505af1158015610691573d6000803e3d6000fd5b505050505050505050565b60085460405163095ea7b360e01b81526001600160a01b03909116600482015264174876e8006024820152737f5c764cbc14f9669b88837ca1490cca17c316079063095ea7b3906044016020604051808303816000875af1158015610705573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107299190611173565b5060408051600380825260808201909252600091602082016060803683370190505090506001816000815181106107625761076261119c565b602002602001019060ff16908160ff1681525050600a8160018151811061078b5761078b61119c565b602002602001019060ff16908160ff1681525050600e816002815181106107b4576107b461119c565b60ff929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905064174876e800816000815181106108045761080461119c565b6020908102919091010152604080516001808252818301909252600091816020016020820280368337019050509050737f5c764cbc14f9669b88837ca1490cca17c316078160008151811061085b5761085b61119c565b6001600160a01b03929092166020928302919091019091015260408051600380825260808201909252600091816020015b606081526020019060019003908161088c57905050905081836040516020016108b692919061137e565b604051602081830303815290604052816000815181106108d8576108d861119c565b6020908102919091010152604080516001808252818301909252600091816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816108fa57505060408051606081018252737f5c764cbc14f9669b88837ca1490cca17c3160781526006602160991b01602082015260009181018290528251929350918391906109715761097161119c565b6020908102919091010152604080516001808252818301909252600091816020015b604080516060810182526000808252602080830182905292820152825260001990920191018161099357905050604080516060810182526006602160991b0180825273d471aec6c713379f0b928fa8cb80b9761cd9708d602083015260085483516370a0823160e01b81526001600160a01b0390911660048201529394509092918301916370a0823190602401602060405180830381865afa158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a619190611402565b81525081600081518110610a7757610a7761119c565b6020908102919091010152604080516001808252818301909252600091816020015b610ac46040518060800160405280600081526020016000815260200160608152602001600081525090565b815260200190600190039081610a99579050509050604051806080016040528064174876e80081526020016000815260200184815260200142610258610b0a919061141b565b81525081600081518110610b2057610b2061119c565b602002602001018190525080604051602001610b3c9190611442565b60405160208183030381529060405284600181518110610b5e57610b5e61119c565b602002602001018190525081604051602001610b7a919061124f565b60405160208183030381529060405284600281518110610b9c57610b9c61119c565b6020908102919091010152600854604051632efb1dd760e11b81526001600160a01b0390911690635df63bae90610bd9908a9088906004016112cb565b600060405180830381600087803b158015610bf357600080fd5b505af1158015610c07573d6000803e3d6000fd5b50506008546040516370a0823160e01b81526001600160a01b039091166004820152610c8992506006602160991b0191506370a0823190602401602060405180830381865afa158015610c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c829190611402565b6000610e42565b6040516370a0823160e01b815273d471aec6c713379f0b928fa8cb80b9761cd9708d6004820152610d0e906006602160991b01906370a0823190602401602060405180830381865afa158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d079190611402565b6000610f50565b50505050505050565b60008054610100900460ff1615610d375750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610e3d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610dc5917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611519565b60408051601f1981840301815290829052610ddf9161154a565b6000604051808303816000865af19150503d8060008114610e1c576040519150601f19603f3d011682016040523d82523d6000602084013e610e21565b606091505b5091505080806020019051810190610e399190611173565b9150505b919050565b808214610f4c577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610eb39060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b6060820152602081018390529051600080516020620064b48339815191529181900360800190a160408051818152600a9181019190915269080808081058dd1d585b60b21b606082015260208101839052600080516020620064b4833981519152906080015b60405180910390a1610f4c61104b565b5050565b808211610f4c577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610fc09060208082526021908201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e746040820152605d60f81b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b6060820152602081018490529051600080516020620064b48339815191529181900360800190a1604080518181526009918101919091526810102b30b63ab2903160b91b606082015260208101829052600080516020620064b483398151915290608001610f3c565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156111465760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526110e59291602001611519565b60408051601f19818403018152908290526110ff9161154a565b6000604051808303816000865af19150503d806000811461113c576040519150601f19603f3d011682016040523d82523d6000602084013e611141565b606091505b505050505b6000805461ff001916610100179055565b61078c806200156783390190565b6147c18062001cf383390190565b60006020828403121561118557600080fd5b8151801515811461119557600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b602080825282518282018190526000919060409081850190868401855b82811015611242578151805185528681015187860152858101516001600160a01b03908116878701526060808301518216908701526080808301519091169086015260a08082015162ffffff9081169187019190915260c091820151169085015260e090930192908501906001016111cf565b5091979650505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561124257815180516001600160a01b039081168652878201511687860152850151858501526060909301929085019060010161126c565b60005b838110156112c25781810151838201526020016112aa565b50506000910152565b604080825283519082018190526000906020906060840190828701845b8281101561130757815160ff16845292840192908401906001016112e8565b50505083810382850152845180825282820190600581901b8301840187850160005b8381101561136f57601f198087850301865282518051808652611351818b88018c85016112a7565b96890196601f01909116939093018701925090860190600101611329565b50909998505050505050505050565b604080825283519082018190526000906020906060840190828701845b828110156113c05781516001600160a01b03168452928401929084019060010161139b565b5050508381038285015284518082528583019183019060005b818110156113f5578351835292840192918401916001016113d9565b5090979650505050505050565b60006020828403121561141457600080fd5b5051919050565b8082018082111561143c57634e487b7160e01b600052601160045260246000fd5b92915050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561150a57898403603f190186528251805185528881015189860152878101516080898701819052815190870181905260a08701918b019085905b808210156114e957825180516001600160a01b0390811686528e820151168e8601528c015115158c850152606090930192918c0191600191909101906114a8565b5050506060918201519590910194909452948701949187019160010161146a565b50919998505050505050505050565b6001600160e01b031983168152815160009061153c8160048501602087016112a7565b919091016004019392505050565b6000825161155c8184602087016112a7565b919091019291505056fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61070e8061007e6000396000f3fe60806040526004361061004e5760003560e01c806350431ce41461005a57806351cff8d914610071578063715018a6146100915780638da5cb5b146100a6578063f2fde38b146100d257600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061006f6100f2565b005b34801561007d57600080fd5b5061006f61008c366004610606565b610115565b34801561009d57600080fd5b5061006f6101ae565b3480156100b257600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100de57600080fd5b5061006f6100ed366004610606565b6101c2565b6100fa61023d565b6000546001600160a01b0316476101118282610297565b5050565b61011d61023d565b6101ab6101326000546001600160a01b031690565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a919061062a565b6001600160a01b03841691906102ed565b50565b6101b661023d565b6101c0600061033f565b565b6101ca61023d565b6001600160a01b0381166102345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101ab8161033f565b6000546001600160a01b031633146101c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022b565b600080600080600085875af19050806102e85760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b604482015260640161022b565b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526102e890849061038f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006103e4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104619092919063ffffffff16565b8051909150156102e857808060200190518101906104029190610643565b6102e85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161022b565b60606104708484600085610478565b949350505050565b6060824710156104d95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161022b565b600080866001600160a01b031685876040516104f59190610689565b60006040518083038185875af1925050503d8060008114610532576040519150601f19603f3d011682016040523d82523d6000602084013e610537565b606091505b509150915061054887838387610553565b979650505050505050565b606083156105c25782516000036105bb576001600160a01b0385163b6105bb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161022b565b5081610470565b61047083838151156105d75781518083602001fd5b8060405162461bcd60e51b815260040161022b91906106a5565b6001600160a01b03811681146101ab57600080fd5b60006020828403121561061857600080fd5b8135610623816105f1565b9392505050565b60006020828403121561063c57600080fd5b5051919050565b60006020828403121561065557600080fd5b8151801515811461062357600080fd5b60005b83811015610680578181015183820152602001610668565b50506000910152565b6000825161069b818460208701610665565b9190910192915050565b60208152600082518060208401526106c4816040850160208701610665565b601f01601f1916919091016040019291505056fea26469706673582212208ea5dd7f68088b70d8a22acf702d7362a7a3fc841140a0aef184533480a8db8264736f6c634300081100336101006040526002805460ff191660011790553480156200001f57600080fd5b50604051620047c1380380620047c1833981016040819052620000429162000099565b6001600160a01b03938416608052600080546001600160a01b03191693851693909317909255600155811660a05291821660c0521660e05262000121565b6001600160a01b03811681146200009657600080fd5b50565b60008060008060008060c08789031215620000b357600080fd5b8651620000c08162000080565b6020880151909650620000d38162000080565b6040880151909550620000e68162000080565b6060880151909450620000f98162000080565b608088015160a08901519194509250620001138162000080565b809150509295509295509295565b60805160a05160c05160e0516145fd620001c4600039600081816102d501528181610d350152611ef601526000818161086901528181610c190152610cac01526000818161024d015281816103dd015281816112c001528181612118015281816121ae01526122300152600081816102a1015281816116070152818161168b0152818161176d015281816118890152818161190d01526119e601526145fd6000f3fe6080604052600436106100f75760003560e01c8063ab8236f31161008a578063c7f5fd1011610059578063c7f5fd1014610317578063d5ef98ea1461033f578063e5e31b1314610367578063fdc09e071461039757600080fd5b8063ab8236f31461026f578063c31c9c071461028f578063c415b95c146102c3578063c45a0155146102f757600080fd5b80635e1e6325116100c65780635e1e6325146101c35780639881fcb4146101f85780639aab924814610225578063a9e56f3c1461023b57600080fd5b80634285f6e4146101035780634c1ee03e14610136578063544caa561461016e5780635df63bae146101ae57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5061012361011e3660046133cf565b6103b2565b6040519081526020015b60405180910390f35b34801561014257600080fd5b5061015661015136600461342d565b6104c3565b6040516001600160a01b03909116815260200161012d565b34801561017a57600080fd5b5061018e610189366004613478565b610586565b604080516001600160a01b0393841681529290911660208301520161012d565b6101c16101bc3660046134f5565b61066b565b005b3480156101cf57600080fd5b506101e36101de366004613560565b610dd8565b6040805192835290151560208301520161012d565b34801561020457600080fd5b50610218610213366004613669565b61100c565b60405161012d91906136a5565b34801561023157600080fd5b5061012360015481565b34801561024757600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b34801561027b57600080fd5b506101c161028a3660046136e9565b6112b5565b34801561029b57600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b3480156102cf57600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b34801561030357600080fd5b50600054610156906001600160a01b031681565b34801561032357600080fd5b506101567325cbddb98b35ab1ff77413456b31ec81a6b6b74681565b34801561034b57600080fd5b50610156739c12939390052919af3155f41bf4160fd3666a6f81565b34801561037357600080fd5b50610387610382366004613783565b61146d565b604051901515815260200161012d565b3480156103a357600080fd5b506101566006602160991b0181565b6000808360e001516040516020016103ca91906137a0565b60405160208183030381529060405290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630a51236985600001516001848760405180606001604052808b610120015181526020018b60c0015181526020018b60e0015160405160200161044891906137a0565b6040516020818303038152906040528152506040518663ffffffff1660e01b815260040161047a959493929190613831565b6040805180830381865afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190613889565b50949350505050565b60008060006104d28686610586565b6040516001600160601b0319606084811b8216602084015283901b16603482015286151560f81b604882015291935091507325cbddb98b35ab1ff77413456b31ec81a6b6b7469060490160408051601f19818403018152908290528051602091820120610564939290917fc1ac28b1c4ebe53c0cff67bab5878c4eb68759bb1e9f73977cd266b247d149f091016138ad565b60408051601f1981840301815291905280516020909101209695505050505050565b600080826001600160a01b0316846001600160a01b0316036105ef5760405162461bcd60e51b815260206004820152601b60248201527f526f757465723a204944454e544943414c5f414444524553534553000000000060448201526064015b60405180910390fd5b826001600160a01b0316846001600160a01b03161061060f578284610612565b83835b90925090506001600160a01b0382166106645760405162461bcd60e51b8152602060048201526014602482015273526f757465723a205a45524f5f4144445245535360601b60448201526064016105e6565b9250929050565b60025460ff166001146106ad5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016105e6565b6002805460ff1916811790558281146106d9576040516373f8993760e11b815260040160405180910390fd5b60005b83811015610dc45760008585838181106106f8576106f86138e0565b905060200201602081019061070d9190613905565b905060001960ff82160161080557600080858585818110610730576107306138e0565b90506020028101906107429190613922565b81019061074f91906139d7565b9150915060005b82518110156107fd576000828281518110610773576107736138e0565b6020026020010151116107995760405163fe4155c760e01b815260040160405180910390fd5b6107eb33308484815181106107b0576107b06138e0565b60200260200101518685815181106107ca576107ca6138e0565b60200260200101516001600160a01b03166114f2909392919063ffffffff16565b806107f581613aa7565b915050610756565b505050610db1565b60011960ff8216016108e1576000848484818110610825576108256138e0565b90506020028101906108379190613922565b8101906108449190613ac0565b9050600081116108675760405163fe4155c760e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156108c257600080fd5b505af11580156108d6573d6000803e3d6000fd5b505050505050610db1565b60021960ff821601610971576000848484818110610901576109016138e0565b90506020028101906109139190613922565b8101906109209190613aec565b905060005b815181101561096a576000828281518110610942576109426138e0565b6020026020010151905061095581611563565b5050808061096290613aa7565b915050610925565b5050610db1565b60031960ff8216016109f3576000848484818110610991576109916138e0565b90506020028101906109a39190613922565b8101906109b09190613bd6565b905060005b815181101561096a576109e08282815181106109d3576109d36138e0565b60200260200101516117e5565b50806109eb81613aa7565b9150506109b5565b60041960ff821601610a75576000848484818110610a1357610a136138e0565b9050602002810190610a259190613922565b810190610a329190613cd8565b905060005b815181101561096a57610a62828281518110610a5557610a556138e0565b6020026020010151611a30565b5080610a6d81613aa7565b915050610a37565b60091960ff821601610af7576000848484818110610a9557610a956138e0565b9050602002810190610aa79190613922565b810190610ab49190613de5565b905060005b815181101561096a57610ae4828281518110610ad757610ad76138e0565b6020026020010151611c24565b5080610aef81613aa7565b915050610ab9565b600d1960ff821601610bb8576000848484818110610b1757610b176138e0565b9050602002810190610b299190613922565b810190610b369190613edf565b905060005b815181101561096a57610ba6828281518110610b5957610b596138e0565b602002602001015160000151838381518110610b7757610b776138e0565b602002602001015160400151848481518110610b9557610b956138e0565b602002602001015160200151611e55565b80610bb081613aa7565b915050610b3b565b600c1960ff821601610d5a57600080858585818110610bd957610bd96138e0565b9050602002810190610beb9190613922565b810190610bf89190613fa2565b9150915080600003610c91576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8c9190613fce565b610c93565b805b604051632e1a7d4d60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610cf857600080fd5b505af1158015610d0c573d6000803e3d6000fd5b505050506000610d1b82611f77565b9050610d3083610d2b8385613fe7565b611f9c565b6107fd7f000000000000000000000000000000000000000000000000000000000000000082611f9c565b600e1960ff821601610db1576000806000868686818110610d7d57610d7d6138e0565b9050602002810190610d8f9190613922565b810190610d9c9190614079565b925092509250610dad838383611ff2565b5050505b5080610dbc81613aa7565b9150506106dc565b50506002805460ff19166001179055505050565b6000806000610de9858560016104c3565b60405163e5e31b1360e01b81526001600160a01b038216600482015290915060009081907325cbddb98b35ab1ff77413456b31ec81a6b6b7469063e5e31b1390602401602060405180830381865afa158015610e49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6d9190614151565b15610ee6576040516378a051ad60e11b8152600481018990526001600160a01b03888116602483015284169063f140a35a90604401602060405180830381865afa158015610ebf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee39190613fce565b91505b610ef2878760006104c3565b60405163e5e31b1360e01b81526001600160a01b03821660048201529093507325cbddb98b35ab1ff77413456b31ec81a6b6b7469063e5e31b1390602401602060405180830381865afa158015610f4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f719190614151565b15610fea576040516378a051ad60e11b8152600481018990526001600160a01b03888116602483015284169063f140a35a90604401602060405180830381865afa158015610fc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe79190613fce565b90505b808211610ff957806000610ffd565b8160015b94509450505050935093915050565b60606001825110156110575760405162461bcd60e51b81526020600482015260146024820152730a4deeae8cae47440929cac82989288bea082a8960631b60448201526064016105e6565b815161106490600161416e565b6001600160401b0381111561107b5761107b613175565b6040519080825280602002602001820160405280156110a4578160200160208202803683370190505b50905082816000815181106110bb576110bb6138e0565b60200260200101818152505060005b82518110156112ae5760006111378483815181106110ea576110ea6138e0565b602002602001015160000151858481518110611108576111086138e0565b602002602001015160200151868581518110611126576111266138e0565b6020026020010151604001516104c3565b60405163e5e31b1360e01b81526001600160a01b03821660048201529091507325cbddb98b35ab1ff77413456b31ec81a6b6b7469063e5e31b1390602401602060405180830381865afa158015611192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b69190614151565b1561129b57806001600160a01b031663f140a35a8484815181106111dc576111dc6138e0565b60200260200101518685815181106111f6576111f66138e0565b6020026020010151600001516040518363ffffffff1660e01b81526004016112319291909182526001600160a01b0316602082015260400190565b602060405180830381865afa15801561124e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112729190613fce565b8361127e84600161416e565b8151811061128e5761128e6138e0565b6020026020010181815250505b50806112a681613aa7565b9150506110ca565b5092915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112fe57604051638afe477f60e01b815260040160405180910390fd5b600080620186a081815a6113129190613fe7565b905060008060008780602001905181019061132d919061423c565b925092509250845a101561135f5761134f6001600160a01b038b16848b612340565b471561135f5761135f8347611f9c565b604051632efb1dd760e11b81523090635df63bae9086906113869086908690600401614393565b600060405180830381600088803b1580156113a057600080fd5b5087f1935050505080156113b2575060015b611400573d8080156113e0576040519150601f19603f3d011682016040523d82523d6000602084013e6113e5565b606091505b506113fa6001600160a01b038c16858c612340565b60019750505b4715611410576114108347611f9c565b604080518a815288151560208201528715158183015290516001600160a01b038c16917f7f345d6da48bd1339fd428ff45265a0f01258b14ca09dcf8db0c469f4f732fd3919081900360600190a250505050505050505050505050565b60405163e5e31b1360e01b81526001600160a01b03821660048201526000907325cbddb98b35ab1ff77413456b31ec81a6b6b7469063e5e31b1390602401602060405180830381865afa1580156114c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ec9190614151565b92915050565b6040516001600160a01b038085166024830152831660448201526064810182905261155d9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612370565b50505050565b8051600090156115745781516115e2565b60408083015190516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156115be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e29190613fce565b8083526040808401519051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301529091169063dd62ed3e90604401602060405180830381865afa158015611657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167b9190613fce565b10156116b2576116b282604001517f0000000000000000000000000000000000000000000000000000000000000000600019612442565b6040805161010081018252838201516001600160a01b0390811682526060808601518216602080850191825260808089015162ffffff90811687890190815230958801958652429288019283528a5160a08901908152938b015160c08901908152600060e08a01908152995163414bf38960e01b8152895189166004820152955188166024870152905190911660448501529351851660648401525160848301525160a4820152905160c48201529251811660e484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104015b6020604051808303816000875af11580156117ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117de9190613fce565b9392505050565b8051600090156117f6578151611864565b60408083015190516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118649190613fce565b8083526040808401519051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301529091169063dd62ed3e90604401602060405180830381865afa1580156118d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fd9190613fce565b10156119345761193482604001517f0000000000000000000000000000000000000000000000000000000000000000600019612442565b6040805160a08082018352918401519184015160608086015160c08088015160808901516001600160601b031997851b8816928701929092526001600160e81b031960e895861b811660d488015292841b871660d787015290931b1660eb8401521b90911660ee8201526000908061010281016040516020818303038152906040528152602001306001600160a01b0316815260200142815260200184600001518152602001846020015181525090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c04b8d59826040518263ffffffff1660e01b815260040161179b91906143c1565b805160009015611a41578151611acc565b8160400151600081518110611a5857611a586138e0565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acc9190613fce565b8083526000805460408501516001549293611af5936001600160a01b0390931692909190612542565b90508060018251611b069190613fe7565b81518110611b1657611b166138e0565b602002602001015191508260200151821015611b745760405162461bcd60e51b815260206004820152601760248201527f696e73756666696369656e742d616d6f756e742d6f757400000000000000000060448201526064016105e6565b826060015115611c0f576000805460408501518051611c0f93611bd7936001600160a01b03169291611ba857611ba86138e0565b60200260200101518660400151600181518110611bc757611bc76138e0565b60200260200101516001546126c5565b845160408601518051600090611bef57611bef6138e0565b60200260200101516001600160a01b03166123409092919063ffffffff16565b611c1e8184604001513061274b565b50919050565b6060816060015142811015611c6d5760405162461bcd60e51b815260206004820152600f60248201526e149bdd5d195c8e8811561412549151608a1b60448201526064016105e6565b825115611c7b578251611d07565b8260400151600081518110611c9257611c926138e0565b6020908102919091010151516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d079190613fce565b8084526040840151611d19919061100c565b915082602001518260018451611d2f9190613fe7565b81518110611d3f57611d3f6138e0565b60200260200101511015611da05760405162461bcd60e51b815260206004820152602260248201527f526f757465723a20494e53554646494349454e545f4f55545055545f414d4f55604482015261139560f21b60648201526084016105e6565b611e468360400151600081518110611dba57611dba6138e0565b602002602001015160000151611e268560400151600081518110611de057611de06138e0565b6020026020010151600001518660400151600081518110611e0357611e036138e0565b6020026020010151602001518760400151600081518110611126576111266138e0565b84600081518110611e3957611e396138e0565b6020026020010151612922565b611c1e82846040015130612a0a565b81600003611eca576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015611ea1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec59190613fce565b611ecc565b815b91506000611ed983611f77565b9050611ee58184613fe7565b9250611f1b6001600160a01b0385167f000000000000000000000000000000000000000000000000000000000000000083612340565b611f2f6001600160a01b0385168385612340565b604080516001600160a01b0386168152602081018390527f075a2720282fdf622141dae0b048ef90a21a7e57c134c76912d19d006b3b3f6f910160405180910390a150505050565b6000612710611f888361270b614419565b611f929190614430565b6114ec9083613fe7565b600080600080600085875af1905080611fed5760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b60448201526064016105e6565b505050565b8051825114612014576040516373f8993760e11b815260040160405180910390fd5b620186a0836101200151101561203d57604051636eb14fc360e11b815260040160405180910390fd5b6000836101000151838360405160200161205993929190614452565b604051602081830303815290604052905083608001516000036120e95760208401516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156120c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120e49190613fce565b6120ef565b83608001515b608085018190526020850151604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301529091169063dd62ed3e90604401602060405180830381865afa158015612168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061218c9190613fce565b101561222e57602084015160405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015612208573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061222c9190614151565b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639fbf10fc47866000015187604001518860600151338a608001518b60a0015160405180606001604052808e610120015181526020018e60c0015181526020018e60e001516040516020016122ad91906137a0565b6040516020818303038152906040528152508d60e001516040516020016122d491906137a0565b6040516020818303038152906040528b6040518b63ffffffff1660e01b815260040161230899989796959493929190614492565b6000604051808303818588803b15801561232157600080fd5b505af1158015612335573d6000803e3d6000fd5b505050505050505050565b6040516001600160a01b038316602482015260448101829052611fed90849063a9059cbb60e01b90606401611526565b60006123c5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612c599092919063ffffffff16565b805190915015611fed57808060200190518101906123e39190614151565b611fed5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105e6565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b179052915160009283929087169161249e919061450f565b6000604051808303816000865af19150503d80600081146124db576040519150601f19603f3d011682016040523d82523d6000602084013e6124e0565b606091505b509150915081801561250a57508051158061250a57508080602001905181019061250a9190614151565b61253b5760405162461bcd60e51b8152602060048201526002602482015261534160f01b60448201526064016105e6565b5050505050565b60606002835110156125965760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f50415448000060448201526064016105e6565b82516001600160401b038111156125af576125af613175565b6040519080825280602002602001820160405280156125d8578160200160208202803683370190505b50905083816000815181106125ef576125ef6138e0565b60200260200101818152505060005b6001845161260c9190613fe7565b8110156104ba576000806126608887858151811061262c5761262c6138e0565b602002602001015188866001612642919061416e565b81518110612652576126526138e0565b602002602001015188612c70565b91509150612688848481518110612679576126796138e0565b60200260200101518383612d3c565b8461269485600161416e565b815181106126a4576126a46138e0565b602002602001018181525050505080806126bd90613aa7565b9150506125fe565b60008060006126d48686612e5b565b6040516001600160601b0319606084811b8216602084015283901b166034820152919350915087906048016040516020818303038152906040528051906020012085604051602001612728939291906138ad565b60408051601f198184030181529190528051602090910120979650505050505050565b60005b6001835161275c9190613fe7565b81101561155d57600080848381518110612778576127786138e0565b60200260200101518584600161278e919061416e565b8151811061279e5761279e6138e0565b60200260200101519150915060006127b68383612e5b565b5090506000876127c786600161416e565b815181106127d7576127d76138e0565b60200260200101519050600080836001600160a01b0316866001600160a01b03161461280557826000612809565b6000835b91509150600060028a5161281d9190613fe7565b88106128295788612856565b600054612856906001600160a01b0316878c6128468c600261416e565b81518110611bc757611bc76138e0565b905061287960008054906101000a90046001600160a01b031688886001546126c5565b6001600160a01b031663022c0d9f84848460006040519080825280601f01601f1916602001820160405280156128b6576020820181803683370190505b506040518563ffffffff1660e01b81526004016128d6949392919061452b565b600060405180830381600087803b1580156128f057600080fd5b505af1158015612904573d6000803e3d6000fd5b5050505050505050505050808061291a90613aa7565b91505061274e565b6000836001600160a01b03163b1161293957600080fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691612995919061450f565b6000604051808303816000865af19150503d80600081146129d2576040519150601f19603f3d011682016040523d82523d6000602084013e6129d7565b606091505b5091509150818015612a01575080511580612a01575080806020019051810190612a019190614151565b61253b57600080fd5b60005b825181101561155d576000612a5c848381518110612a2d57612a2d6138e0565b602002602001015160000151858481518110612a4b57612a4b6138e0565b602002602001015160200151610586565b509050600085612a6d84600161416e565b81518110612a7d57612a7d6138e0565b60200260200101519050600080836001600160a01b0316878681518110612aa657612aa66138e0565b6020026020010151600001516001600160a01b031614612ac857826000612acc565b6000835b91509150600060018851612ae09190613fe7565b8610612aec5786612b5f565b612b5f88612afb88600161416e565b81518110612b0b57612b0b6138e0565b60200260200101516000015189886001612b25919061416e565b81518110612b3557612b356138e0565b6020026020010151602001518a896001612b4f919061416e565b81518110611126576111266138e0565b9050612bb2888781518110612b7657612b766138e0565b602002602001015160000151898881518110612b9457612b946138e0565b6020026020010151602001518a8981518110611126576111266138e0565b6001600160a01b031663022c0d9f84848460006040519080825280601f01601f191660200182016040528015612bef576020820181803683370190505b506040518563ffffffff1660e01b8152600401612c0f949392919061452b565b600060405180830381600087803b158015612c2957600080fd5b505af1158015612c3d573d6000803e3d6000fd5b5050505050505050508080612c5190613aa7565b915050612a0d565b6060612c688484600085612f4b565b949350505050565b6000806000612c7f8686612e5b565b509050600080612c91898989896126c5565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015612cce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cf2919061456f565b506001600160701b031691506001600160701b03169150826001600160a01b0316886001600160a01b031614612d29578082612d2c565b81815b909a909950975050505050505050565b6000808411612da15760405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201526a1394155517d05353d5539560aa1b60648201526084016105e6565b600083118015612db15750600082115b612e0e5760405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c604482015267495155494449545960c01b60648201526084016105e6565b6000612e1c856103e561301b565b90506000612e2a828561301b565b90506000612e4483612e3e886103e861301b565b90613082565b9050612e508183614430565b979650505050505050565b600080826001600160a01b0316846001600160a01b031603612ecd5760405162461bcd60e51b815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f41444452604482015264455353455360d81b60648201526084016105e6565b826001600160a01b0316846001600160a01b031610612eed578284612ef0565b83835b90925090506001600160a01b0382166106645760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f41444452455353000060448201526064016105e6565b606082471015612fac5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105e6565b600080866001600160a01b03168587604051612fc8919061450f565b60006040518083038185875af1925050503d8060008114613005576040519150601f19603f3d011682016040523d82523d6000602084013e61300a565b606091505b5091509150612e50878383876130d7565b600081158061303f575082826130318183614419565b925061303d9083614430565b145b6114ec5760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b60448201526064016105e6565b60008261308f838261416e565b91508110156114ec5760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b60448201526064016105e6565b6060831561314657825160000361313f576001600160a01b0385163b61313f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105e6565b5081612c68565b612c68838381511561315b5781518083602001fd5b8060405162461bcd60e51b81526004016105e691906145b4565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b03811182821017156131ae576131ae613175565b60405290565b604051606081016001600160401b03811182821017156131ae576131ae613175565b60405160a081016001600160401b03811182821017156131ae576131ae613175565b60405160e081016001600160401b03811182821017156131ae576131ae613175565b604051608081016001600160401b03811182821017156131ae576131ae613175565b604051601f8201601f191681016001600160401b038111828210171561326457613264613175565b604052919050565b803561ffff8116811461327e57600080fd5b919050565b6001600160a01b038116811461329857600080fd5b50565b803561327e81613283565b600061016082840312156132b957600080fd5b6132c161318b565b90506132cc8261326c565b81526132da6020830161329b565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015261331d60e0830161329b565b60e082015261010061333081840161329b565b9082015261012082810135908201526101409182013591810191909152919050565b60006001600160401b0382111561336b5761336b613175565b50601f01601f191660200190565b600082601f83011261338a57600080fd5b813561339d61339882613352565b61323c565b8181528460208386010111156133b257600080fd5b816020850160208301376000918101602001919091529392505050565b60008061018083850312156133e357600080fd5b6133ed84846132a6565b91506101608301356001600160401b0381111561340957600080fd5b61341585828601613379565b9150509250929050565b801515811461329857600080fd5b60008060006060848603121561344257600080fd5b833561344d81613283565b9250602084013561345d81613283565b9150604084013561346d8161341f565b809150509250925092565b6000806040838503121561348b57600080fd5b823561349681613283565b915060208301356134a681613283565b809150509250929050565b60008083601f8401126134c357600080fd5b5081356001600160401b038111156134da57600080fd5b6020830191508360208260051b850101111561066457600080fd5b6000806000806040858703121561350b57600080fd5b84356001600160401b038082111561352257600080fd5b61352e888389016134b1565b9096509450602087013591508082111561354757600080fd5b50613554878288016134b1565b95989497509550505050565b60008060006060848603121561357557600080fd5b83359250602084013561358781613283565b9150604084013561346d81613283565b60006001600160401b038211156135b0576135b0613175565b5060051b60200190565b600082601f8301126135cb57600080fd5b813560206135db61339883613597565b828152606092830285018201928282019190878511156135fa57600080fd5b8387015b8581101561365c5781818a0312156136165760008081fd5b61361e6131b4565b813561362981613283565b81528186013561363881613283565b8187015260408281013561364b8161341f565b9082015284529284019281016135fe565b5090979650505050505050565b6000806040838503121561367c57600080fd5b8235915060208301356001600160401b0381111561369957600080fd5b613415858286016135ba565b6020808252825182820181905260009190848201906040850190845b818110156136dd578351835292840192918401916001016136c1565b50909695505050505050565b60008060008060008060c0878903121561370257600080fd5b61370b8761326c565b955060208701356001600160401b038082111561372757600080fd5b6137338a838b01613379565b9650604089013595506060890135915061374c82613283565b9093506080880135925060a0880135908082111561376957600080fd5b5061377689828a01613379565b9150509295509295509295565b60006020828403121561379557600080fd5b81356117de81613283565b60609190911b6001600160601b031916815260140190565b60005b838110156137d35781810151838201526020016137bb565b50506000910152565b600081518084526137f48160208601602086016137b8565b601f01601f19169290920160200192915050565b80518252602081015160208301526000604082015160606040850152612c6860608501826137dc565b61ffff8616815260ff8516602082015260a06040820152600061385760a08301866137dc565b828103606084015261386981866137dc565b9050828103608084015261387d8185613808565b98975050505050505050565b6000806040838503121561389c57600080fd5b505080516020909101519092909150565b6001600160f81b0319815260609390931b6001600160601b03191660018401526015830191909152603582015260550190565b634e487b7160e01b600052603260045260246000fd5b60ff8116811461329857600080fd5b60006020828403121561391757600080fd5b81356117de816138f6565b6000808335601e1984360301811261393957600080fd5b8301803591506001600160401b0382111561395357600080fd5b60200191503681900382131561066457600080fd5b600082601f83011261397957600080fd5b8135602061398961339883613597565b82815260059290921b840181019181810190868411156139a857600080fd5b8286015b848110156139cc5780356139bf81613283565b83529183019183016139ac565b509695505050505050565b600080604083850312156139ea57600080fd5b82356001600160401b0380821115613a0157600080fd5b613a0d86838701613968565b9350602091508185013581811115613a2457600080fd5b85019050601f81018613613a3757600080fd5b8035613a4561339882613597565b81815260059190911b82018301908381019088831115613a6457600080fd5b928401925b82841015613a8257833582529284019290840190613a69565b80955050505050509250929050565b634e487b7160e01b600052601160045260246000fd5b600060018201613ab957613ab9613a91565b5060010190565b600060208284031215613ad257600080fd5b5035919050565b803562ffffff8116811461327e57600080fd5b60006020808385031215613aff57600080fd5b82356001600160401b03811115613b1557600080fd5b8301601f81018513613b2657600080fd5b8035613b3461339882613597565b81815260a09182028301840191848201919088841115613b5357600080fd5b938501935b83851015613bca5780858a031215613b705760008081fd5b613b786131d6565b853581528686013587820152604080870135613b9381613283565b90820152606086810135613ba681613283565b908201526080613bb7878201613ad9565b9082015283529384019391850191613b58565b50979650505050505050565b60006020808385031215613be957600080fd5b82356001600160401b03811115613bff57600080fd5b8301601f81018513613c1057600080fd5b8035613c1e61339882613597565b81815260e09182028301840191848201919088841115613c3d57600080fd5b938501935b83851015613bca5780858a031215613c5a5760008081fd5b613c626131f8565b853581528686013587820152604080870135613c7d81613283565b90820152606086810135613c9081613283565b90820152608086810135613ca381613283565b9082015260a0613cb4878201613ad9565b9082015260c0613cc5878201613ad9565b9082015283529384019391850191613c42565b60006020808385031215613ceb57600080fd5b82356001600160401b0380821115613d0257600080fd5b818501915085601f830112613d1657600080fd5b8135613d2461339882613597565b81815260059190911b83018401908481019088831115613d4357600080fd5b8585015b83811015613dd857803585811115613d5e57600080fd5b86016080818c03601f19011215613d755760008081fd5b613d7d61321a565b8882013581526040808301358a83015260608084013589811115613da15760008081fd5b613daf8f8d83880101613968565b838501525060808401359350613dc48461341f565b820192909252845250918601918601613d47565b5098975050505050505050565b60006020808385031215613df857600080fd5b82356001600160401b0380821115613e0f57600080fd5b818501915085601f830112613e2357600080fd5b8135613e3161339882613597565b81815260059190911b83018401908481019088831115613e5057600080fd5b8585015b83811015613dd857803585811115613e6b57600080fd5b86016080818c03601f19011215613e825760008081fd5b613e8a61321a565b8882013581526040808301358a83015260608084013589811115613eae5760008081fd5b613ebc8f8d838801016135ba565b928401929092526080939093013592820192909252845250918601918601613e54565b60006020808385031215613ef257600080fd5b82356001600160401b03811115613f0857600080fd5b8301601f81018513613f1957600080fd5b8035613f2761339882613597565b81815260609182028301840191848201919088841115613f4657600080fd5b938501935b83851015613bca5780858a031215613f635760008081fd5b613f6b6131b4565b8535613f7681613283565b815285870135613f8581613283565b818801526040868101359082015283529384019391850191613f4b565b60008060408385031215613fb557600080fd5b8235613fc081613283565b946020939093013593505050565b600060208284031215613fe057600080fd5b5051919050565b818103818111156114ec576114ec613a91565b600082601f83011261400b57600080fd5b8135602061401b61339883613597565b82815260059290921b8401810191818101908684111561403a57600080fd5b8286015b848110156139cc5780356001600160401b0381111561405d5760008081fd5b61406b8986838b0101613379565b84525091830191830161403e565b60008060006101a0848603121561408f57600080fd5b61409985856132a6565b92506101608401356001600160401b03808211156140b657600080fd5b818601915086601f8301126140ca57600080fd5b813560206140da61339883613597565b82815260059290921b8401810191818101908a8411156140f957600080fd5b948201945b83861015614120578535614111816138f6565b825294820194908201906140fe565b965050505061018086013591508082111561413a57600080fd5b5061414786828701613ffa565b9150509250925092565b60006020828403121561416357600080fd5b81516117de8161341f565b808201808211156114ec576114ec613a91565b600082601f83011261419257600080fd5b815160206141a261339883613597565b82815260059290921b840181019181810190868411156141c157600080fd5b8286015b848110156139cc5780516001600160401b038111156141e45760008081fd5b8701603f810189136141f65760008081fd5b84810151604061420861339883613352565b8281528b8284860101111561421d5760008081fd5b61422c838983018487016137b8565b86525050509183019183016141c5565b60008060006060848603121561425157600080fd5b835161425c81613283565b809350506020808501516001600160401b038082111561427b57600080fd5b818701915087601f83011261428f57600080fd5b815161429d61339882613597565b81815260059190911b8301840190848101908a8311156142bc57600080fd5b938501935b828510156142e35784516142d4816138f6565b825293850193908501906142c1565b60408a015190975094505050808311156142fc57600080fd5b505061414786828701614181565b600081518084526020808501945080840160005b8381101561433d57815160ff168752958201959082019060010161431e565b509495945050505050565b600082825180855260208086019550808260051b84010181860160005b8481101561365c57601f198684030189526143818383516137dc565b98840198925090830190600101614365565b6040815260006143a6604083018561430a565b82810360208401526143b88185614348565b95945050505050565b602081526000825160a060208401526143dd60c08401826137dc565b905060018060a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b80820281158282048414176114ec576114ec613a91565b60008261444d57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b03841681526060602082018190526000906144769083018561430a565b82810360408401526144888185614348565b9695505050505050565b600061012061ffff8c1683528a602084015289604084015260018060a01b03891660608401528760808401528660a08401528060c08401526144d681840187613808565b905082810360e08401526144ea81866137dc565b90508281036101008401526144ff81856137dc565b9c9b505050505050505050505050565b600082516145218184602087016137b8565b9190910192915050565b84815283602082015260018060a01b038316604082015260806060820152600061448860808301846137dc565b80516001600160701b038116811461327e57600080fd5b60008060006060848603121561458457600080fd5b61458d84614558565b925061459b60208501614558565b9150604084015163ffffffff8116811461346d57600080fd5b6020815260006117de60208301846137dc56fea2646970667358221220fcc86aebeb8785c3e6c02089a6b458b051957b0dfb77f4f188a7b1194abb6ea764736f6c63430008110033b2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8a26469706673582212204b08a5de92f6ad6c658338095974345eae9866b23921478c83f08534d70415d464736f6c63430008110033",
    "sourceMap": "275:3909:87:-:0;;;1572:26:10;;;-1:-1:-1;;170:28:11;;;;;384:11:87;367:28;;275:3909;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b063649b1161005b578063b063649b146100cc578063ba414fa6146100d4578063f8ccbf47146100ec578063fa7626d4146100ff57600080fd5b80630a9254e4146100825780633a7684631461008c57806356f68044146100c4575b600080fd5b61008a61010c565b005b6100a7737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b61008a610308565b61008a61069c565b6100dc610d17565b60405190151581526020016100bb565b6000546100dc9062010000900460ff1681565b6000546100dc9060ff1681565b60405161011890611157565b604051809103906000f080158015610134573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b039290921691821790556040516006602160991b01919073e592427a0aece92de3edee1f18e0157c0586156490600090819073b0d502e938ed5f4df2e681fe6e419ff29631d62b9061019b90611165565b6001600160a01b039687168152948616602086015292851660408501529084166060840152608083015290911660a082015260c001604051809103906000f0801580156101ec573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b039290921691909117905560405163ca669fa760e01b815273c66825c5c04b3c2ccd536d626934e16248a63f686004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561026d57600080fd5b505af1158015610281573d6000803e3d6000fd5b505060405163a9059cbb60e01b815230600482015264174876e8006024820152737f5c764cbc14f9669b88837ca1490cca17c31607925063a9059cbb91506044016020604051808303816000875af11580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103059190611173565b50565b60408051600380825260808201909252600091602082016060803683375050604080516003808252608082019092529293506000929150602082015b60608152602001906001900390816103445790505090506002826000815181106103705761037061119c565b602002602001019060ff16908160ff16815250506004826001815181106103995761039961119c565b602002602001019060ff16908160ff1681525050600e826002815181106103c2576103c261119c565b60ff9290921660209283029190910190910152604080516001808252818301909252600091816020015b6040805160e08101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c082015282526000199092019101816103ec5750506040805160e081018252678ac7230489e8000081526000602082018190526006602160991b0192820192909252737f5c764cbc14f9669b88837ca1490cca17c31607606082015273da10009cbd5d07dd0cecc66161fc93d7c9000da160808201526101f460a0820181905260c08201528251929350918391906104b9576104b961119c565b6020908102919091010152604080516001808252818301909252600091816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816104db5750506040805160608101825273da10009cbd5d07dd0cecc66161fc93d7c9000da18152306020820152600091810182905282519293509183919061054b5761054b61119c565b6020026020010181905250678ac7230489e8000060405160200161057f919067ffffffffffffffff91909116815260200190565b604051602081830303815290604052836000815181106105a1576105a161119c565b6020026020010181905250816040516020016105bd91906111b2565b604051602081830303815290604052836001815181106105df576105df61119c565b6020026020010181905250806040516020016105fb919061124f565b6040516020818303038152906040528360028151811061061d5761061d61119c565b6020908102919091010152600854604051632efb1dd760e11b81526001600160a01b0390911690635df63bae90678ac7230489e800009061066490889088906004016112cb565b6000604051808303818588803b15801561067d57600080fd5b505af1158015610691573d6000803e3d6000fd5b505050505050505050565b60085460405163095ea7b360e01b81526001600160a01b03909116600482015264174876e8006024820152737f5c764cbc14f9669b88837ca1490cca17c316079063095ea7b3906044016020604051808303816000875af1158015610705573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107299190611173565b5060408051600380825260808201909252600091602082016060803683370190505090506001816000815181106107625761076261119c565b602002602001019060ff16908160ff1681525050600a8160018151811061078b5761078b61119c565b602002602001019060ff16908160ff1681525050600e816002815181106107b4576107b461119c565b60ff929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905064174876e800816000815181106108045761080461119c565b6020908102919091010152604080516001808252818301909252600091816020016020820280368337019050509050737f5c764cbc14f9669b88837ca1490cca17c316078160008151811061085b5761085b61119c565b6001600160a01b03929092166020928302919091019091015260408051600380825260808201909252600091816020015b606081526020019060019003908161088c57905050905081836040516020016108b692919061137e565b604051602081830303815290604052816000815181106108d8576108d861119c565b6020908102919091010152604080516001808252818301909252600091816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816108fa57505060408051606081018252737f5c764cbc14f9669b88837ca1490cca17c3160781526006602160991b01602082015260009181018290528251929350918391906109715761097161119c565b6020908102919091010152604080516001808252818301909252600091816020015b604080516060810182526000808252602080830182905292820152825260001990920191018161099357905050604080516060810182526006602160991b0180825273d471aec6c713379f0b928fa8cb80b9761cd9708d602083015260085483516370a0823160e01b81526001600160a01b0390911660048201529394509092918301916370a0823190602401602060405180830381865afa158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a619190611402565b81525081600081518110610a7757610a7761119c565b6020908102919091010152604080516001808252818301909252600091816020015b610ac46040518060800160405280600081526020016000815260200160608152602001600081525090565b815260200190600190039081610a99579050509050604051806080016040528064174876e80081526020016000815260200184815260200142610258610b0a919061141b565b81525081600081518110610b2057610b2061119c565b602002602001018190525080604051602001610b3c9190611442565b60405160208183030381529060405284600181518110610b5e57610b5e61119c565b602002602001018190525081604051602001610b7a919061124f565b60405160208183030381529060405284600281518110610b9c57610b9c61119c565b6020908102919091010152600854604051632efb1dd760e11b81526001600160a01b0390911690635df63bae90610bd9908a9088906004016112cb565b600060405180830381600087803b158015610bf357600080fd5b505af1158015610c07573d6000803e3d6000fd5b50506008546040516370a0823160e01b81526001600160a01b039091166004820152610c8992506006602160991b0191506370a0823190602401602060405180830381865afa158015610c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c829190611402565b6000610e42565b6040516370a0823160e01b815273d471aec6c713379f0b928fa8cb80b9761cd9708d6004820152610d0e906006602160991b01906370a0823190602401602060405180830381865afa158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d079190611402565b6000610f50565b50505050505050565b60008054610100900460ff1615610d375750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610e3d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610dc5917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611519565b60408051601f1981840301815290829052610ddf9161154a565b6000604051808303816000865af19150503d8060008114610e1c576040519150601f19603f3d011682016040523d82523d6000602084013e610e21565b606091505b5091505080806020019051810190610e399190611173565b9150505b919050565b808214610f4c577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610eb39060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b6060820152602081018390529051600080516020620064b48339815191529181900360800190a160408051818152600a9181019190915269080808081058dd1d585b60b21b606082015260208101839052600080516020620064b4833981519152906080015b60405180910390a1610f4c61104b565b5050565b808211610f4c577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610fc09060208082526021908201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e746040820152605d60f81b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b6060820152602081018490529051600080516020620064b48339815191529181900360800190a1604080518181526009918101919091526810102b30b63ab2903160b91b606082015260208101829052600080516020620064b483398151915290608001610f3c565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156111465760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526110e59291602001611519565b60408051601f19818403018152908290526110ff9161154a565b6000604051808303816000865af19150503d806000811461113c576040519150601f19603f3d011682016040523d82523d6000602084013e611141565b606091505b505050505b6000805461ff001916610100179055565b61078c806200156783390190565b6147c18062001cf383390190565b60006020828403121561118557600080fd5b8151801515811461119557600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b602080825282518282018190526000919060409081850190868401855b82811015611242578151805185528681015187860152858101516001600160a01b03908116878701526060808301518216908701526080808301519091169086015260a08082015162ffffff9081169187019190915260c091820151169085015260e090930192908501906001016111cf565b5091979650505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561124257815180516001600160a01b039081168652878201511687860152850151858501526060909301929085019060010161126c565b60005b838110156112c25781810151838201526020016112aa565b50506000910152565b604080825283519082018190526000906020906060840190828701845b8281101561130757815160ff16845292840192908401906001016112e8565b50505083810382850152845180825282820190600581901b8301840187850160005b8381101561136f57601f198087850301865282518051808652611351818b88018c85016112a7565b96890196601f01909116939093018701925090860190600101611329565b50909998505050505050505050565b604080825283519082018190526000906020906060840190828701845b828110156113c05781516001600160a01b03168452928401929084019060010161139b565b5050508381038285015284518082528583019183019060005b818110156113f5578351835292840192918401916001016113d9565b5090979650505050505050565b60006020828403121561141457600080fd5b5051919050565b8082018082111561143c57634e487b7160e01b600052601160045260246000fd5b92915050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561150a57898403603f190186528251805185528881015189860152878101516080898701819052815190870181905260a08701918b019085905b808210156114e957825180516001600160a01b0390811686528e820151168e8601528c015115158c850152606090930192918c0191600191909101906114a8565b5050506060918201519590910194909452948701949187019160010161146a565b50919998505050505050505050565b6001600160e01b031983168152815160009061153c8160048501602087016112a7565b919091016004019392505050565b6000825161155c8184602087016112a7565b919091019291505056fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61070e8061007e6000396000f3fe60806040526004361061004e5760003560e01c806350431ce41461005a57806351cff8d914610071578063715018a6146100915780638da5cb5b146100a6578063f2fde38b146100d257600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061006f6100f2565b005b34801561007d57600080fd5b5061006f61008c366004610606565b610115565b34801561009d57600080fd5b5061006f6101ae565b3480156100b257600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100de57600080fd5b5061006f6100ed366004610606565b6101c2565b6100fa61023d565b6000546001600160a01b0316476101118282610297565b5050565b61011d61023d565b6101ab6101326000546001600160a01b031690565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a919061062a565b6001600160a01b03841691906102ed565b50565b6101b661023d565b6101c0600061033f565b565b6101ca61023d565b6001600160a01b0381166102345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101ab8161033f565b6000546001600160a01b031633146101c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022b565b600080600080600085875af19050806102e85760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b604482015260640161022b565b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526102e890849061038f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006103e4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104619092919063ffffffff16565b8051909150156102e857808060200190518101906104029190610643565b6102e85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161022b565b60606104708484600085610478565b949350505050565b6060824710156104d95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161022b565b600080866001600160a01b031685876040516104f59190610689565b60006040518083038185875af1925050503d8060008114610532576040519150601f19603f3d011682016040523d82523d6000602084013e610537565b606091505b509150915061054887838387610553565b979650505050505050565b606083156105c25782516000036105bb576001600160a01b0385163b6105bb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161022b565b5081610470565b61047083838151156105d75781518083602001fd5b8060405162461bcd60e51b815260040161022b91906106a5565b6001600160a01b03811681146101ab57600080fd5b60006020828403121561061857600080fd5b8135610623816105f1565b9392505050565b60006020828403121561063c57600080fd5b5051919050565b60006020828403121561065557600080fd5b8151801515811461062357600080fd5b60005b83811015610680578181015183820152602001610668565b50506000910152565b6000825161069b818460208701610665565b9190910192915050565b60208152600082518060208401526106c4816040850160208701610665565b601f01601f1916919091016040019291505056fea26469706673582212208ea5dd7f68088b70d8a22acf702d7362a7a3fc841140a0aef184533480a8db8264736f6c634300081100336101006040526002805460ff191660011790553480156200001f57600080fd5b50604051620047c1380380620047c1833981016040819052620000429162000099565b6001600160a01b03938416608052600080546001600160a01b03191693851693909317909255600155811660a05291821660c0521660e05262000121565b6001600160a01b03811681146200009657600080fd5b50565b60008060008060008060c08789031215620000b357600080fd5b8651620000c08162000080565b6020880151909650620000d38162000080565b6040880151909550620000e68162000080565b6060880151909450620000f98162000080565b608088015160a08901519194509250620001138162000080565b809150509295509295509295565b60805160a05160c05160e0516145fd620001c4600039600081816102d501528181610d350152611ef601526000818161086901528181610c190152610cac01526000818161024d015281816103dd015281816112c001528181612118015281816121ae01526122300152600081816102a1015281816116070152818161168b0152818161176d015281816118890152818161190d01526119e601526145fd6000f3fe6080604052600436106100f75760003560e01c8063ab8236f31161008a578063c7f5fd1011610059578063c7f5fd1014610317578063d5ef98ea1461033f578063e5e31b1314610367578063fdc09e071461039757600080fd5b8063ab8236f31461026f578063c31c9c071461028f578063c415b95c146102c3578063c45a0155146102f757600080fd5b80635e1e6325116100c65780635e1e6325146101c35780639881fcb4146101f85780639aab924814610225578063a9e56f3c1461023b57600080fd5b80634285f6e4146101035780634c1ee03e14610136578063544caa561461016e5780635df63bae146101ae57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5061012361011e3660046133cf565b6103b2565b6040519081526020015b60405180910390f35b34801561014257600080fd5b5061015661015136600461342d565b6104c3565b6040516001600160a01b03909116815260200161012d565b34801561017a57600080fd5b5061018e610189366004613478565b610586565b604080516001600160a01b0393841681529290911660208301520161012d565b6101c16101bc3660046134f5565b61066b565b005b3480156101cf57600080fd5b506101e36101de366004613560565b610dd8565b6040805192835290151560208301520161012d565b34801561020457600080fd5b50610218610213366004613669565b61100c565b60405161012d91906136a5565b34801561023157600080fd5b5061012360015481565b34801561024757600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b34801561027b57600080fd5b506101c161028a3660046136e9565b6112b5565b34801561029b57600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b3480156102cf57600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b34801561030357600080fd5b50600054610156906001600160a01b031681565b34801561032357600080fd5b506101567325cbddb98b35ab1ff77413456b31ec81a6b6b74681565b34801561034b57600080fd5b50610156739c12939390052919af3155f41bf4160fd3666a6f81565b34801561037357600080fd5b50610387610382366004613783565b61146d565b604051901515815260200161012d565b3480156103a357600080fd5b506101566006602160991b0181565b6000808360e001516040516020016103ca91906137a0565b60405160208183030381529060405290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630a51236985600001516001848760405180606001604052808b610120015181526020018b60c0015181526020018b60e0015160405160200161044891906137a0565b6040516020818303038152906040528152506040518663ffffffff1660e01b815260040161047a959493929190613831565b6040805180830381865afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190613889565b50949350505050565b60008060006104d28686610586565b6040516001600160601b0319606084811b8216602084015283901b16603482015286151560f81b604882015291935091507325cbddb98b35ab1ff77413456b31ec81a6b6b7469060490160408051601f19818403018152908290528051602091820120610564939290917fc1ac28b1c4ebe53c0cff67bab5878c4eb68759bb1e9f73977cd266b247d149f091016138ad565b60408051601f1981840301815291905280516020909101209695505050505050565b600080826001600160a01b0316846001600160a01b0316036105ef5760405162461bcd60e51b815260206004820152601b60248201527f526f757465723a204944454e544943414c5f414444524553534553000000000060448201526064015b60405180910390fd5b826001600160a01b0316846001600160a01b03161061060f578284610612565b83835b90925090506001600160a01b0382166106645760405162461bcd60e51b8152602060048201526014602482015273526f757465723a205a45524f5f4144445245535360601b60448201526064016105e6565b9250929050565b60025460ff166001146106ad5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016105e6565b6002805460ff1916811790558281146106d9576040516373f8993760e11b815260040160405180910390fd5b60005b83811015610dc45760008585838181106106f8576106f86138e0565b905060200201602081019061070d9190613905565b905060001960ff82160161080557600080858585818110610730576107306138e0565b90506020028101906107429190613922565b81019061074f91906139d7565b9150915060005b82518110156107fd576000828281518110610773576107736138e0565b6020026020010151116107995760405163fe4155c760e01b815260040160405180910390fd5b6107eb33308484815181106107b0576107b06138e0565b60200260200101518685815181106107ca576107ca6138e0565b60200260200101516001600160a01b03166114f2909392919063ffffffff16565b806107f581613aa7565b915050610756565b505050610db1565b60011960ff8216016108e1576000848484818110610825576108256138e0565b90506020028101906108379190613922565b8101906108449190613ac0565b9050600081116108675760405163fe4155c760e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156108c257600080fd5b505af11580156108d6573d6000803e3d6000fd5b505050505050610db1565b60021960ff821601610971576000848484818110610901576109016138e0565b90506020028101906109139190613922565b8101906109209190613aec565b905060005b815181101561096a576000828281518110610942576109426138e0565b6020026020010151905061095581611563565b5050808061096290613aa7565b915050610925565b5050610db1565b60031960ff8216016109f3576000848484818110610991576109916138e0565b90506020028101906109a39190613922565b8101906109b09190613bd6565b905060005b815181101561096a576109e08282815181106109d3576109d36138e0565b60200260200101516117e5565b50806109eb81613aa7565b9150506109b5565b60041960ff821601610a75576000848484818110610a1357610a136138e0565b9050602002810190610a259190613922565b810190610a329190613cd8565b905060005b815181101561096a57610a62828281518110610a5557610a556138e0565b6020026020010151611a30565b5080610a6d81613aa7565b915050610a37565b60091960ff821601610af7576000848484818110610a9557610a956138e0565b9050602002810190610aa79190613922565b810190610ab49190613de5565b905060005b815181101561096a57610ae4828281518110610ad757610ad76138e0565b6020026020010151611c24565b5080610aef81613aa7565b915050610ab9565b600d1960ff821601610bb8576000848484818110610b1757610b176138e0565b9050602002810190610b299190613922565b810190610b369190613edf565b905060005b815181101561096a57610ba6828281518110610b5957610b596138e0565b602002602001015160000151838381518110610b7757610b776138e0565b602002602001015160400151848481518110610b9557610b956138e0565b602002602001015160200151611e55565b80610bb081613aa7565b915050610b3b565b600c1960ff821601610d5a57600080858585818110610bd957610bd96138e0565b9050602002810190610beb9190613922565b810190610bf89190613fa2565b9150915080600003610c91576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8c9190613fce565b610c93565b805b604051632e1a7d4d60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610cf857600080fd5b505af1158015610d0c573d6000803e3d6000fd5b505050506000610d1b82611f77565b9050610d3083610d2b8385613fe7565b611f9c565b6107fd7f000000000000000000000000000000000000000000000000000000000000000082611f9c565b600e1960ff821601610db1576000806000868686818110610d7d57610d7d6138e0565b9050602002810190610d8f9190613922565b810190610d9c9190614079565b925092509250610dad838383611ff2565b5050505b5080610dbc81613aa7565b9150506106dc565b50506002805460ff19166001179055505050565b6000806000610de9858560016104c3565b60405163e5e31b1360e01b81526001600160a01b038216600482015290915060009081907325cbddb98b35ab1ff77413456b31ec81a6b6b7469063e5e31b1390602401602060405180830381865afa158015610e49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6d9190614151565b15610ee6576040516378a051ad60e11b8152600481018990526001600160a01b03888116602483015284169063f140a35a90604401602060405180830381865afa158015610ebf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee39190613fce565b91505b610ef2878760006104c3565b60405163e5e31b1360e01b81526001600160a01b03821660048201529093507325cbddb98b35ab1ff77413456b31ec81a6b6b7469063e5e31b1390602401602060405180830381865afa158015610f4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f719190614151565b15610fea576040516378a051ad60e11b8152600481018990526001600160a01b03888116602483015284169063f140a35a90604401602060405180830381865afa158015610fc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe79190613fce565b90505b808211610ff957806000610ffd565b8160015b94509450505050935093915050565b60606001825110156110575760405162461bcd60e51b81526020600482015260146024820152730a4deeae8cae47440929cac82989288bea082a8960631b60448201526064016105e6565b815161106490600161416e565b6001600160401b0381111561107b5761107b613175565b6040519080825280602002602001820160405280156110a4578160200160208202803683370190505b50905082816000815181106110bb576110bb6138e0565b60200260200101818152505060005b82518110156112ae5760006111378483815181106110ea576110ea6138e0565b602002602001015160000151858481518110611108576111086138e0565b602002602001015160200151868581518110611126576111266138e0565b6020026020010151604001516104c3565b60405163e5e31b1360e01b81526001600160a01b03821660048201529091507325cbddb98b35ab1ff77413456b31ec81a6b6b7469063e5e31b1390602401602060405180830381865afa158015611192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b69190614151565b1561129b57806001600160a01b031663f140a35a8484815181106111dc576111dc6138e0565b60200260200101518685815181106111f6576111f66138e0565b6020026020010151600001516040518363ffffffff1660e01b81526004016112319291909182526001600160a01b0316602082015260400190565b602060405180830381865afa15801561124e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112729190613fce565b8361127e84600161416e565b8151811061128e5761128e6138e0565b6020026020010181815250505b50806112a681613aa7565b9150506110ca565b5092915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112fe57604051638afe477f60e01b815260040160405180910390fd5b600080620186a081815a6113129190613fe7565b905060008060008780602001905181019061132d919061423c565b925092509250845a101561135f5761134f6001600160a01b038b16848b612340565b471561135f5761135f8347611f9c565b604051632efb1dd760e11b81523090635df63bae9086906113869086908690600401614393565b600060405180830381600088803b1580156113a057600080fd5b5087f1935050505080156113b2575060015b611400573d8080156113e0576040519150601f19603f3d011682016040523d82523d6000602084013e6113e5565b606091505b506113fa6001600160a01b038c16858c612340565b60019750505b4715611410576114108347611f9c565b604080518a815288151560208201528715158183015290516001600160a01b038c16917f7f345d6da48bd1339fd428ff45265a0f01258b14ca09dcf8db0c469f4f732fd3919081900360600190a250505050505050505050505050565b60405163e5e31b1360e01b81526001600160a01b03821660048201526000907325cbddb98b35ab1ff77413456b31ec81a6b6b7469063e5e31b1390602401602060405180830381865afa1580156114c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ec9190614151565b92915050565b6040516001600160a01b038085166024830152831660448201526064810182905261155d9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612370565b50505050565b8051600090156115745781516115e2565b60408083015190516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156115be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e29190613fce565b8083526040808401519051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301529091169063dd62ed3e90604401602060405180830381865afa158015611657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167b9190613fce565b10156116b2576116b282604001517f0000000000000000000000000000000000000000000000000000000000000000600019612442565b6040805161010081018252838201516001600160a01b0390811682526060808601518216602080850191825260808089015162ffffff90811687890190815230958801958652429288019283528a5160a08901908152938b015160c08901908152600060e08a01908152995163414bf38960e01b8152895189166004820152955188166024870152905190911660448501529351851660648401525160848301525160a4820152905160c48201529251811660e484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104015b6020604051808303816000875af11580156117ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117de9190613fce565b9392505050565b8051600090156117f6578151611864565b60408083015190516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118649190613fce565b8083526040808401519051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301529091169063dd62ed3e90604401602060405180830381865afa1580156118d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fd9190613fce565b10156119345761193482604001517f0000000000000000000000000000000000000000000000000000000000000000600019612442565b6040805160a08082018352918401519184015160608086015160c08088015160808901516001600160601b031997851b8816928701929092526001600160e81b031960e895861b811660d488015292841b871660d787015290931b1660eb8401521b90911660ee8201526000908061010281016040516020818303038152906040528152602001306001600160a01b0316815260200142815260200184600001518152602001846020015181525090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c04b8d59826040518263ffffffff1660e01b815260040161179b91906143c1565b805160009015611a41578151611acc565b8160400151600081518110611a5857611a586138e0565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acc9190613fce565b8083526000805460408501516001549293611af5936001600160a01b0390931692909190612542565b90508060018251611b069190613fe7565b81518110611b1657611b166138e0565b602002602001015191508260200151821015611b745760405162461bcd60e51b815260206004820152601760248201527f696e73756666696369656e742d616d6f756e742d6f757400000000000000000060448201526064016105e6565b826060015115611c0f576000805460408501518051611c0f93611bd7936001600160a01b03169291611ba857611ba86138e0565b60200260200101518660400151600181518110611bc757611bc76138e0565b60200260200101516001546126c5565b845160408601518051600090611bef57611bef6138e0565b60200260200101516001600160a01b03166123409092919063ffffffff16565b611c1e8184604001513061274b565b50919050565b6060816060015142811015611c6d5760405162461bcd60e51b815260206004820152600f60248201526e149bdd5d195c8e8811561412549151608a1b60448201526064016105e6565b825115611c7b578251611d07565b8260400151600081518110611c9257611c926138e0565b6020908102919091010151516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d079190613fce565b8084526040840151611d19919061100c565b915082602001518260018451611d2f9190613fe7565b81518110611d3f57611d3f6138e0565b60200260200101511015611da05760405162461bcd60e51b815260206004820152602260248201527f526f757465723a20494e53554646494349454e545f4f55545055545f414d4f55604482015261139560f21b60648201526084016105e6565b611e468360400151600081518110611dba57611dba6138e0565b602002602001015160000151611e268560400151600081518110611de057611de06138e0565b6020026020010151600001518660400151600081518110611e0357611e036138e0565b6020026020010151602001518760400151600081518110611126576111266138e0565b84600081518110611e3957611e396138e0565b6020026020010151612922565b611c1e82846040015130612a0a565b81600003611eca576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015611ea1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec59190613fce565b611ecc565b815b91506000611ed983611f77565b9050611ee58184613fe7565b9250611f1b6001600160a01b0385167f000000000000000000000000000000000000000000000000000000000000000083612340565b611f2f6001600160a01b0385168385612340565b604080516001600160a01b0386168152602081018390527f075a2720282fdf622141dae0b048ef90a21a7e57c134c76912d19d006b3b3f6f910160405180910390a150505050565b6000612710611f888361270b614419565b611f929190614430565b6114ec9083613fe7565b600080600080600085875af1905080611fed5760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b60448201526064016105e6565b505050565b8051825114612014576040516373f8993760e11b815260040160405180910390fd5b620186a0836101200151101561203d57604051636eb14fc360e11b815260040160405180910390fd5b6000836101000151838360405160200161205993929190614452565b604051602081830303815290604052905083608001516000036120e95760208401516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156120c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120e49190613fce565b6120ef565b83608001515b608085018190526020850151604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301529091169063dd62ed3e90604401602060405180830381865afa158015612168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061218c9190613fce565b101561222e57602084015160405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015612208573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061222c9190614151565b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639fbf10fc47866000015187604001518860600151338a608001518b60a0015160405180606001604052808e610120015181526020018e60c0015181526020018e60e001516040516020016122ad91906137a0565b6040516020818303038152906040528152508d60e001516040516020016122d491906137a0565b6040516020818303038152906040528b6040518b63ffffffff1660e01b815260040161230899989796959493929190614492565b6000604051808303818588803b15801561232157600080fd5b505af1158015612335573d6000803e3d6000fd5b505050505050505050565b6040516001600160a01b038316602482015260448101829052611fed90849063a9059cbb60e01b90606401611526565b60006123c5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612c599092919063ffffffff16565b805190915015611fed57808060200190518101906123e39190614151565b611fed5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105e6565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b179052915160009283929087169161249e919061450f565b6000604051808303816000865af19150503d80600081146124db576040519150601f19603f3d011682016040523d82523d6000602084013e6124e0565b606091505b509150915081801561250a57508051158061250a57508080602001905181019061250a9190614151565b61253b5760405162461bcd60e51b8152602060048201526002602482015261534160f01b60448201526064016105e6565b5050505050565b60606002835110156125965760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f50415448000060448201526064016105e6565b82516001600160401b038111156125af576125af613175565b6040519080825280602002602001820160405280156125d8578160200160208202803683370190505b50905083816000815181106125ef576125ef6138e0565b60200260200101818152505060005b6001845161260c9190613fe7565b8110156104ba576000806126608887858151811061262c5761262c6138e0565b602002602001015188866001612642919061416e565b81518110612652576126526138e0565b602002602001015188612c70565b91509150612688848481518110612679576126796138e0565b60200260200101518383612d3c565b8461269485600161416e565b815181106126a4576126a46138e0565b602002602001018181525050505080806126bd90613aa7565b9150506125fe565b60008060006126d48686612e5b565b6040516001600160601b0319606084811b8216602084015283901b166034820152919350915087906048016040516020818303038152906040528051906020012085604051602001612728939291906138ad565b60408051601f198184030181529190528051602090910120979650505050505050565b60005b6001835161275c9190613fe7565b81101561155d57600080848381518110612778576127786138e0565b60200260200101518584600161278e919061416e565b8151811061279e5761279e6138e0565b60200260200101519150915060006127b68383612e5b565b5090506000876127c786600161416e565b815181106127d7576127d76138e0565b60200260200101519050600080836001600160a01b0316866001600160a01b03161461280557826000612809565b6000835b91509150600060028a5161281d9190613fe7565b88106128295788612856565b600054612856906001600160a01b0316878c6128468c600261416e565b81518110611bc757611bc76138e0565b905061287960008054906101000a90046001600160a01b031688886001546126c5565b6001600160a01b031663022c0d9f84848460006040519080825280601f01601f1916602001820160405280156128b6576020820181803683370190505b506040518563ffffffff1660e01b81526004016128d6949392919061452b565b600060405180830381600087803b1580156128f057600080fd5b505af1158015612904573d6000803e3d6000fd5b5050505050505050505050808061291a90613aa7565b91505061274e565b6000836001600160a01b03163b1161293957600080fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691612995919061450f565b6000604051808303816000865af19150503d80600081146129d2576040519150601f19603f3d011682016040523d82523d6000602084013e6129d7565b606091505b5091509150818015612a01575080511580612a01575080806020019051810190612a019190614151565b61253b57600080fd5b60005b825181101561155d576000612a5c848381518110612a2d57612a2d6138e0565b602002602001015160000151858481518110612a4b57612a4b6138e0565b602002602001015160200151610586565b509050600085612a6d84600161416e565b81518110612a7d57612a7d6138e0565b60200260200101519050600080836001600160a01b0316878681518110612aa657612aa66138e0565b6020026020010151600001516001600160a01b031614612ac857826000612acc565b6000835b91509150600060018851612ae09190613fe7565b8610612aec5786612b5f565b612b5f88612afb88600161416e565b81518110612b0b57612b0b6138e0565b60200260200101516000015189886001612b25919061416e565b81518110612b3557612b356138e0565b6020026020010151602001518a896001612b4f919061416e565b81518110611126576111266138e0565b9050612bb2888781518110612b7657612b766138e0565b602002602001015160000151898881518110612b9457612b946138e0565b6020026020010151602001518a8981518110611126576111266138e0565b6001600160a01b031663022c0d9f84848460006040519080825280601f01601f191660200182016040528015612bef576020820181803683370190505b506040518563ffffffff1660e01b8152600401612c0f949392919061452b565b600060405180830381600087803b158015612c2957600080fd5b505af1158015612c3d573d6000803e3d6000fd5b5050505050505050508080612c5190613aa7565b915050612a0d565b6060612c688484600085612f4b565b949350505050565b6000806000612c7f8686612e5b565b509050600080612c91898989896126c5565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015612cce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cf2919061456f565b506001600160701b031691506001600160701b03169150826001600160a01b0316886001600160a01b031614612d29578082612d2c565b81815b909a909950975050505050505050565b6000808411612da15760405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201526a1394155517d05353d5539560aa1b60648201526084016105e6565b600083118015612db15750600082115b612e0e5760405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c604482015267495155494449545960c01b60648201526084016105e6565b6000612e1c856103e561301b565b90506000612e2a828561301b565b90506000612e4483612e3e886103e861301b565b90613082565b9050612e508183614430565b979650505050505050565b600080826001600160a01b0316846001600160a01b031603612ecd5760405162461bcd60e51b815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f41444452604482015264455353455360d81b60648201526084016105e6565b826001600160a01b0316846001600160a01b031610612eed578284612ef0565b83835b90925090506001600160a01b0382166106645760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f41444452455353000060448201526064016105e6565b606082471015612fac5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105e6565b600080866001600160a01b03168587604051612fc8919061450f565b60006040518083038185875af1925050503d8060008114613005576040519150601f19603f3d011682016040523d82523d6000602084013e61300a565b606091505b5091509150612e50878383876130d7565b600081158061303f575082826130318183614419565b925061303d9083614430565b145b6114ec5760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b60448201526064016105e6565b60008261308f838261416e565b91508110156114ec5760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b60448201526064016105e6565b6060831561314657825160000361313f576001600160a01b0385163b61313f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105e6565b5081612c68565b612c68838381511561315b5781518083602001fd5b8060405162461bcd60e51b81526004016105e691906145b4565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b03811182821017156131ae576131ae613175565b60405290565b604051606081016001600160401b03811182821017156131ae576131ae613175565b60405160a081016001600160401b03811182821017156131ae576131ae613175565b60405160e081016001600160401b03811182821017156131ae576131ae613175565b604051608081016001600160401b03811182821017156131ae576131ae613175565b604051601f8201601f191681016001600160401b038111828210171561326457613264613175565b604052919050565b803561ffff8116811461327e57600080fd5b919050565b6001600160a01b038116811461329857600080fd5b50565b803561327e81613283565b600061016082840312156132b957600080fd5b6132c161318b565b90506132cc8261326c565b81526132da6020830161329b565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015261331d60e0830161329b565b60e082015261010061333081840161329b565b9082015261012082810135908201526101409182013591810191909152919050565b60006001600160401b0382111561336b5761336b613175565b50601f01601f191660200190565b600082601f83011261338a57600080fd5b813561339d61339882613352565b61323c565b8181528460208386010111156133b257600080fd5b816020850160208301376000918101602001919091529392505050565b60008061018083850312156133e357600080fd5b6133ed84846132a6565b91506101608301356001600160401b0381111561340957600080fd5b61341585828601613379565b9150509250929050565b801515811461329857600080fd5b60008060006060848603121561344257600080fd5b833561344d81613283565b9250602084013561345d81613283565b9150604084013561346d8161341f565b809150509250925092565b6000806040838503121561348b57600080fd5b823561349681613283565b915060208301356134a681613283565b809150509250929050565b60008083601f8401126134c357600080fd5b5081356001600160401b038111156134da57600080fd5b6020830191508360208260051b850101111561066457600080fd5b6000806000806040858703121561350b57600080fd5b84356001600160401b038082111561352257600080fd5b61352e888389016134b1565b9096509450602087013591508082111561354757600080fd5b50613554878288016134b1565b95989497509550505050565b60008060006060848603121561357557600080fd5b83359250602084013561358781613283565b9150604084013561346d81613283565b60006001600160401b038211156135b0576135b0613175565b5060051b60200190565b600082601f8301126135cb57600080fd5b813560206135db61339883613597565b828152606092830285018201928282019190878511156135fa57600080fd5b8387015b8581101561365c5781818a0312156136165760008081fd5b61361e6131b4565b813561362981613283565b81528186013561363881613283565b8187015260408281013561364b8161341f565b9082015284529284019281016135fe565b5090979650505050505050565b6000806040838503121561367c57600080fd5b8235915060208301356001600160401b0381111561369957600080fd5b613415858286016135ba565b6020808252825182820181905260009190848201906040850190845b818110156136dd578351835292840192918401916001016136c1565b50909695505050505050565b60008060008060008060c0878903121561370257600080fd5b61370b8761326c565b955060208701356001600160401b038082111561372757600080fd5b6137338a838b01613379565b9650604089013595506060890135915061374c82613283565b9093506080880135925060a0880135908082111561376957600080fd5b5061377689828a01613379565b9150509295509295509295565b60006020828403121561379557600080fd5b81356117de81613283565b60609190911b6001600160601b031916815260140190565b60005b838110156137d35781810151838201526020016137bb565b50506000910152565b600081518084526137f48160208601602086016137b8565b601f01601f19169290920160200192915050565b80518252602081015160208301526000604082015160606040850152612c6860608501826137dc565b61ffff8616815260ff8516602082015260a06040820152600061385760a08301866137dc565b828103606084015261386981866137dc565b9050828103608084015261387d8185613808565b98975050505050505050565b6000806040838503121561389c57600080fd5b505080516020909101519092909150565b6001600160f81b0319815260609390931b6001600160601b03191660018401526015830191909152603582015260550190565b634e487b7160e01b600052603260045260246000fd5b60ff8116811461329857600080fd5b60006020828403121561391757600080fd5b81356117de816138f6565b6000808335601e1984360301811261393957600080fd5b8301803591506001600160401b0382111561395357600080fd5b60200191503681900382131561066457600080fd5b600082601f83011261397957600080fd5b8135602061398961339883613597565b82815260059290921b840181019181810190868411156139a857600080fd5b8286015b848110156139cc5780356139bf81613283565b83529183019183016139ac565b509695505050505050565b600080604083850312156139ea57600080fd5b82356001600160401b0380821115613a0157600080fd5b613a0d86838701613968565b9350602091508185013581811115613a2457600080fd5b85019050601f81018613613a3757600080fd5b8035613a4561339882613597565b81815260059190911b82018301908381019088831115613a6457600080fd5b928401925b82841015613a8257833582529284019290840190613a69565b80955050505050509250929050565b634e487b7160e01b600052601160045260246000fd5b600060018201613ab957613ab9613a91565b5060010190565b600060208284031215613ad257600080fd5b5035919050565b803562ffffff8116811461327e57600080fd5b60006020808385031215613aff57600080fd5b82356001600160401b03811115613b1557600080fd5b8301601f81018513613b2657600080fd5b8035613b3461339882613597565b81815260a09182028301840191848201919088841115613b5357600080fd5b938501935b83851015613bca5780858a031215613b705760008081fd5b613b786131d6565b853581528686013587820152604080870135613b9381613283565b90820152606086810135613ba681613283565b908201526080613bb7878201613ad9565b9082015283529384019391850191613b58565b50979650505050505050565b60006020808385031215613be957600080fd5b82356001600160401b03811115613bff57600080fd5b8301601f81018513613c1057600080fd5b8035613c1e61339882613597565b81815260e09182028301840191848201919088841115613c3d57600080fd5b938501935b83851015613bca5780858a031215613c5a5760008081fd5b613c626131f8565b853581528686013587820152604080870135613c7d81613283565b90820152606086810135613c9081613283565b90820152608086810135613ca381613283565b9082015260a0613cb4878201613ad9565b9082015260c0613cc5878201613ad9565b9082015283529384019391850191613c42565b60006020808385031215613ceb57600080fd5b82356001600160401b0380821115613d0257600080fd5b818501915085601f830112613d1657600080fd5b8135613d2461339882613597565b81815260059190911b83018401908481019088831115613d4357600080fd5b8585015b83811015613dd857803585811115613d5e57600080fd5b86016080818c03601f19011215613d755760008081fd5b613d7d61321a565b8882013581526040808301358a83015260608084013589811115613da15760008081fd5b613daf8f8d83880101613968565b838501525060808401359350613dc48461341f565b820192909252845250918601918601613d47565b5098975050505050505050565b60006020808385031215613df857600080fd5b82356001600160401b0380821115613e0f57600080fd5b818501915085601f830112613e2357600080fd5b8135613e3161339882613597565b81815260059190911b83018401908481019088831115613e5057600080fd5b8585015b83811015613dd857803585811115613e6b57600080fd5b86016080818c03601f19011215613e825760008081fd5b613e8a61321a565b8882013581526040808301358a83015260608084013589811115613eae5760008081fd5b613ebc8f8d838801016135ba565b928401929092526080939093013592820192909252845250918601918601613e54565b60006020808385031215613ef257600080fd5b82356001600160401b03811115613f0857600080fd5b8301601f81018513613f1957600080fd5b8035613f2761339882613597565b81815260609182028301840191848201919088841115613f4657600080fd5b938501935b83851015613bca5780858a031215613f635760008081fd5b613f6b6131b4565b8535613f7681613283565b815285870135613f8581613283565b818801526040868101359082015283529384019391850191613f4b565b60008060408385031215613fb557600080fd5b8235613fc081613283565b946020939093013593505050565b600060208284031215613fe057600080fd5b5051919050565b818103818111156114ec576114ec613a91565b600082601f83011261400b57600080fd5b8135602061401b61339883613597565b82815260059290921b8401810191818101908684111561403a57600080fd5b8286015b848110156139cc5780356001600160401b0381111561405d5760008081fd5b61406b8986838b0101613379565b84525091830191830161403e565b60008060006101a0848603121561408f57600080fd5b61409985856132a6565b92506101608401356001600160401b03808211156140b657600080fd5b818601915086601f8301126140ca57600080fd5b813560206140da61339883613597565b82815260059290921b8401810191818101908a8411156140f957600080fd5b948201945b83861015614120578535614111816138f6565b825294820194908201906140fe565b965050505061018086013591508082111561413a57600080fd5b5061414786828701613ffa565b9150509250925092565b60006020828403121561416357600080fd5b81516117de8161341f565b808201808211156114ec576114ec613a91565b600082601f83011261419257600080fd5b815160206141a261339883613597565b82815260059290921b840181019181810190868411156141c157600080fd5b8286015b848110156139cc5780516001600160401b038111156141e45760008081fd5b8701603f810189136141f65760008081fd5b84810151604061420861339883613352565b8281528b8284860101111561421d5760008081fd5b61422c838983018487016137b8565b86525050509183019183016141c5565b60008060006060848603121561425157600080fd5b835161425c81613283565b809350506020808501516001600160401b038082111561427b57600080fd5b818701915087601f83011261428f57600080fd5b815161429d61339882613597565b81815260059190911b8301840190848101908a8311156142bc57600080fd5b938501935b828510156142e35784516142d4816138f6565b825293850193908501906142c1565b60408a015190975094505050808311156142fc57600080fd5b505061414786828701614181565b600081518084526020808501945080840160005b8381101561433d57815160ff168752958201959082019060010161431e565b509495945050505050565b600082825180855260208086019550808260051b84010181860160005b8481101561365c57601f198684030189526143818383516137dc565b98840198925090830190600101614365565b6040815260006143a6604083018561430a565b82810360208401526143b88185614348565b95945050505050565b602081526000825160a060208401526143dd60c08401826137dc565b905060018060a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b80820281158282048414176114ec576114ec613a91565b60008261444d57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b03841681526060602082018190526000906144769083018561430a565b82810360408401526144888185614348565b9695505050505050565b600061012061ffff8c1683528a602084015289604084015260018060a01b03891660608401528760808401528660a08401528060c08401526144d681840187613808565b905082810360e08401526144ea81866137dc565b90508281036101008401526144ff81856137dc565b9c9b505050505050505050505050565b600082516145218184602087016137b8565b9190910192915050565b84815283602082015260018060a01b038316604082015260806060820152600061448860808301846137dc565b80516001600160701b038116811461327e57600080fd5b60008060006060848603121561458457600080fd5b61458d84614558565b925061459b60208501614558565b9150604084015163ffffffff8116811461346d57600080fd5b6020815260006117de60208301846137dc56fea2646970667358221220fcc86aebeb8785c3e6c02089a6b458b051957b0dfb77f4f188a7b1194abb6ea764736f6c63430008110033b2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8a26469706673582212204b08a5de92f6ad6c658338095974345eae9866b23921478c83f08534d70415d464736f6c63430008110033",
    "sourceMap": "275:3909:87:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;402:677;;;:::i;:::-;;321:38:11;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:88;;;171:51;;159:2;144:18;321:38:11;;;;;;;;2973:1209:87;;;:::i;1085:1882::-;;;:::i;1819:584:10:-;;;:::i;:::-;;;398:14:88;;391:22;373:41;;361:2;346:18;1819:584:10;233:187:88;170:28:11;;;;;;;;;;;;1572:26:10;;;;;;;;;402:677:87;451:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;436:12:87;:33;;-1:-1:-1;;;;;;436:33:87;-1:-1:-1;;;;;436:33:87;;;;;;;;;487:422;;-1:-1:-1;;;;;525:42:87;436:33;629:42;;-1:-1:-1;;;;856:42:87;;487:422;;;:::i;:::-;-1:-1:-1;;;;;830:15:88;;;812:34;;882:15;;;877:2;862:18;;855:43;934:15;;;929:2;914:18;;907:43;986:15;;;981:2;966:18;;959:43;1033:3;1018:19;;1011:35;1083:15;;;792:3;1062:19;;1055:44;761:3;746:19;487:422:87;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;479:5:87;:430;;-1:-1:-1;;;;;;479:430:87;-1:-1:-1;;;;;479:430:87;;;;;;;;;;920:61;;-1:-1:-1;;;920:61:87;;937:42;920:61;;;171:51:88;250:64:11;;920:8:87;;144:18:88;;920:61:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;991:81:87;;-1:-1:-1;;;991:81:87;;1059:4;991:81;;;1511:51:88;1066:5:87;1578:18:88;;;1571:34;998:42:87;;-1:-1:-1;991:59:87;;-1:-1:-1;1484:18:88;;991:81:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;402:677::o;2973:1209::-;3048:14;;;3060:1;3048:14;;;;;;;;;3025:20;;3048:14;;;;;;;;-1:-1:-1;;3094:14:87;;;3106:1;3094:14;;;;;;;;;3025:37;;-1:-1:-1;3072:19:87;;3094:14;-1:-1:-1;3094:14:87;;;;;;;;;;;;;;;;;;;;3072:36;;3130:1;3119:5;3125:1;3119:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;;;;;;;3152:1;3141:5;3147:1;3141:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;;;;;;;3174:2;3163:5;3169:1;3163:8;;;;;;;;:::i;:::-;:13;;;;;:8;;;;;;;;;;;:13;3242:37;;;3277:1;3242:37;;;;;;;;;3187:52;;3242:37;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3242:37:87;;-1:-1:-1;;3242:37:87;;;;;;;;-1:-1:-1;;3309:367:87;;;;;;;;3363:8;3309:367;;-1:-1:-1;3309:367:87;;;;;;-1:-1:-1;;;;;3309:367:87;;;;;;;3503:42;3309:367;;;;3576:42;3309:367;;;;3639:3;3309:367;;;;;;;;;;3289:17;;;;-1:-1:-1;3309:367:87;3289:17;;-1:-1:-1;3289:17:87;;;;:::i;:::-;;;;;;;;;;:387;3745:40;;;3783:1;3745:40;;;;;;;;;3687:55;;3745:40;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;3745:40:87;;-1:-1:-1;;3745:40:87;;;;;;;;-1:-1:-1;;3816:166:87;;;;;;;;3869:42;3816:166;;3943:4;3816:166;;;;-1:-1:-1;3816:166:87;;;;;;3796:17;;3687:98;;-1:-1:-1;3816:166:87;3687:98;;-1:-1:-1;3796:17:87;;;;:::i;:::-;;;;;;:186;;;;4014:8;4003:20;;;;;;;2364:18:88;2352:31;;;;2334:50;;2322:2;2307:18;;2162:228;4003:20:87;;;;;;;;;;;;;3993:4;3998:1;3993:7;;;;;;;;:::i;:::-;;;;;;:30;;;;4054:14;4043:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;4033:4;4038:1;4033:7;;;;;;;;:::i;:::-;;;;;;:36;;;;4100:14;4089:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;4079:4;4084:1;4079:7;;;;;;;;:::i;:::-;;;;;;;;;;:36;4126:5;;:49;;-1:-1:-1;;;4126:49:87;;-1:-1:-1;;;;;4126:5:87;;;;:19;;4153:8;;4126:49;;4163:5;;4170:4;;4126:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3015:1167;;;;2973:1209::o;1085:1882::-;1189:5;;1122:81;;-1:-1:-1;;;1122:81:87;;-1:-1:-1;;;;;1189:5:87;;;1122:81;;;1511:51:88;1197:5:87;1578:18:88;;;1571:34;1129:42:87;;1122:58;;1484:18:88;;1122:81:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1236:14:87;;;1248:1;1236:14;;;;;;;;;1213:20;;1236:14;;;;;;;;;;-1:-1:-1;1236:14:87;1213:37;;1271:1;1260:5;1266:1;1260:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;;;;;;;1293:2;1282:5;1288:1;1282:8;;;;;;;;:::i;:::-;;;;;;:13;;;;;;;;;;;1316:2;1305:5;1311:1;1305:8;;;;;;;;:::i;:::-;:13;;;;;:8;;;;;;;;;;;:13;1356:16;;;1370:1;1356:16;;;;;;;;;1329:24;;1356:16;;;;;;;;;;;;-1:-1:-1;1356:16:87;1329:43;;1395:5;1382:7;1390:1;1382:10;;;;;;;;:::i;:::-;;;;;;;;;;:18;1437:16;;;1451:1;1437:16;;;;;;;;;1411:23;;1437:16;;;;;;;;;;;;-1:-1:-1;1437:16:87;1411:42;;1483;1463:6;1470:1;1463:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1463:63:87;;;;:9;;;;;;;;;;;:63;1559:14;;;1571:1;1559:14;;;;;;;;;1537:19;;1559:14;;;;;;;;;;;;;;;;;;;;1537:36;;1604:6;1612:7;1593:27;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1583:4;1588:1;1583:7;;;;;;;;:::i;:::-;;;;;;;;;;:37;1672:31;;;1701:1;1672:31;;;;;;;;;1631:38;;1672:31;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;1672:31:87;;-1:-1:-1;;1672:31:87;;;;;;;;-1:-1:-1;;1725:181:87;;;;;;;;1769:42;1725:181;;-1:-1:-1;;;;;1725:181:87;;;;-1:-1:-1;1725:181:87;;;;;;1713:9;;;;-1:-1:-1;1725:181:87;1713:9;;-1:-1:-1;1713:9:87;;;;:::i;:::-;;;;;;;;;;:193;1969:41;;;2008:1;1969:41;;;;;;;;;1916:50;;1969:41;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;1969:41:87;;-1:-1:-1;;1969:41:87;;;;;;;;;;-1:-1:-1;2035:297:87;;;;;;;;-1:-1:-1;;;;;2035:297:87;;;2171:42;2035:297;;;;2314:5;;2236:85;;-1:-1:-1;;;2236:85:87;;-1:-1:-1;;;;;2314:5:87;;;2236:85;;;171:51:88;1916:94:87;;-1:-1:-1;2035:297:87;;;;;;2236:69;;144:18:88;;2236:85:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2035:297;;;2020:9;2030:1;2020:12;;;;;;;;:::i;:::-;;;;;;;;;;:312;2392:36;;;2426:1;2392:36;;;;;;;;;2342:47;;2392:36;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2392:36:87;;;;;;;;;;;;;;;;2342:86;;2454:75;;;;;;;;2482:5;2454:75;;;;2489:1;2454:75;;;;2492:6;2454:75;;;;2500:15;2518:10;2500:28;;;;:::i;:::-;2454:75;;;2438:10;2449:1;2438:13;;;;;;;;:::i;:::-;;;;;;:91;;;;2560:10;2549:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;2539:4;2544:1;2539:7;;;;;;;;:::i;:::-;;;;;;:32;;;;2602:9;2591:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;2581:4;2586:1;2581:7;;;;;;;;:::i;:::-;;;;;;;;;;:31;2623:5;;:32;;-1:-1:-1;;;2623:32:87;;-1:-1:-1;;;;;2623:5:87;;;;:19;;:32;;2643:5;;2650:4;;2623:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2743:5:87;;2674:76;;-1:-1:-1;;;2674:76:87;;-1:-1:-1;;;;;2743:5:87;;;2674:76;;;171:51:88;2665:95:87;;-1:-1:-1;;;;;;2681:42:87;-1:-1:-1;2674:60:87;;144:18:88;;2674:76:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2752:7;2665:8;:95::i;:::-;2792:143;;-1:-1:-1;;;2792:143:87;;2878:42;2792:143;;;171:51:88;2770:190:87;;-1:-1:-1;;;;;2799:42:87;2792:60;;144:18:88;;2792:143:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2949:1;2770:8;:190::i;:::-;1112:1855;;;;;;;1085:1882::o;1819:584:10:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:10;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;1511:51:88;;;-1:-1:-1;;;1578:18:88;;;1571:34;2196:43:10;;;;;;;;;1484:18:88;;;2196:43:10;;;-1:-1:-1;;1671:64:10;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:10;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:10:o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;11209:2:88;11191:21;;;11248:2;11228:18;;;11221:30;11287:34;11282:2;11267:18;;11260:62;-1:-1:-1;;;11353:2:88;11338:18;;11331:32;11395:3;11380:19;;11007:398;5286:41:10;;;;;;;;5346:31;;;11622:21:88;;;11679:2;11659:18;;;11652:30;-1:-1:-1;;;11713:2:88;11698:18;;11691:40;11798:4;11783:20;;11776:36;;;5346:31:10;;-1:-1:-1;;;;;;;;;;;5346:31:10;;;;11763:3:88;5346:31:10;;;5396;;;12035:21:88;;;12092:2;12072:18;;;12065:30;;;;-1:-1:-1;;;12126:2:88;12111:18;;12104:40;12211:4;12196:20;;12189:36;;;-1:-1:-1;;;;;;;;;;;5396:31:10;12176:3:88;12161:19;5396:31:10;;;;;;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;6756:259::-;6818:1;6813;:6;6809:200;;6840:40;;;;;12438:2:88;12420:21;;;12477:2;12457:18;;;12450:30;12516:34;12511:2;12496:18;;12489:62;-1:-1:-1;;;12582:2:88;12567:18;;12560:31;12623:3;12608:19;;12236:397;6840:40:10;;;;;;;;6899:30;;;12850:21:88;;;12907:1;12887:18;;;12880:29;-1:-1:-1;;;12940:2:88;12925:18;;12918:39;13024:4;13009:20;;13002:36;;;6899:30:10;;-1:-1:-1;;;;;;;;;;;6899:30:10;;;;12989:3:88;6899:30:10;;;6948;;;13261:21:88;;;13318:1;13298:18;;;13291:29;;;;-1:-1:-1;;;13351:2:88;13336:18;;13329:39;13435:4;13420:20;;13413:36;;;-1:-1:-1;;;;;;;;;;;6948:30:10;13400:3:88;13385:19;6948:30:10;13049:406:88;2410:424:10;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;13662:51:88;;;-1:-1:-1;;;13729:18:88;;;13722:34;;;;2705:4:10;13772:18:88;;;13765:34;2482:11:10;;1671:64;2579:43;;13635:18:88;;2645:67:10;;;-1:-1:-1;;2645:67:10;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:10;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:10;2813:7;:14;;-1:-1:-1;;2813:14:10;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;1616:277:88:-;1683:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:52;;;1752:1;1749;1742:12;1704:52;1784:9;1778:16;1837:5;1830:13;1823:21;1816:5;1813:32;1803:60;;1859:1;1856;1849:12;1803:60;1882:5;1616:277;-1:-1:-1;;;1616:277:88:o;2030:127::-;2091:10;2086:3;2082:20;2079:1;2072:31;2122:4;2119:1;2112:15;2146:4;2143:1;2136:15;2395:1391;2632:2;2684:21;;;2754:13;;2657:18;;;2776:22;;;2603:4;;2632:2;2817;;2835:18;;;;2876:15;;;2603:4;2919:841;2933:6;2930:1;2927:13;2919:841;;;2992:13;;3030:9;;3018:22;;3080:11;;;3074:18;3060:12;;;3053:40;3132:11;;;3126:18;-1:-1:-1;;;;;3220:21:88;;;3206:12;;;3199:43;3265:4;3313:11;;;3307:18;3303:27;;3289:12;;;3282:49;3354:4;3402:11;;;3396:18;3392:27;;;3378:12;;;3371:49;3175:3;3488:11;;;3482:18;3523:8;3565:23;;;3551:12;;;3544:45;;;;3612:4;3660:11;;;3654:18;3650:27;3636:12;;;3629:49;3707:4;3698:14;;;;3735:15;;;;3184:1;2948:9;2919:841;;;-1:-1:-1;3777:3:88;;2395:1391;-1:-1:-1;;;;;;;2395:1391:88:o;3791:925::-;4034:2;4086:21;;;4156:13;;4059:18;;;4178:22;;;4005:4;;4034:2;4219;;4237:18;;;;4278:15;;;4005:4;4321:369;4335:6;4332:1;4329:13;4321:369;;;4394:13;;4478:9;;-1:-1:-1;;;;;4474:18:88;;;4462:31;;4537:11;;;4531:18;4527:27;4513:12;;;4506:49;4595:11;;4589:18;4575:12;;;4568:40;4637:4;4628:14;;;;4665:15;;;;4447:1;4350:9;4321:369;;4721:250;4806:1;4816:113;4830:6;4827:1;4824:13;4816:113;;;4906:11;;;4900:18;4887:11;;;4880:39;4852:2;4845:10;4816:113;;;-1:-1:-1;;4963:1:88;4945:16;;4938:27;4721:250::o;4976:1547::-;5258:2;5270:21;;;5340:13;;5243:18;;;5362:22;;;5210:4;;5437;;5415:2;5400:18;;;5464:15;;;5210:4;5507:180;5521:6;5518:1;5515:13;5507:180;;;5586:13;;5601:4;5582:24;5570:37;;5627:12;;;;5662:15;;;;5543:1;5536:9;5507:180;;;-1:-1:-1;;;5723:19:88;;;5703:18;;;5696:47;5793:13;;5815:21;;;5854:12;;;;5906:1;5902:16;;;5893:26;;5889:35;;5949:15;;;5984:1;5994:500;6010:8;6005:3;6002:17;5994:500;;;6079:2;6075:7;6131:2;6125:3;6117:6;6113:16;6109:25;6102:5;6095:40;6164:8;6158:15;6208:2;6202:9;6239:8;6231:6;6224:24;6261:74;6326:8;6321:2;6313:6;6309:15;6304:2;6300;6296:11;6261:74;:::i;:::-;6470:14;;;;6392:2;6378:17;6374:26;;;6362:39;;;;6358:48;;;-1:-1:-1;6431:17:88;;;;6038:1;6029:11;5994:500;;;-1:-1:-1;6511:6:88;;4976:1547;-1:-1:-1;;;;;;;;;4976:1547:88:o;6528:1178::-;6796:2;6808:21;;;6878:13;;6781:18;;;6900:22;;;6748:4;;6975;;6953:2;6938:18;;;7002:15;;;6748:4;7045:195;7059:6;7056:1;7053:13;7045:195;;;7124:13;;-1:-1:-1;;;;;7120:39:88;7108:52;;7180:12;;;;7215:15;;;;7156:1;7074:9;7045:195;;;-1:-1:-1;;;7276:19:88;;;7256:18;;;7249:47;7346:13;;7368:21;;;7444:15;;;;7407:12;;;7479:1;7489:189;7505:8;7500:3;7497:17;7489:189;;;7574:15;;7560:30;;7651:17;;;;7612:14;;;;7533:1;7524:11;7489:189;;;-1:-1:-1;7695:5:88;;6528:1178;-1:-1:-1;;;;;;;6528:1178:88:o;7711:184::-;7781:6;7834:2;7822:9;7813:7;7809:23;7805:32;7802:52;;;7850:1;7847;7840:12;7802:52;-1:-1:-1;7873:16:88;;7711:184;-1:-1:-1;7711:184:88:o;7900:222::-;7965:9;;;7986:10;;;7983:133;;;8038:10;8033:3;8029:20;8026:1;8019:31;8073:4;8070:1;8063:15;8101:4;8098:1;8091:15;7983:133;7900:222;;;;:::o;8127:1915::-;8327:4;8356:2;8396;8385:9;8381:18;8426:2;8415:9;8408:21;8449:6;8484;8478:13;8515:6;8507;8500:22;8541:2;8531:12;;8574:2;8563:9;8559:18;8552:25;;8636:2;8626:6;8623:1;8619:14;8608:9;8604:30;8600:39;8674:2;8666:6;8662:15;8695:1;8716;8726:1287;8742:6;8737:3;8734:15;8726:1287;;;8811:22;;;-1:-1:-1;;8807:36:88;8795:49;;8867:13;;8977:9;;8962:25;;9030:11;;;9024:18;9007:15;;;9000:43;9082:11;;;9076:18;8903:4;9114:15;;;9107:27;;;9195:19;;8934:15;;;9227:24;;;9285:3;9273:16;;;9318:21;;;9363:1;;9377:445;9393:8;9388:3;9385:17;9377:445;;;9466:15;;9562:9;;-1:-1:-1;;;;;9558:18:88;;;9544:33;;9627:11;;;9621:18;9617:27;9601:14;;;9594:51;9705:11;;9699:18;9692:26;9685:34;9669:14;;;9662:58;9757:4;9746:16;;;;9791:17;;;;9525:1;9412:11;;;;;9377:445;;;-1:-1:-1;;;9845:4:88;9892:11;;;9886:18;9869:15;;;;9862:43;;;;9991:12;;;;9956:15;;;;8768:1;8759:11;8726:1287;;;-1:-1:-1;10030:6:88;;8127:1915;-1:-1:-1;;;;;;;;;8127:1915:88:o;10326:384::-;-1:-1:-1;;;;;;10511:33:88;;10499:46;;10568:13;;10481:3;;10590:74;10568:13;10653:1;10644:11;;10637:4;10625:17;;10590:74;:::i;:::-;10684:16;;;;10702:1;10680:24;;10326:384;-1:-1:-1;;;10326:384:88:o;10715:287::-;10844:3;10882:6;10876:13;10898:66;10957:6;10952:3;10945:4;10937:6;10933:17;10898:66;:::i;:::-;10980:16;;;;;10715:287;-1:-1:-1;;10715:287:88:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testOptimismUniMultiHop()": "56f68044",
    "testVelo()": "b063649b",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOptimismUniMultiHop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testVelo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/OptimismSwaps.t.sol\":\"OptimismTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":3xcaliSwap/=lib/3xcaliSwap/contracts/\",\":3xcaliswap/=lib/3xcaliswap/\",\":@core/=lib/3xcaliSwap/contracts/core/\",\":@openzeppelin/=lib/3xcaliSwap/node_modules/@openzeppelin/\",\":@solmate/=lib/3xcaliSwap/node_modules/solmate/src/\",\":LayerZero/=lib/contracts/lib/LayerZero/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=lib/contracts/contracts/\",\":create3-factory/=lib/create3-factory/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":fraxlend/=lib/fraxlend/\",\":joe-v2/=lib/joe-v2/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":pancake-smart-contracts/=lib/pancake-smart-contracts/\",\":pancake/=lib/pancake-smart-contracts/\",\":solmate/=lib/solmate/\",\":spookyswap-core/=lib/spookyswap-core/contracts/\",\":spookyswap/=lib/spookyswap-core/\",\":sushiswap/=lib/sushiswap/\",\":traderjoe/=lib/joe-v2/src/\",\":uniswap/v3-core/=lib/v3-core/\",\":uniswap/v3-periphery/=lib/v3-periphery/\",\":utils/=lib/contracts/test/utils/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\",\":velodrome/=lib/contracts/\"]},\"sources\":{\"lib/contracts/contracts/interfaces/IPair.sol\":{\"keccak256\":\"0x177fc0e0229d16b4d2016277c376b9bf13b2383a7b87cd3e2a5fafa4a9a3acae\",\"urls\":[\"bzz-raw://229397979dca9be679da609f3e6d9b7dccf0b2dd28394b7f3a8f502c42bef828\",\"dweb:/ipfs/QmUqgNLiQRjWjfjoh9awo7H5mDez2Z6eNbRVpTL4SAnqtz\"]},\"lib/contracts/contracts/interfaces/IPairFactory.sol\":{\"keccak256\":\"0x6e8ffa94e3d4223856b9196aa8f8af527ed7e6a4f3892ad3f7b028a7147a0f3a\",\"urls\":[\"bzz-raw://6519038798c84064701b7288a2b882374ee533419bd9b3cbe0122c920d3b4a0e\",\"dweb:/ipfs/QmWq6rpX9DbzXmBLnF3EYTVSScVZfKx5mvthSmqcVG85YW\"]},\"lib/contracts/contracts/interfaces/IRouter.sol\":{\"keccak256\":\"0x438f854c49f7c469d907bc4d5ab8354c6a18b2df8b6de309f86498595c37b051\",\"urls\":[\"bzz-raw://2ec640cf9df34451dd66ede953a0e74ffb8a7d3809df63767d49c029d981d44e\",\"dweb:/ipfs/Qmf1m2hbWZfhjUdg85CUMYwXGx6L5oDiqqCes5jCekqCzX\"]},\"lib/contracts/contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0xacdf99eff15923135f9907eb79e493edc74c18ddc5c4f2f77147684a6e88b31c\",\"urls\":[\"bzz-raw://b01eaf23e2f708181870741b75873461bf75b5877fde7ab8ba63378b554e9671\",\"dweb:/ipfs/QmSNB3G2izvqtvCwSEWP1fRRqx6VbmnRC4AeG1tEbHGMb5\"]},\"lib/contracts/contracts/libraries/Math.sol\":{\"keccak256\":\"0x7068e2af91ab354be31b6ecde7fe5dea0e593c9d45d87ac38f2d9df8428c8b33\",\"urls\":[\"bzz-raw://7cc844c51260a12c09a0ea7c6d3c99086955da31054275efee4c95c10d944a19\",\"dweb:/ipfs/QmPLFbuFNw4FexvoMv2szLzxADHXVsGdyt3V7eE7GCJQ8u\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x9ef2fa79d3a8dc9aa56f4ff3d496aa1de5a03b2912af074df94f771283145e94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b919cb336dac6418e64911295dc9d4137d566fb1d21fdda5b09d2046aeea36cf\",\"dweb:/ipfs/QmVnLfEqjmkqCbVzpgvZKcpL7M1JXVx5a8iT1M8EQzGyxj\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71\",\"dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"lib/sushiswap/protocols/sushiswap/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"lib/sushiswap/protocols/sushixswap/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x8992c26baf30eb4a743dbe6d2a9cb27625fb783347b06283ce9664ffad83c411\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69a3031548eee3af0fae76430ae6d7e0d4b241cf17e707142e2bb1f4890c7efb\",\"dweb:/ipfs/QmPeQqoSy8y69d2NPpKy5re1ncRo4xfc7sSCSbWu3sLxLo\"]},\"lib/sushiswap/protocols/sushixswap/contracts/libraries/UniswapV2Library.sol\":{\"keccak256\":\"0xc16c20b687bc7ad172efe48e41e2a07b3853b2be83d4215bc57a7097b0d7bbf6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fab6e7f7a202295ff3e9a99d9ee3a1a6ab66935b942da17e58420fba35451a50\",\"dweb:/ipfs/QmVzxsizknGXYAkXA34d5zdLJFvcQuv6xkrhE3rvkhsw5s\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x2a09cea4d978266ebcc02a93d73f5d0829a296a6ceb83094dec87418d8c86fcc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b12f7a8e8711a6f682e6032353bdf888031b70edb289baef65eecae096899440\",\"dweb:/ipfs/QmYmTJPSN1kdBmNVk7onoCxqjU3jBEkTk5CidJxB1gwS9p\"]},\"lib/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xcec3d86d1ac9167ebbf1353bbc24eb9d14306d640bebf30d58479cb2792dda95\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f596c9b6d85b567eff3f15379efa7d2ddf3994b7ebb7b991e66719e9b2afeac5\",\"dweb:/ipfs/QmUYtDKRk51ux4uRoeCLjo9PNRK96MBuCr5CAYaMosx5Ve\"]},\"src/CrossChainSwaps/Chains/Optimism/OptimismSwaps.sol\":{\"keccak256\":\"0xa439425f4d8618b5606c3bacd112bc78b9083567b0067e40536c519755337878\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://73de630264ba0adf713343c92208ea8d2a6c50462ba60e4efc37347c62e9652e\",\"dweb:/ipfs/QmYAS4y8Wtoofwa9UWy7LkuuwuGmFyTaatH1SQWj8KBpno\"]},\"src/CrossChainSwaps/Chains/Optimism/StargateOptimism.sol\":{\"keccak256\":\"0xf20596776c94803dee5b775d20a3252dc9d044976cd4f7c4d0533d428f72fae5\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://5494b9a1ba1819ebf3f88309d95aeb16783c96b53587e86268fe2b73ed752f4b\",\"dweb:/ipfs/Qmf5WGUQsTFCdVRomEX5qUxrGG7PkT9FyeC6XjKDX2jdMG\"]},\"src/CrossChainSwaps/Chains/Optimism/interfaces/IOptimismSwaps.sol\":{\"keccak256\":\"0x3d6aa28791637fd3173bf30a061525d1af62a8684e7741c1ece941e240e89b67\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://77d8098a841429a7a46f80935f1170acdceda503d18c320d3d3861575c9d023d\",\"dweb:/ipfs/QmYWU481XrvzzFfuKeWGuFNumLFXRAR17X6uPqJ7kMMsXQ\"]},\"src/CrossChainSwaps/FeeCollector.sol\":{\"keccak256\":\"0xfd3cbabe18c03f9ab30e701785976d488164e4d7a885f777b5b81745bcbfc951\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d8f31046dc5e738cd601ab2695d5bc4d5ebe0e7be6965d6727c37bfa0708708\",\"dweb:/ipfs/QmQ9A9ew6onWZtyY3etu8wSFdA8VqCSBGTx8pMbsQ5ddbv\"]},\"src/CrossChainSwaps/adapters/SushiAdapter.sol\":{\"keccak256\":\"0xcda156f2352b2d81b9f67a24d96a566e341ded1311a12d603e6e2ac85eeaf09f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8ad5fe3db26c66f19719cd1074498961f13dda6c918ac5a02124cbae9df540c9\",\"dweb:/ipfs/QmXg3kQrqzjNyDAQwoPrmzk8ogcEGHb7sVpruNxwWTiywh\"]},\"src/CrossChainSwaps/adapters/UniswapAdapter.sol\":{\"keccak256\":\"0x0a1e84fcd5895789522fa2e769c4b16f7b321e410136bfbd61659f5b692b4992\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://447942472b3f4cc4386788f246064db87d4c132542b2614acafcbcca352ef491\",\"dweb:/ipfs/QmQydBMviQzfGWsnrY9V2u12mqD4Luf6KNKmTjtDG5zjya\"]},\"src/CrossChainSwaps/adapters/VelodromeAdapter.sol\":{\"keccak256\":\"0xceb1c7b465e853f1f5221e62c76d54c795c831c873097a47ed9ebd0d2508fe33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11e09139b3c7fed5038ef25516a7e176d3d823bdaf6f49f17bc77c513211bfc8\",\"dweb:/ipfs/QmQTaFrFViUiogYpBqHZrHsR9r6PRiVbveQQVn1gzTe8DM\"]},\"src/CrossChainSwaps/interfaces/IStargateReceiver.sol\":{\"keccak256\":\"0xa8ef54c6c8c01507c21d037817a1f5ec5e7ec74cc39fd1e6ba49e0adb22ca0e3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ad9a6533eb17ab3f8b365393a72a1084347ba03b2b17f76d21f92f209a5dc9b\",\"dweb:/ipfs/QmZK2kLZqFjCssLfU2JGaccwJJodGEt4zJxHsYit1cjVRr\"]},\"src/CrossChainSwaps/interfaces/IStargateRouter.sol\":{\"keccak256\":\"0x1a929770aaed6b2d344c3f699987c17cabb93321af11899b5aa346a84ed7e84e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4986951a279c0bbc8f6ad28c868a90fce927db1628775504c31b3e2140ed3ed4\",\"dweb:/ipfs/QmZBrorQqZXSW6LhiKmvaMgpf8fQzx417PHGUdqixkn8g8\"]},\"src/CrossChainSwaps/interfaces/IWETH9.sol\":{\"keccak256\":\"0x5d30362bd8c2e3ab35623606face693b512cee4b7c3aa70c9a37b6cfbef22811\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d8c95373b6783e7088dfb0e921ca88edd8dcf6364f1974785a029eb8f57cc39\",\"dweb:/ipfs/QmPjRatu7Tz4tCWA78BnyXHcXMnibKiUJsj4dC7Dc4NaHt\"]},\"test/OptimismSwaps.t.sol\":{\"keccak256\":\"0x16530eb40e790389d85f21ccb48af85b7aab28b44e6048de4cc3aa7068ae79e0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3626b612cfd0837025b19934af865d0e501cd15583298f1632958355841944a1\",\"dweb:/ipfs/Qmc88sw62tF2z9sA3ss6ZyzWTYwqQii71kCQgnyAZoHTde\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOptimismUniMultiHop"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testVelo"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":3xcaliSwap/=lib/3xcaliSwap/contracts/",
        ":3xcaliswap/=lib/3xcaliswap/",
        ":@core/=lib/3xcaliSwap/contracts/core/",
        ":@openzeppelin/=lib/3xcaliSwap/node_modules/@openzeppelin/",
        ":@solmate/=lib/3xcaliSwap/node_modules/solmate/src/",
        ":LayerZero/=lib/contracts/lib/LayerZero/contracts/",
        ":chainlink/=lib/chainlink/",
        ":contracts/=lib/contracts/contracts/",
        ":create3-factory/=lib/create3-factory/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fraxlend/=lib/fraxlend/",
        ":joe-v2/=lib/joe-v2/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":pancake-smart-contracts/=lib/pancake-smart-contracts/",
        ":pancake/=lib/pancake-smart-contracts/",
        ":solmate/=lib/solmate/",
        ":spookyswap-core/=lib/spookyswap-core/contracts/",
        ":spookyswap/=lib/spookyswap-core/",
        ":sushiswap/=lib/sushiswap/",
        ":traderjoe/=lib/joe-v2/src/",
        ":uniswap/v3-core/=lib/v3-core/",
        ":uniswap/v3-periphery/=lib/v3-periphery/",
        ":utils/=lib/contracts/test/utils/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/",
        ":velodrome/=lib/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/OptimismSwaps.t.sol": "OptimismTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/contracts/contracts/interfaces/IPair.sol": {
        "keccak256": "0x177fc0e0229d16b4d2016277c376b9bf13b2383a7b87cd3e2a5fafa4a9a3acae",
        "urls": [
          "bzz-raw://229397979dca9be679da609f3e6d9b7dccf0b2dd28394b7f3a8f502c42bef828",
          "dweb:/ipfs/QmUqgNLiQRjWjfjoh9awo7H5mDez2Z6eNbRVpTL4SAnqtz"
        ],
        "license": null
      },
      "lib/contracts/contracts/interfaces/IPairFactory.sol": {
        "keccak256": "0x6e8ffa94e3d4223856b9196aa8f8af527ed7e6a4f3892ad3f7b028a7147a0f3a",
        "urls": [
          "bzz-raw://6519038798c84064701b7288a2b882374ee533419bd9b3cbe0122c920d3b4a0e",
          "dweb:/ipfs/QmWq6rpX9DbzXmBLnF3EYTVSScVZfKx5mvthSmqcVG85YW"
        ],
        "license": null
      },
      "lib/contracts/contracts/interfaces/IRouter.sol": {
        "keccak256": "0x438f854c49f7c469d907bc4d5ab8354c6a18b2df8b6de309f86498595c37b051",
        "urls": [
          "bzz-raw://2ec640cf9df34451dd66ede953a0e74ffb8a7d3809df63767d49c029d981d44e",
          "dweb:/ipfs/Qmf1m2hbWZfhjUdg85CUMYwXGx6L5oDiqqCes5jCekqCzX"
        ],
        "license": null
      },
      "lib/contracts/contracts/interfaces/IWETH.sol": {
        "keccak256": "0xacdf99eff15923135f9907eb79e493edc74c18ddc5c4f2f77147684a6e88b31c",
        "urls": [
          "bzz-raw://b01eaf23e2f708181870741b75873461bf75b5877fde7ab8ba63378b554e9671",
          "dweb:/ipfs/QmSNB3G2izvqtvCwSEWP1fRRqx6VbmnRC4AeG1tEbHGMb5"
        ],
        "license": null
      },
      "lib/contracts/contracts/libraries/Math.sol": {
        "keccak256": "0x7068e2af91ab354be31b6ecde7fe5dea0e593c9d45d87ac38f2d9df8428c8b33",
        "urls": [
          "bzz-raw://7cc844c51260a12c09a0ea7c6d3c99086955da31054275efee4c95c10d944a19",
          "dweb:/ipfs/QmPLFbuFNw4FexvoMv2szLzxADHXVsGdyt3V7eE7GCJQ8u"
        ],
        "license": null
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x9ef2fa79d3a8dc9aa56f4ff3d496aa1de5a03b2912af074df94f771283145e94",
        "urls": [
          "bzz-raw://b919cb336dac6418e64911295dc9d4137d566fb1d21fdda5b09d2046aeea36cf",
          "dweb:/ipfs/QmVnLfEqjmkqCbVzpgvZKcpL7M1JXVx5a8iT1M8EQzGyxj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749",
        "urls": [
          "bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71",
          "dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/sushiswap/protocols/sushiswap/contracts/interfaces/IUniswapV2Pair.sol": {
        "keccak256": "0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385",
        "urls": [
          "bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e",
          "dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL"
        ],
        "license": "GPL-3.0"
      },
      "lib/sushiswap/protocols/sushixswap/contracts/libraries/SafeMath.sol": {
        "keccak256": "0x8992c26baf30eb4a743dbe6d2a9cb27625fb783347b06283ce9664ffad83c411",
        "urls": [
          "bzz-raw://69a3031548eee3af0fae76430ae6d7e0d4b241cf17e707142e2bb1f4890c7efb",
          "dweb:/ipfs/QmPeQqoSy8y69d2NPpKy5re1ncRo4xfc7sSCSbWu3sLxLo"
        ],
        "license": "GPL-3.0"
      },
      "lib/sushiswap/protocols/sushixswap/contracts/libraries/UniswapV2Library.sol": {
        "keccak256": "0xc16c20b687bc7ad172efe48e41e2a07b3853b2be83d4215bc57a7097b0d7bbf6",
        "urls": [
          "bzz-raw://fab6e7f7a202295ff3e9a99d9ee3a1a6ab66935b942da17e58420fba35451a50",
          "dweb:/ipfs/QmVzxsizknGXYAkXA34d5zdLJFvcQuv6xkrhE3rvkhsw5s"
        ],
        "license": "GPL-3.0"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x2a09cea4d978266ebcc02a93d73f5d0829a296a6ceb83094dec87418d8c86fcc",
        "urls": [
          "bzz-raw://b12f7a8e8711a6f682e6032353bdf888031b70edb289baef65eecae096899440",
          "dweb:/ipfs/QmYmTJPSN1kdBmNVk7onoCxqjU3jBEkTk5CidJxB1gwS9p"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0xcec3d86d1ac9167ebbf1353bbc24eb9d14306d640bebf30d58479cb2792dda95",
        "urls": [
          "bzz-raw://f596c9b6d85b567eff3f15379efa7d2ddf3994b7ebb7b991e66719e9b2afeac5",
          "dweb:/ipfs/QmUYtDKRk51ux4uRoeCLjo9PNRK96MBuCr5CAYaMosx5Ve"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/CrossChainSwaps/Chains/Optimism/OptimismSwaps.sol": {
        "keccak256": "0xa439425f4d8618b5606c3bacd112bc78b9083567b0067e40536c519755337878",
        "urls": [
          "bzz-raw://73de630264ba0adf713343c92208ea8d2a6c50462ba60e4efc37347c62e9652e",
          "dweb:/ipfs/QmYAS4y8Wtoofwa9UWy7LkuuwuGmFyTaatH1SQWj8KBpno"
        ],
        "license": "ISC"
      },
      "src/CrossChainSwaps/Chains/Optimism/StargateOptimism.sol": {
        "keccak256": "0xf20596776c94803dee5b775d20a3252dc9d044976cd4f7c4d0533d428f72fae5",
        "urls": [
          "bzz-raw://5494b9a1ba1819ebf3f88309d95aeb16783c96b53587e86268fe2b73ed752f4b",
          "dweb:/ipfs/Qmf5WGUQsTFCdVRomEX5qUxrGG7PkT9FyeC6XjKDX2jdMG"
        ],
        "license": "ISC"
      },
      "src/CrossChainSwaps/Chains/Optimism/interfaces/IOptimismSwaps.sol": {
        "keccak256": "0x3d6aa28791637fd3173bf30a061525d1af62a8684e7741c1ece941e240e89b67",
        "urls": [
          "bzz-raw://77d8098a841429a7a46f80935f1170acdceda503d18c320d3d3861575c9d023d",
          "dweb:/ipfs/QmYWU481XrvzzFfuKeWGuFNumLFXRAR17X6uPqJ7kMMsXQ"
        ],
        "license": "ISC"
      },
      "src/CrossChainSwaps/FeeCollector.sol": {
        "keccak256": "0xfd3cbabe18c03f9ab30e701785976d488164e4d7a885f777b5b81745bcbfc951",
        "urls": [
          "bzz-raw://8d8f31046dc5e738cd601ab2695d5bc4d5ebe0e7be6965d6727c37bfa0708708",
          "dweb:/ipfs/QmQ9A9ew6onWZtyY3etu8wSFdA8VqCSBGTx8pMbsQ5ddbv"
        ],
        "license": "MIT"
      },
      "src/CrossChainSwaps/adapters/SushiAdapter.sol": {
        "keccak256": "0xcda156f2352b2d81b9f67a24d96a566e341ded1311a12d603e6e2ac85eeaf09f",
        "urls": [
          "bzz-raw://8ad5fe3db26c66f19719cd1074498961f13dda6c918ac5a02124cbae9df540c9",
          "dweb:/ipfs/QmXg3kQrqzjNyDAQwoPrmzk8ogcEGHb7sVpruNxwWTiywh"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/CrossChainSwaps/adapters/UniswapAdapter.sol": {
        "keccak256": "0x0a1e84fcd5895789522fa2e769c4b16f7b321e410136bfbd61659f5b692b4992",
        "urls": [
          "bzz-raw://447942472b3f4cc4386788f246064db87d4c132542b2614acafcbcca352ef491",
          "dweb:/ipfs/QmQydBMviQzfGWsnrY9V2u12mqD4Luf6KNKmTjtDG5zjya"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/CrossChainSwaps/adapters/VelodromeAdapter.sol": {
        "keccak256": "0xceb1c7b465e853f1f5221e62c76d54c795c831c873097a47ed9ebd0d2508fe33",
        "urls": [
          "bzz-raw://11e09139b3c7fed5038ef25516a7e176d3d823bdaf6f49f17bc77c513211bfc8",
          "dweb:/ipfs/QmQTaFrFViUiogYpBqHZrHsR9r6PRiVbveQQVn1gzTe8DM"
        ],
        "license": "MIT"
      },
      "src/CrossChainSwaps/interfaces/IStargateReceiver.sol": {
        "keccak256": "0xa8ef54c6c8c01507c21d037817a1f5ec5e7ec74cc39fd1e6ba49e0adb22ca0e3",
        "urls": [
          "bzz-raw://0ad9a6533eb17ab3f8b365393a72a1084347ba03b2b17f76d21f92f209a5dc9b",
          "dweb:/ipfs/QmZK2kLZqFjCssLfU2JGaccwJJodGEt4zJxHsYit1cjVRr"
        ],
        "license": "BUSL-1.1"
      },
      "src/CrossChainSwaps/interfaces/IStargateRouter.sol": {
        "keccak256": "0x1a929770aaed6b2d344c3f699987c17cabb93321af11899b5aa346a84ed7e84e",
        "urls": [
          "bzz-raw://4986951a279c0bbc8f6ad28c868a90fce927db1628775504c31b3e2140ed3ed4",
          "dweb:/ipfs/QmZBrorQqZXSW6LhiKmvaMgpf8fQzx417PHGUdqixkn8g8"
        ],
        "license": "BUSL-1.1"
      },
      "src/CrossChainSwaps/interfaces/IWETH9.sol": {
        "keccak256": "0x5d30362bd8c2e3ab35623606face693b512cee4b7c3aa70c9a37b6cfbef22811",
        "urls": [
          "bzz-raw://1d8c95373b6783e7088dfb0e921ca88edd8dcf6364f1974785a029eb8f57cc39",
          "dweb:/ipfs/QmPjRatu7Tz4tCWA78BnyXHcXMnibKiUJsj4dC7Dc4NaHt"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/OptimismSwaps.t.sol": {
        "keccak256": "0x16530eb40e790389d85f21ccb48af85b7aab28b44e6048de4cc3aa7068ae79e0",
        "urls": [
          "bzz-raw://3626b612cfd0837025b19934af865d0e501cd15583298f1632958355841944a1",
          "dweb:/ipfs/Qmc88sw62tF2z9sA3ss6ZyzWTYwqQii71kCQgnyAZoHTde"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/OptimismSwaps.t.sol",
    "id": 43845,
    "exportedSymbols": {
      "Address": [
        28291
      ],
      "DSTest": [
        2501
      ],
      "FeeCollector": [
        38472
      ],
      "IERC20": [
        27644
      ],
      "IERC20Permit": [
        27680
      ],
      "IOptimismSwaps": [
        37338
      ],
      "IPair": [
        483
      ],
      "IPairFactory": [
        525
      ],
      "IRouter": [
        539
      ],
      "IStargateReceiver": [
        40725
      ],
      "IStargateRouter": [
        40845
      ],
      "ISwapRouter": [
        30507
      ],
      "IUniswapV2Pair": [
        29832
      ],
      "IWETH": [
        559
      ],
      "IWETH9": [
        40862
      ],
      "Math": [
        714
      ],
      "OptimismSwaps": [
        36899
      ],
      "OptimismTest": [
        43844
      ],
      "Ownable": [
        27566
      ],
      "SafeERC20": [
        27961
      ],
      "SafeMathUniswap": [
        29907
      ],
      "SafeTransferLib": [
        29194
      ],
      "Script": [
        2764
      ],
      "StargateOptimism": [
        37326
      ],
      "StdStorage": [
        5792
      ],
      "SushiAdapter": [
        38927
      ],
      "Test": [
        5694
      ],
      "TransferHelper": [
        30678
      ],
      "UniswapAdapter": [
        39182
      ],
      "UniswapV2Library": [
        30393
      ],
      "VelodromeAdapter": [
        39897
      ],
      "Vm": [
        7799
      ],
      "console": [
        15863
      ],
      "console2": [
        23927
      ],
      "stdError": [
        5764
      ],
      "stdJson": [
        3124
      ],
      "stdMath": [
        7033
      ],
      "stdStorage": [
        6894
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4146:87",
    "nodes": [
      {
        "id": 43373,
        "nodeType": "PragmaDirective",
        "src": "39:24:87",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 43374,
        "nodeType": "ImportDirective",
        "src": "65:28:87",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43845,
        "sourceUnit": 7034,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 43375,
        "nodeType": "ImportDirective",
        "src": "94:66:87",
        "nodes": [],
        "absolutePath": "src/CrossChainSwaps/Chains/Optimism/OptimismSwaps.sol",
        "file": "../src/CrossChainSwaps/Chains/Optimism/OptimismSwaps.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43845,
        "sourceUnit": 36900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 43376,
        "nodeType": "ImportDirective",
        "src": "161:49:87",
        "nodes": [],
        "absolutePath": "src/CrossChainSwaps/FeeCollector.sol",
        "file": "../src/CrossChainSwaps/FeeCollector.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43845,
        "sourceUnit": 38473,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 43377,
        "nodeType": "ImportDirective",
        "src": "211:62:87",
        "nodes": [],
        "absolutePath": "src/CrossChainSwaps/adapters/VelodromeAdapter.sol",
        "file": "../src/CrossChainSwaps/adapters/VelodromeAdapter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43845,
        "sourceUnit": 39898,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 43844,
        "nodeType": "ContractDefinition",
        "src": "275:3909:87",
        "nodes": [
          {
            "id": 43382,
            "nodeType": "VariableDeclaration",
            "src": "311:19:87",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "swaps",
            "nameLocation": "325:5:87",
            "scope": 43844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimismSwaps_$36899",
              "typeString": "contract OptimismSwaps"
            },
            "typeName": {
              "id": 43381,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 43380,
                "name": "OptimismSwaps",
                "nameLocations": [
                  "311:13:87"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36899,
                "src": "311:13:87"
              },
              "referencedDeclaration": 36899,
              "src": "311:13:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimismSwaps_$36899",
                "typeString": "contract OptimismSwaps"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 43385,
            "nodeType": "VariableDeclaration",
            "src": "336:25:87",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "feeCollector",
            "nameLocation": "349:12:87",
            "scope": 43844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FeeCollector_$38472",
              "typeString": "contract FeeCollector"
            },
            "typeName": {
              "id": 43384,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 43383,
                "name": "FeeCollector",
                "nameLocations": [
                  "336:12:87"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38472,
                "src": "336:12:87"
              },
              "referencedDeclaration": 38472,
              "src": "336:12:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FeeCollector_$38472",
                "typeString": "contract FeeCollector"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 43388,
            "nodeType": "VariableDeclaration",
            "src": "367:28:87",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "375:6:87",
            "scope": 43844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43386,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "367:7:87",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e303031",
              "id": 43387,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "384:11:87",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000_by_1",
                "typeString": "int_const 1000000000000000"
              },
              "value": "0.001"
            },
            "visibility": "internal"
          },
          {
            "id": 43447,
            "nodeType": "FunctionDefinition",
            "src": "402:677:87",
            "nodes": [],
            "body": {
              "id": 43446,
              "nodeType": "Block",
              "src": "426:653:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 43396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43391,
                      "name": "feeCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43385,
                      "src": "436:12:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeCollector_$38472",
                        "typeString": "contract FeeCollector"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "451:16:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FeeCollector_$38472_$",
                          "typeString": "function () returns (contract FeeCollector)"
                        },
                        "typeName": {
                          "id": 43393,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 43392,
                            "name": "FeeCollector",
                            "nameLocations": [
                              "455:12:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 38472,
                            "src": "455:12:87"
                          },
                          "referencedDeclaration": 38472,
                          "src": "455:12:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FeeCollector_$38472",
                            "typeString": "contract FeeCollector"
                          }
                        }
                      },
                      "id": 43395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "451:18:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeCollector_$38472",
                        "typeString": "contract FeeCollector"
                      }
                    },
                    "src": "436:33:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeCollector_$38472",
                      "typeString": "contract FeeCollector"
                    }
                  },
                  "id": 43397,
                  "nodeType": "ExpressionStatement",
                  "src": "436:33:87"
                },
                {
                  "expression": {
                    "id": 43424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43398,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43382,
                      "src": "479:5:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimismSwaps_$36899",
                        "typeString": "contract OptimismSwaps"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
                              "id": 43403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "525:42:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x4200000000000000000000000000000000000006"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 43402,
                            "name": "IWETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40862,
                            "src": "518:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IWETH9_$40862_$",
                              "typeString": "type(contract IWETH9)"
                            }
                          },
                          "id": 43404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "518:50:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH9_$40862",
                            "typeString": "contract IWETH9"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 43407,
                              "name": "feeCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43385,
                              "src": "590:12:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FeeCollector_$38472",
                                "typeString": "contract FeeCollector"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FeeCollector_$38472",
                                "typeString": "contract FeeCollector"
                              }
                            ],
                            "id": 43406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "582:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 43405,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "582:7:87",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 43408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "582:21:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
                              "id": 43410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "629:42:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 43409,
                            "name": "ISwapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30507,
                            "src": "617:11:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$30507_$",
                              "typeString": "type(contract ISwapRouter)"
                            }
                          },
                          "id": 43411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "617:55:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISwapRouter_$30507",
                            "typeString": "contract ISwapRouter"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                              "id": 43414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "694:42:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x0000000000000000000000000000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 43413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "686:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 43412,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "686:7:87",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 43415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "686:51:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                              "id": 43418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "759:66:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0000000000000000000000000000000000000000000000000000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 43417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "751:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 43416,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "751:7:87",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 43419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "751:75:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307842304435303245393338656435663464663245363831664536453431396666323936333164363262",
                              "id": 43421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "856:42:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0xB0D502E938ed5f4df2E681fE6E419ff29631d62b"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 43420,
                            "name": "IStargateRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40845,
                            "src": "840:15:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IStargateRouter_$40845_$",
                              "typeString": "type(contract IStargateRouter)"
                            }
                          },
                          "id": 43422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "840:59:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStargateRouter_$40845",
                            "typeString": "contract IStargateRouter"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IWETH9_$40862",
                            "typeString": "contract IWETH9"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_ISwapRouter_$30507",
                            "typeString": "contract ISwapRouter"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_contract$_IStargateRouter_$40845",
                            "typeString": "contract IStargateRouter"
                          }
                        ],
                        "id": 43401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "487:17:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IWETH9_$40862_$_t_address_$_t_contract$_ISwapRouter_$30507_$_t_address_$_t_bytes32_$_t_contract$_IStargateRouter_$40845_$returns$_t_contract$_OptimismSwaps_$36899_$",
                          "typeString": "function (contract IWETH9,address,contract ISwapRouter,address,bytes32,contract IStargateRouter) returns (contract OptimismSwaps)"
                        },
                        "typeName": {
                          "id": 43400,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 43399,
                            "name": "OptimismSwaps",
                            "nameLocations": [
                              "491:13:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36899,
                            "src": "491:13:87"
                          },
                          "referencedDeclaration": 36899,
                          "src": "491:13:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimismSwaps_$36899",
                            "typeString": "contract OptimismSwaps"
                          }
                        }
                      },
                      "id": 43423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "487:422:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimismSwaps_$36899",
                        "typeString": "contract OptimismSwaps"
                      }
                    },
                    "src": "479:430:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimismSwaps_$36899",
                      "typeString": "contract OptimismSwaps"
                    }
                  },
                  "id": 43425,
                  "nodeType": "ExpressionStatement",
                  "src": "479:430:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307863363638323543356330346233633243634435333664363236393334453136323438413633663638",
                            "id": 43431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "937:42:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xc66825C5c04b3c2CcD536d626934E16248A63f68"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 43430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "929:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43429,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "929:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "929:51:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 43426,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2532,
                        "src": "920:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7799",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 43428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "923:5:87",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7258,
                      "src": "920:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 43433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "920:61:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43434,
                  "nodeType": "ExpressionStatement",
                  "src": "920:61:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43441,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1059:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimismTest_$43844",
                              "typeString": "contract OptimismTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimismTest_$43844",
                              "typeString": "contract OptimismTest"
                            }
                          ],
                          "id": 43440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1051:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43439,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1051:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1051:13:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653130",
                        "id": 43443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1066:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000_by_1",
                          "typeString": "int_const 100000000000"
                        },
                        "value": "10e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000_by_1",
                          "typeString": "int_const 100000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "307837463563373634634263313466393636394238383833376361313439306343613137633331363037",
                            "id": 43436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "998:42:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x7F5c764cBc14f9669B88837ca1490cCa17c31607"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 43435,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27644,
                          "src": "991:6:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$27644_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 43437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "991:50:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27644",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 43438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1042:8:87",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27611,
                      "src": "991:59:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 43444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "991:81:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43445,
                  "nodeType": "ExpressionStatement",
                  "src": "991:81:87"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "411:5:87",
            "parameters": {
              "id": 43389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "416:2:87"
            },
            "returnParameters": {
              "id": 43390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "426:0:87"
            },
            "scope": 43844,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43699,
            "nodeType": "FunctionDefinition",
            "src": "1085:1882:87",
            "nodes": [],
            "body": {
              "id": 43698,
              "nodeType": "Block",
              "src": "1112:1855:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43456,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43382,
                            "src": "1189:5:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimismSwaps_$36899",
                              "typeString": "contract OptimismSwaps"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimismSwaps_$36899",
                              "typeString": "contract OptimismSwaps"
                            }
                          ],
                          "id": 43455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1181:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43454,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1181:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1181:14:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653130",
                        "id": 43458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1197:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000_by_1",
                          "typeString": "int_const 100000000000"
                        },
                        "value": "10e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000_by_1",
                          "typeString": "int_const 100000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "307837463563373634634263313466393636394238383833376361313439306343613137633331363037",
                            "id": 43451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1129:42:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x7F5c764cBc14f9669B88837ca1490cCa17c31607"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 43450,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27644,
                          "src": "1122:6:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$27644_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 43452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1122:50:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27644",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 43453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1173:7:87",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27631,
                      "src": "1122:58:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 43459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1122:81:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43460,
                  "nodeType": "ExpressionStatement",
                  "src": "1122:81:87"
                },
                {
                  "assignments": [
                    43465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43465,
                      "mutability": "mutable",
                      "name": "steps",
                      "nameLocation": "1228:5:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 43698,
                      "src": "1213:20:87",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43463,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1213:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 43464,
                        "nodeType": "ArrayTypeName",
                        "src": "1213:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43471,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 43469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1248:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 43468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1236:11:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43466,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1240:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 43467,
                        "nodeType": "ArrayTypeName",
                        "src": "1240:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 43470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:14:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1213:37:87"
                },
                {
                  "expression": {
                    "id": 43476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43472,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43465,
                        "src": "1260:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 43474,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1266:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1260:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 43475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1271:1:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1260:12:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 43477,
                  "nodeType": "ExpressionStatement",
                  "src": "1260:12:87"
                },
                {
                  "expression": {
                    "id": 43482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43478,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43465,
                        "src": "1282:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 43480,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 43479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1288:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1282:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 43481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1293:2:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "1282:13:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 43483,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:13:87"
                },
                {
                  "expression": {
                    "id": 43488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43484,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43465,
                        "src": "1305:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 43486,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 43485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1311:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1305:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3134",
                      "id": 43487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1316:2:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_14_by_1",
                        "typeString": "int_const 14"
                      },
                      "value": "14"
                    },
                    "src": "1305:13:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 43489,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:13:87"
                },
                {
                  "assignments": [
                    43494
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43494,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "1346:7:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 43698,
                      "src": "1329:24:87",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43492,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1329:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 43493,
                        "nodeType": "ArrayTypeName",
                        "src": "1329:9:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43500,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1370:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 43497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1356:13:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43495,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1360:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 43496,
                        "nodeType": "ArrayTypeName",
                        "src": "1360:9:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 43499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1356:16:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1329:43:87"
                },
                {
                  "expression": {
                    "id": 43505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43501,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43494,
                        "src": "1382:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 43503,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1390:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1382:10:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130653130",
                      "id": 43504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1395:5:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000_by_1",
                        "typeString": "int_const 100000000000"
                      },
                      "value": "10e10"
                    },
                    "src": "1382:18:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 43506,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:18:87"
                },
                {
                  "assignments": [
                    43511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43511,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "1428:6:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 43698,
                      "src": "1411:23:87",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43509,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1411:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 43510,
                        "nodeType": "ArrayTypeName",
                        "src": "1411:9:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43517,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1451:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 43514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1437:13:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43512,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1441:7:87",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 43513,
                        "nodeType": "ArrayTypeName",
                        "src": "1441:9:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 43516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:16:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1411:42:87"
                },
                {
                  "expression": {
                    "id": 43525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43518,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43511,
                        "src": "1463:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 43520,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1470:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1463:9:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307837463563373634634263313466393636394238383833376361313439306343613137633331363037",
                          "id": 43523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1483:42:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x7F5c764cBc14f9669B88837ca1490cCa17c31607"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 43522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1475:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 43521,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1475:7:87",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 43524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1475:51:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1463:63:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 43526,
                  "nodeType": "ExpressionStatement",
                  "src": "1463:63:87"
                },
                {
                  "assignments": [
                    43531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43531,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1552:4:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 43698,
                      "src": "1537:19:87",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43529,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1537:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 43530,
                        "nodeType": "ArrayTypeName",
                        "src": "1537:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43537,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 43535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1571:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 43534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1559:11:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43532,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1563:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 43533,
                        "nodeType": "ArrayTypeName",
                        "src": "1563:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 43536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1559:14:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1537:36:87"
                },
                {
                  "expression": {
                    "id": 43546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43538,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43531,
                        "src": "1583:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 43540,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1588:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1583:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 43543,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43511,
                          "src": "1604:6:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 43544,
                          "name": "amounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43494,
                          "src": "1612:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        ],
                        "expression": {
                          "id": 43541,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "1593:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 43542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1597:6:87",
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "1593:10:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 43545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1593:27:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1583:37:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 43547,
                  "nodeType": "ExpressionStatement",
                  "src": "1583:37:87"
                },
                {
                  "assignments": [
                    43553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43553,
                      "mutability": "mutable",
                      "name": "routes",
                      "nameLocation": "1663:6:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 43698,
                      "src": "1631:38:87",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_route_$39210_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct VelodromeAdapter.route[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43551,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 43550,
                            "name": "VelodromeAdapter.route",
                            "nameLocations": [
                              "1631:16:87",
                              "1648:5:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39210,
                            "src": "1631:22:87"
                          },
                          "referencedDeclaration": 39210,
                          "src": "1631:22:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_route_$39210_storage_ptr",
                            "typeString": "struct VelodromeAdapter.route"
                          }
                        },
                        "id": 43552,
                        "nodeType": "ArrayTypeName",
                        "src": "1631:24:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_route_$39210_storage_$dyn_storage_ptr",
                          "typeString": "struct VelodromeAdapter.route[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43560,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1701:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 43557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1672:28:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_route_$39210_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct VelodromeAdapter.route memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43555,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 43554,
                            "name": "VelodromeAdapter.route",
                            "nameLocations": [
                              "1676:16:87",
                              "1693:5:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39210,
                            "src": "1676:22:87"
                          },
                          "referencedDeclaration": 39210,
                          "src": "1676:22:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_route_$39210_storage_ptr",
                            "typeString": "struct VelodromeAdapter.route"
                          }
                        },
                        "id": 43556,
                        "nodeType": "ArrayTypeName",
                        "src": "1676:24:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_route_$39210_storage_$dyn_storage_ptr",
                          "typeString": "struct VelodromeAdapter.route[]"
                        }
                      }
                    },
                    "id": 43559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1672:31:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_route_$39210_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct VelodromeAdapter.route memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1631:72:87"
                },
                {
                  "expression": {
                    "id": 43576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43561,
                        "name": "routes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43553,
                        "src": "1713:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_route_$39210_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct VelodromeAdapter.route memory[] memory"
                        }
                      },
                      "id": 43563,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1720:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1713:9:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_route_$39210_memory_ptr",
                        "typeString": "struct VelodromeAdapter.route memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307837463563373634634263313466393636394238383833376361313439306343613137633331363037",
                              "id": 43568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1769:42:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x7F5c764cBc14f9669B88837ca1490cCa17c31607"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 43567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1761:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 43566,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1761:7:87",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 43569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1761:51:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
                              "id": 43572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1834:42:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x4200000000000000000000000000000000000006"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 43571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1826:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 43570,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1826:7:87",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 43573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1826:51:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 43574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1891:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 43564,
                          "name": "VelodromeAdapter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39897,
                          "src": "1725:16:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VelodromeAdapter_$39897_$",
                            "typeString": "type(contract VelodromeAdapter)"
                          }
                        },
                        "id": 43565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1742:5:87",
                        "memberName": "route",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39210,
                        "src": "1725:22:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_route_$39210_storage_ptr_$",
                          "typeString": "type(struct VelodromeAdapter.route storage pointer)"
                        }
                      },
                      "id": 43575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1725:181:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_route_$39210_memory_ptr",
                        "typeString": "struct VelodromeAdapter.route memory"
                      }
                    },
                    "src": "1713:193:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_route_$39210_memory_ptr",
                      "typeString": "struct VelodromeAdapter.route memory"
                    }
                  },
                  "id": 43577,
                  "nodeType": "ExpressionStatement",
                  "src": "1713:193:87"
                },
                {
                  "assignments": [
                    43583
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43583,
                      "mutability": "mutable",
                      "name": "srcParams",
                      "nameLocation": "1957:9:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 43698,
                      "src": "1916:50:87",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$36308_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OptimismSwaps.SrcTransferParams[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43581,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 43580,
                            "name": "OptimismSwaps.SrcTransferParams",
                            "nameLocations": [
                              "1916:13:87",
                              "1930:17:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36308,
                            "src": "1916:31:87"
                          },
                          "referencedDeclaration": 36308,
                          "src": "1916:31:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SrcTransferParams_$36308_storage_ptr",
                            "typeString": "struct OptimismSwaps.SrcTransferParams"
                          }
                        },
                        "id": 43582,
                        "nodeType": "ArrayTypeName",
                        "src": "1916:33:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$36308_storage_$dyn_storage_ptr",
                          "typeString": "struct OptimismSwaps.SrcTransferParams[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43590,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2008:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 43587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1969:38:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SrcTransferParams_$36308_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct OptimismSwaps.SrcTransferParams memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43585,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 43584,
                            "name": "OptimismSwaps.SrcTransferParams",
                            "nameLocations": [
                              "1974:13:87",
                              "1988:17:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36308,
                            "src": "1974:31:87"
                          },
                          "referencedDeclaration": 36308,
                          "src": "1974:31:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SrcTransferParams_$36308_storage_ptr",
                            "typeString": "struct OptimismSwaps.SrcTransferParams"
                          }
                        },
                        "id": 43586,
                        "nodeType": "ArrayTypeName",
                        "src": "1974:33:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$36308_storage_$dyn_storage_ptr",
                          "typeString": "struct OptimismSwaps.SrcTransferParams[]"
                        }
                      }
                    },
                    "id": 43589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1969:41:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$36308_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OptimismSwaps.SrcTransferParams memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1916:94:87"
                },
                {
                  "expression": {
                    "id": 43617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43591,
                        "name": "srcParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43583,
                        "src": "2020:9:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$36308_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OptimismSwaps.SrcTransferParams memory[] memory"
                        }
                      },
                      "id": 43593,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2030:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2020:12:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SrcTransferParams_$36308_memory_ptr",
                        "typeString": "struct OptimismSwaps.SrcTransferParams memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
                              "id": 43598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2096:42:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x4200000000000000000000000000000000000006"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 43597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2088:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 43596,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2088:7:87",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 43599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2088:51:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307844343731416543366337313333373966306239323846413863623830623937363143643937303864",
                              "id": 43602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2171:42:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0xD471AeC6c713379f0b928FA8cb80b9761Cd9708d"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 43601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2163:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 43600,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2163:7:87",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 43603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2163:51:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 43613,
                                  "name": "swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43382,
                                  "src": "2314:5:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimismSwaps_$36899",
                                    "typeString": "contract OptimismSwaps"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OptimismSwaps_$36899",
                                    "typeString": "contract OptimismSwaps"
                                  }
                                ],
                                "id": 43612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2306:7:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 43611,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2306:7:87",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 43614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2306:14:87",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
                                      "id": 43607,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2251:42:87",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "value": "0x4200000000000000000000000000000000000006"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 43606,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2243:7:87",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 43605,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2243:7:87",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 43608,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2243:51:87",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 43604,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27644,
                                "src": "2236:6:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$27644_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 43609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2236:59:87",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$27644",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 43610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2296:9:87",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27601,
                            "src": "2236:69:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 43615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2236:85:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 43594,
                          "name": "OptimismSwaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36899,
                          "src": "2035:13:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OptimismSwaps_$36899_$",
                            "typeString": "type(contract OptimismSwaps)"
                          }
                        },
                        "id": 43595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2049:17:87",
                        "memberName": "SrcTransferParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36308,
                        "src": "2035:31:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SrcTransferParams_$36308_storage_ptr_$",
                          "typeString": "type(struct OptimismSwaps.SrcTransferParams storage pointer)"
                        }
                      },
                      "id": 43616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "2081:5:87",
                        "2153:8:87",
                        "2228:6:87"
                      ],
                      "names": [
                        "token",
                        "receiver",
                        "amount"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2035:297:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SrcTransferParams_$36308_memory_ptr",
                        "typeString": "struct OptimismSwaps.SrcTransferParams memory"
                      }
                    },
                    "src": "2020:312:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SrcTransferParams_$36308_memory_ptr",
                      "typeString": "struct OptimismSwaps.SrcTransferParams memory"
                    }
                  },
                  "id": 43618,
                  "nodeType": "ExpressionStatement",
                  "src": "2020:312:87"
                },
                {
                  "assignments": [
                    43624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43624,
                      "mutability": "mutable",
                      "name": "veloParams",
                      "nameLocation": "2379:10:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 43698,
                      "src": "2342:47:87",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_VeloParams_$39203_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct VelodromeAdapter.VeloParams[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43622,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 43621,
                            "name": "VelodromeAdapter.VeloParams",
                            "nameLocations": [
                              "2342:16:87",
                              "2359:10:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39203,
                            "src": "2342:27:87"
                          },
                          "referencedDeclaration": 39203,
                          "src": "2342:27:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VeloParams_$39203_storage_ptr",
                            "typeString": "struct VelodromeAdapter.VeloParams"
                          }
                        },
                        "id": 43623,
                        "nodeType": "ArrayTypeName",
                        "src": "2342:29:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_VeloParams_$39203_storage_$dyn_storage_ptr",
                          "typeString": "struct VelodromeAdapter.VeloParams[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43631,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2426:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 43628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2392:33:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_VeloParams_$39203_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct VelodromeAdapter.VeloParams memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43626,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 43625,
                            "name": "VelodromeAdapter.VeloParams",
                            "nameLocations": [
                              "2396:16:87",
                              "2413:10:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39203,
                            "src": "2396:27:87"
                          },
                          "referencedDeclaration": 39203,
                          "src": "2396:27:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VeloParams_$39203_storage_ptr",
                            "typeString": "struct VelodromeAdapter.VeloParams"
                          }
                        },
                        "id": 43627,
                        "nodeType": "ArrayTypeName",
                        "src": "2396:29:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_VeloParams_$39203_storage_$dyn_storage_ptr",
                          "typeString": "struct VelodromeAdapter.VeloParams[]"
                        }
                      }
                    },
                    "id": 43630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2392:36:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_VeloParams_$39203_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct VelodromeAdapter.VeloParams memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2342:86:87"
                },
                {
                  "expression": {
                    "id": 43645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43632,
                        "name": "veloParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43624,
                        "src": "2438:10:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_VeloParams_$39203_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct VelodromeAdapter.VeloParams memory[] memory"
                        }
                      },
                      "id": 43634,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2449:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2438:13:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VeloParams_$39203_memory_ptr",
                        "typeString": "struct VelodromeAdapter.VeloParams memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3130653130",
                          "id": 43637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2482:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000_by_1",
                            "typeString": "int_const 100000000000"
                          },
                          "value": "10e10"
                        },
                        {
                          "hexValue": "30",
                          "id": 43638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2489:1:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 43639,
                          "name": "routes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43553,
                          "src": "2492:6:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_route_$39210_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct VelodromeAdapter.route memory[] memory"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 43643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 43640,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2500:5:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 43641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2506:9:87",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2500:15:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 43642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2518:10:87",
                            "subdenomination": "minutes",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_600_by_1",
                              "typeString": "int_const 600"
                            },
                            "value": "10"
                          },
                          "src": "2500:28:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100000000000_by_1",
                            "typeString": "int_const 100000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_route_$39210_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct VelodromeAdapter.route memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 43635,
                          "name": "VelodromeAdapter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39897,
                          "src": "2454:16:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VelodromeAdapter_$39897_$",
                            "typeString": "type(contract VelodromeAdapter)"
                          }
                        },
                        "id": 43636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2471:10:87",
                        "memberName": "VeloParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39203,
                        "src": "2454:27:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_VeloParams_$39203_storage_ptr_$",
                          "typeString": "type(struct VelodromeAdapter.VeloParams storage pointer)"
                        }
                      },
                      "id": 43644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2454:75:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VeloParams_$39203_memory_ptr",
                        "typeString": "struct VelodromeAdapter.VeloParams memory"
                      }
                    },
                    "src": "2438:91:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VeloParams_$39203_memory_ptr",
                      "typeString": "struct VelodromeAdapter.VeloParams memory"
                    }
                  },
                  "id": 43646,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:91:87"
                },
                {
                  "expression": {
                    "id": 43654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43647,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43531,
                        "src": "2539:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 43649,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 43648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2544:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2539:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 43652,
                          "name": "veloParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43624,
                          "src": "2560:10:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_VeloParams_$39203_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct VelodromeAdapter.VeloParams memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_VeloParams_$39203_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct VelodromeAdapter.VeloParams memory[] memory"
                          }
                        ],
                        "expression": {
                          "id": 43650,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "2549:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 43651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2553:6:87",
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "2549:10:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 43653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2549:22:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2539:32:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 43655,
                  "nodeType": "ExpressionStatement",
                  "src": "2539:32:87"
                },
                {
                  "expression": {
                    "id": 43663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43656,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43531,
                        "src": "2581:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 43658,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 43657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2586:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2581:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 43661,
                          "name": "srcParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43583,
                          "src": "2602:9:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$36308_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OptimismSwaps.SrcTransferParams memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$36308_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OptimismSwaps.SrcTransferParams memory[] memory"
                          }
                        ],
                        "expression": {
                          "id": 43659,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "2591:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 43660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2595:6:87",
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "2591:10:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 43662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2591:21:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2581:31:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 43664,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:31:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43668,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43465,
                        "src": "2643:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      {
                        "id": 43669,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43531,
                        "src": "2650:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 43665,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43382,
                        "src": "2623:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimismSwaps_$36899",
                          "typeString": "contract OptimismSwaps"
                        }
                      },
                      "id": 43667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2629:13:87",
                      "memberName": "optimismSwaps",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36816,
                      "src": "2623:19:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint8[] memory,bytes memory[] memory) payable external"
                      }
                    },
                    "id": 43670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2623:32:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43671,
                  "nodeType": "ExpressionStatement",
                  "src": "2623:32:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 43679,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43382,
                                "src": "2743:5:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OptimismSwaps_$36899",
                                  "typeString": "contract OptimismSwaps"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OptimismSwaps_$36899",
                                  "typeString": "contract OptimismSwaps"
                                }
                              ],
                              "id": 43678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2735:7:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 43677,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2735:7:87",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 43680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2735:14:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
                                "id": 43674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2681:42:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0x4200000000000000000000000000000000000006"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 43673,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27644,
                              "src": "2674:6:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$27644_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 43675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2674:50:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$27644",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 43676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2725:9:87",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27601,
                          "src": "2674:60:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 43681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2674:76:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 43682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2752:7:87",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 43672,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3882,
                        3907,
                        3920,
                        3936,
                        3978,
                        4020,
                        4062,
                        4099,
                        4136,
                        4173,
                        1035,
                        1060,
                        1090,
                        1115,
                        1174,
                        1199,
                        1229,
                        1254,
                        2354,
                        2389
                      ],
                      "referencedDeclaration": 1229,
                      "src": "2665:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 43683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2665:95:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43684,
                  "nodeType": "ExpressionStatement",
                  "src": "2665:95:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "307844343731416543366337313333373966306239323846413863623830623937363143643937303864",
                                "id": 43692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2878:42:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0xD471AeC6c713379f0b928FA8cb80b9761Cd9708d"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 43691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2870:7:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 43690,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2870:7:87",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 43693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2870:51:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
                                "id": 43687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2799:42:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0x4200000000000000000000000000000000000006"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 43686,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27644,
                              "src": "2792:6:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$27644_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 43688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2792:50:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$27644",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 43689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2843:9:87",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27601,
                          "src": "2792:60:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 43694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2792:143:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 43695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2949:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 43685,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1408,
                        1433,
                        1463,
                        1488
                      ],
                      "referencedDeclaration": 1408,
                      "src": "2770:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 43696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2770:190:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43697,
                  "nodeType": "ExpressionStatement",
                  "src": "2770:190:87"
                }
              ]
            },
            "functionSelector": "b063649b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testVelo",
            "nameLocation": "1094:8:87",
            "parameters": {
              "id": 43448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1102:2:87"
            },
            "returnParameters": {
              "id": 43449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1112:0:87"
            },
            "scope": 43844,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43843,
            "nodeType": "FunctionDefinition",
            "src": "2973:1209:87",
            "nodes": [],
            "body": {
              "id": 43842,
              "nodeType": "Block",
              "src": "3015:1167:87",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    43706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43706,
                      "mutability": "mutable",
                      "name": "steps",
                      "nameLocation": "3040:5:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 43842,
                      "src": "3025:20:87",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43704,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3025:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 43705,
                        "nodeType": "ArrayTypeName",
                        "src": "3025:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43712,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 43710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3060:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 43709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3048:11:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43707,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3052:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 43708,
                        "nodeType": "ArrayTypeName",
                        "src": "3052:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 43711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3048:14:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3025:37:87"
                },
                {
                  "assignments": [
                    43717
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43717,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3087:4:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 43842,
                      "src": "3072:19:87",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43715,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3072:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 43716,
                        "nodeType": "ArrayTypeName",
                        "src": "3072:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43723,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 43721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3106:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 43720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3094:11:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43718,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3098:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 43719,
                        "nodeType": "ArrayTypeName",
                        "src": "3098:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 43722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3094:14:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3072:36:87"
                },
                {
                  "expression": {
                    "id": 43728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43724,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43706,
                        "src": "3119:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 43726,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3125:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3119:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 43727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3130:1:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "3119:12:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 43729,
                  "nodeType": "ExpressionStatement",
                  "src": "3119:12:87"
                },
                {
                  "expression": {
                    "id": 43734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43730,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43706,
                        "src": "3141:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 43732,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 43731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3147:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3141:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "34",
                      "id": 43733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3152:1:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "3141:12:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 43735,
                  "nodeType": "ExpressionStatement",
                  "src": "3141:12:87"
                },
                {
                  "expression": {
                    "id": 43740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43736,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43706,
                        "src": "3163:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 43738,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 43737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3169:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3163:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3134",
                      "id": 43739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3174:2:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_14_by_1",
                        "typeString": "int_const 14"
                      },
                      "value": "14"
                    },
                    "src": "3163:13:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 43741,
                  "nodeType": "ExpressionStatement",
                  "src": "3163:13:87"
                },
                {
                  "assignments": [
                    43747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43747,
                      "mutability": "mutable",
                      "name": "multiHopParams",
                      "nameLocation": "3225:14:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 43842,
                      "src": "3187:52:87",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_UniswapV3Multi_$38965_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct UniswapAdapter.UniswapV3Multi[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43745,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 43744,
                            "name": "OptimismSwaps.UniswapV3Multi",
                            "nameLocations": [
                              "3187:13:87",
                              "3201:14:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 38965,
                            "src": "3187:28:87"
                          },
                          "referencedDeclaration": 38965,
                          "src": "3187:28:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UniswapV3Multi_$38965_storage_ptr",
                            "typeString": "struct UniswapAdapter.UniswapV3Multi"
                          }
                        },
                        "id": 43746,
                        "nodeType": "ArrayTypeName",
                        "src": "3187:30:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_UniswapV3Multi_$38965_storage_$dyn_storage_ptr",
                          "typeString": "struct UniswapAdapter.UniswapV3Multi[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43754,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3277:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 43751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3242:34:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UniswapV3Multi_$38965_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct UniswapAdapter.UniswapV3Multi memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43749,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 43748,
                            "name": "OptimismSwaps.UniswapV3Multi",
                            "nameLocations": [
                              "3246:13:87",
                              "3260:14:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 38965,
                            "src": "3246:28:87"
                          },
                          "referencedDeclaration": 38965,
                          "src": "3246:28:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UniswapV3Multi_$38965_storage_ptr",
                            "typeString": "struct UniswapAdapter.UniswapV3Multi"
                          }
                        },
                        "id": 43750,
                        "nodeType": "ArrayTypeName",
                        "src": "3246:30:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_UniswapV3Multi_$38965_storage_$dyn_storage_ptr",
                          "typeString": "struct UniswapAdapter.UniswapV3Multi[]"
                        }
                      }
                    },
                    "id": 43753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:37:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_UniswapV3Multi_$38965_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct UniswapAdapter.UniswapV3Multi memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3187:92:87"
                },
                {
                  "expression": {
                    "id": 43777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43755,
                        "name": "multiHopParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43747,
                        "src": "3289:14:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_UniswapV3Multi_$38965_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct UniswapAdapter.UniswapV3Multi memory[] memory"
                        }
                      },
                      "id": 43757,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3304:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3289:17:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UniswapV3Multi_$38965_memory_ptr",
                        "typeString": "struct UniswapAdapter.UniswapV3Multi memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3130",
                          "id": 43760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3363:8:87",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "hexValue": "30",
                          "id": 43761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3399:1:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
                              "id": 43764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3430:42:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x4200000000000000000000000000000000000006"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 43763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3422:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 43762,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3422:7:87",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 43765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3422:51:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307837463563373634634263313466393636394238383833376361313439306343613137633331363037",
                              "id": 43768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3503:42:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x7F5c764cBc14f9669B88837ca1490cCa17c31607"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 43767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3495:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 43766,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3495:7:87",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 43769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3495:51:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307844413130303039634264354430376464304365436336363136314643393344376339303030646131",
                              "id": 43772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3576:42:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 43771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3568:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 43770,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3568:7:87",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 43773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3568:51:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "353030",
                          "id": 43774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3639:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          "value": "500"
                        },
                        {
                          "hexValue": "353030",
                          "id": 43775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3662:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          "value": "500"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          }
                        ],
                        "expression": {
                          "id": 43758,
                          "name": "UniswapAdapter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39182,
                          "src": "3309:14:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UniswapAdapter_$39182_$",
                            "typeString": "type(contract UniswapAdapter)"
                          }
                        },
                        "id": 43759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3324:14:87",
                        "memberName": "UniswapV3Multi",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38965,
                        "src": "3309:29:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_UniswapV3Multi_$38965_storage_ptr_$",
                          "typeString": "type(struct UniswapAdapter.UniswapV3Multi storage pointer)"
                        }
                      },
                      "id": 43776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3353:8:87",
                        "3385:12:87",
                        "3414:6:87",
                        "3487:6:87",
                        "3560:6:87",
                        "3633:4:87",
                        "3656:4:87"
                      ],
                      "names": [
                        "amountIn",
                        "amountOutMin",
                        "token1",
                        "token2",
                        "token3",
                        "fee1",
                        "fee2"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3309:367:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UniswapV3Multi_$38965_memory_ptr",
                        "typeString": "struct UniswapAdapter.UniswapV3Multi memory"
                      }
                    },
                    "src": "3289:387:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UniswapV3Multi_$38965_memory_ptr",
                      "typeString": "struct UniswapAdapter.UniswapV3Multi memory"
                    }
                  },
                  "id": 43778,
                  "nodeType": "ExpressionStatement",
                  "src": "3289:387:87"
                },
                {
                  "assignments": [
                    43784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43784,
                      "mutability": "mutable",
                      "name": "transferParams",
                      "nameLocation": "3728:14:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 43842,
                      "src": "3687:55:87",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$36308_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OptimismSwaps.SrcTransferParams[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43782,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 43781,
                            "name": "OptimismSwaps.SrcTransferParams",
                            "nameLocations": [
                              "3687:13:87",
                              "3701:17:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36308,
                            "src": "3687:31:87"
                          },
                          "referencedDeclaration": 36308,
                          "src": "3687:31:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SrcTransferParams_$36308_storage_ptr",
                            "typeString": "struct OptimismSwaps.SrcTransferParams"
                          }
                        },
                        "id": 43783,
                        "nodeType": "ArrayTypeName",
                        "src": "3687:33:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$36308_storage_$dyn_storage_ptr",
                          "typeString": "struct OptimismSwaps.SrcTransferParams[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43791,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3783:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 43788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3745:37:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SrcTransferParams_$36308_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct OptimismSwaps.SrcTransferParams memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 43786,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 43785,
                            "name": "OptimismSwaps.SrcTransferParams",
                            "nameLocations": [
                              "3749:13:87",
                              "3763:17:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36308,
                            "src": "3749:31:87"
                          },
                          "referencedDeclaration": 36308,
                          "src": "3749:31:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SrcTransferParams_$36308_storage_ptr",
                            "typeString": "struct OptimismSwaps.SrcTransferParams"
                          }
                        },
                        "id": 43787,
                        "nodeType": "ArrayTypeName",
                        "src": "3749:33:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$36308_storage_$dyn_storage_ptr",
                          "typeString": "struct OptimismSwaps.SrcTransferParams[]"
                        }
                      }
                    },
                    "id": 43790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3745:40:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$36308_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OptimismSwaps.SrcTransferParams memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3687:98:87"
                },
                {
                  "expression": {
                    "id": 43804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43792,
                        "name": "transferParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43784,
                        "src": "3796:14:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$36308_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OptimismSwaps.SrcTransferParams memory[] memory"
                        }
                      },
                      "id": 43794,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3811:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3796:17:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SrcTransferParams_$36308_memory_ptr",
                        "typeString": "struct OptimismSwaps.SrcTransferParams memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307844413130303039634264354430376464304365436336363136314643393344376339303030646131",
                          "id": 43797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3869:42:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1"
                        },
                        {
                          "arguments": [
                            {
                              "id": 43800,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3943:4:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimismTest_$43844",
                                "typeString": "contract OptimismTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimismTest_$43844",
                                "typeString": "contract OptimismTest"
                              }
                            ],
                            "id": 43799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3935:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 43798,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3935:7:87",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 43801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3935:13:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 43802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3970:1:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 43795,
                          "name": "OptimismSwaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36899,
                          "src": "3816:13:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OptimismSwaps_$36899_$",
                            "typeString": "type(contract OptimismSwaps)"
                          }
                        },
                        "id": 43796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3830:17:87",
                        "memberName": "SrcTransferParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36308,
                        "src": "3816:31:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SrcTransferParams_$36308_storage_ptr_$",
                          "typeString": "type(struct OptimismSwaps.SrcTransferParams storage pointer)"
                        }
                      },
                      "id": 43803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3862:5:87",
                        "3925:8:87",
                        "3962:6:87"
                      ],
                      "names": [
                        "token",
                        "receiver",
                        "amount"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3816:166:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SrcTransferParams_$36308_memory_ptr",
                        "typeString": "struct OptimismSwaps.SrcTransferParams memory"
                      }
                    },
                    "src": "3796:186:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SrcTransferParams_$36308_memory_ptr",
                      "typeString": "struct OptimismSwaps.SrcTransferParams memory"
                    }
                  },
                  "id": 43805,
                  "nodeType": "ExpressionStatement",
                  "src": "3796:186:87"
                },
                {
                  "expression": {
                    "id": 43813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43806,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43717,
                        "src": "3993:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 43808,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3998:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3993:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3130",
                          "id": 43811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4014:8:87",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 43809,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "4003:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 43810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4007:6:87",
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "4003:10:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 43812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4003:20:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3993:30:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 43814,
                  "nodeType": "ExpressionStatement",
                  "src": "3993:30:87"
                },
                {
                  "expression": {
                    "id": 43822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43815,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43717,
                        "src": "4033:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 43817,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 43816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4038:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4033:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 43820,
                          "name": "multiHopParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43747,
                          "src": "4054:14:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_UniswapV3Multi_$38965_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct UniswapAdapter.UniswapV3Multi memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_UniswapV3Multi_$38965_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct UniswapAdapter.UniswapV3Multi memory[] memory"
                          }
                        ],
                        "expression": {
                          "id": 43818,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "4043:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 43819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4047:6:87",
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "4043:10:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 43821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4043:26:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "4033:36:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 43823,
                  "nodeType": "ExpressionStatement",
                  "src": "4033:36:87"
                },
                {
                  "expression": {
                    "id": 43831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43824,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43717,
                        "src": "4079:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 43826,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 43825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4084:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4079:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 43829,
                          "name": "transferParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43784,
                          "src": "4100:14:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$36308_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OptimismSwaps.SrcTransferParams memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_struct$_SrcTransferParams_$36308_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OptimismSwaps.SrcTransferParams memory[] memory"
                          }
                        ],
                        "expression": {
                          "id": 43827,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "4089:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 43828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4093:6:87",
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "4089:10:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 43830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4089:26:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "4079:36:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 43832,
                  "nodeType": "ExpressionStatement",
                  "src": "4079:36:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43838,
                        "name": "steps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43706,
                        "src": "4163:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      {
                        "id": 43839,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43717,
                        "src": "4170:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        ],
                        "expression": {
                          "id": 43833,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43382,
                          "src": "4126:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimismSwaps_$36899",
                            "typeString": "contract OptimismSwaps"
                          }
                        },
                        "id": 43835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4132:13:87",
                        "memberName": "optimismSwaps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36816,
                        "src": "4126:19:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
                          "typeString": "function (uint8[] memory,bytes memory[] memory) payable external"
                        }
                      },
                      "id": 43837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130",
                          "id": 43836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4153:8:87",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        }
                      ],
                      "src": "4126:36:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$value",
                        "typeString": "function (uint8[] memory,bytes memory[] memory) payable external"
                      }
                    },
                    "id": 43840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4126:49:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43841,
                  "nodeType": "ExpressionStatement",
                  "src": "4126:49:87"
                }
              ]
            },
            "functionSelector": "56f68044",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOptimismUniMultiHop",
            "nameLocation": "2982:23:87",
            "parameters": {
              "id": 43700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3005:2:87"
            },
            "returnParameters": {
              "id": 43701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3015:0:87"
            },
            "scope": 43844,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 43378,
              "name": "Test",
              "nameLocations": [
                "300:4:87"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5694,
              "src": "300:4:87"
            },
            "id": 43379,
            "nodeType": "InheritanceSpecifier",
            "src": "300:4:87"
          }
        ],
        "canonicalName": "OptimismTest",
        "contractDependencies": [
          36899,
          38472
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43844,
          5694,
          2764,
          2501
        ],
        "name": "OptimismTest",
        "nameLocation": "284:12:87",
        "scope": 43845,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 87
}